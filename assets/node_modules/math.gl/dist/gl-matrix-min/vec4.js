'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _set = require('gl-vec4/set');

Object.defineProperty(exports, 'vec4_set', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_set).default;
  }
});

var _distance = require('gl-vec4/distance');

Object.defineProperty(exports, 'vec4_distance', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_distance).default;
  }
});

var _add = require('gl-vec4/add');

Object.defineProperty(exports, 'vec4_add', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_add).default;
  }
});

var _subtract = require('gl-vec4/subtract');

Object.defineProperty(exports, 'vec4_subtract', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_subtract).default;
  }
});

var _multiply = require('gl-vec4/multiply');

Object.defineProperty(exports, 'vec4_multiply', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_multiply).default;
  }
});

var _divide = require('gl-vec4/divide');

Object.defineProperty(exports, 'vec4_divide', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_divide).default;
  }
});

var _scale = require('gl-vec4/scale');

Object.defineProperty(exports, 'vec4_scale', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_scale).default;
  }
});

var _scaleAndAdd = require('gl-vec4/scaleAndAdd');

Object.defineProperty(exports, 'vec4_scaleAndAdd', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_scaleAndAdd).default;
  }
});

var _negate = require('gl-vec4/negate');

Object.defineProperty(exports, 'vec4_negate', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_negate).default;
  }
});

var _inverse = require('gl-vec4/inverse');

Object.defineProperty(exports, 'vec4_inverse', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_inverse).default;
  }
});

var _normalize = require('gl-vec4/normalize');

Object.defineProperty(exports, 'vec4_normalize', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_normalize).default;
  }
});

var _dot = require('gl-vec4/dot');

Object.defineProperty(exports, 'vec4_dot', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_dot).default;
  }
});

var _lerp = require('gl-vec4/lerp');

Object.defineProperty(exports, 'vec4_lerp', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_lerp).default;
  }
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nbC1tYXRyaXgtbWluL3ZlYzQuanMiXSwibmFtZXMiOlsiZGVmYXVsdCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7d0NBc0JRQSxPOzs7Ozs7Ozs7NkNBQ0FBLE87Ozs7Ozs7Ozt3Q0FDQUEsTzs7Ozs7Ozs7OzZDQUNBQSxPOzs7Ozs7Ozs7NkNBQ0FBLE87Ozs7Ozs7OzsyQ0FDQUEsTzs7Ozs7Ozs7OzBDQUNBQSxPOzs7Ozs7Ozs7Z0RBQ0FBLE87Ozs7Ozs7OzsyQ0FDQUEsTzs7Ozs7Ozs7OzRDQUNBQSxPOzs7Ozs7Ozs7OENBQ0FBLE87Ozs7Ozs7Ozt3Q0FDQUEsTzs7Ozs7Ozs7O3lDQUVBQSxPIiwiZmlsZSI6InZlYzQuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb3B5cmlnaHQgKGMpIDIwMTcgVWJlciBUZWNobm9sb2dpZXMsIEluYy5cbi8vXG4vLyBQZXJtaXNzaW9uIGlzIGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcgYSBjb3B5XG4vLyBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmlsZXMgKHRoZSBcIlNvZnR3YXJlXCIpLCB0byBkZWFsXG4vLyBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzXG4vLyB0byB1c2UsIGNvcHksIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsXG4vLyBjb3BpZXMgb2YgdGhlIFNvZnR3YXJlLCBhbmQgdG8gcGVybWl0IHBlcnNvbnMgdG8gd2hvbSB0aGUgU29mdHdhcmUgaXNcbi8vIGZ1cm5pc2hlZCB0byBkbyBzbywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6XG4vL1xuLy8gVGhlIGFib3ZlIGNvcHlyaWdodCBub3RpY2UgYW5kIHRoaXMgcGVybWlzc2lvbiBub3RpY2Ugc2hhbGwgYmUgaW5jbHVkZWQgaW5cbi8vIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3YXJlLlxuLy9cbi8vIFRIRSBTT0ZUV0FSRSBJUyBQUk9WSURFRCBcIkFTIElTXCIsIFdJVEhPVVQgV0FSUkFOVFkgT0YgQU5ZIEtJTkQsIEVYUFJFU1MgT1Jcbi8vIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxuLy8gRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFXG4vLyBBVVRIT1JTIE9SIENPUFlSSUdIVCBIT0xERVJTIEJFIExJQUJMRSBGT1IgQU5ZIENMQUlNLCBEQU1BR0VTIE9SIE9USEVSXG4vLyBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLFxuLy8gT1VUIE9GIE9SIElOIENPTk5FQ1RJT04gV0lUSCBUSEUgU09GVFdBUkUgT1IgVEhFIFVTRSBPUiBPVEhFUiBERUFMSU5HUyBJTlxuLy8gVEhFIFNPRlRXQVJFLlxuXG4vLyBnbC1tYXRyaXggaXMgdG9vIGJpZy4gQ2hlcnJ5LXBpY2sgaW5kaXZpZHVhbCBpbXBvcnRzIGZyb20gc3RhY2suZ2wgdmVyc2lvblxuLyogZXNsaW50LWRpc2FibGUgY2FtZWxjYXNlICovXG5leHBvcnQge2RlZmF1bHQgYXMgdmVjNF9zZXR9IGZyb20gJ2dsLXZlYzQvc2V0JztcbmV4cG9ydCB7ZGVmYXVsdCBhcyB2ZWM0X2Rpc3RhbmNlfSBmcm9tICdnbC12ZWM0L2Rpc3RhbmNlJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyB2ZWM0X2FkZH0gZnJvbSAnZ2wtdmVjNC9hZGQnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZlYzRfc3VidHJhY3R9IGZyb20gJ2dsLXZlYzQvc3VidHJhY3QnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZlYzRfbXVsdGlwbHl9IGZyb20gJ2dsLXZlYzQvbXVsdGlwbHknO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZlYzRfZGl2aWRlfSBmcm9tICdnbC12ZWM0L2RpdmlkZSc7XG5leHBvcnQge2RlZmF1bHQgYXMgdmVjNF9zY2FsZX0gZnJvbSAnZ2wtdmVjNC9zY2FsZSc7XG5leHBvcnQge2RlZmF1bHQgYXMgdmVjNF9zY2FsZUFuZEFkZH0gZnJvbSAnZ2wtdmVjNC9zY2FsZUFuZEFkZCc7XG5leHBvcnQge2RlZmF1bHQgYXMgdmVjNF9uZWdhdGV9IGZyb20gJ2dsLXZlYzQvbmVnYXRlJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyB2ZWM0X2ludmVyc2V9IGZyb20gJ2dsLXZlYzQvaW52ZXJzZSc7XG5leHBvcnQge2RlZmF1bHQgYXMgdmVjNF9ub3JtYWxpemV9IGZyb20gJ2dsLXZlYzQvbm9ybWFsaXplJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyB2ZWM0X2RvdH0gZnJvbSAnZ2wtdmVjNC9kb3QnO1xuLy8gZXhwb3J0IHtkZWZhdWx0IGFzIHZlYzRfY3Jvc3N9IGZyb20gJ2dsLXZlYzQvY3Jvc3MnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIHZlYzRfbGVycH0gZnJvbSAnZ2wtdmVjNC9sZXJwJztcbiJdfQ==