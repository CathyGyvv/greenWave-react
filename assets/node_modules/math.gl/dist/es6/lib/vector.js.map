{"version":3,"sources":["../../../src/lib/vector.js"],"names":["MathArray","checkNumber","assert","x","m","Error","Vector","len","Math","sqrt","lengthSquared","magnitude","length","i","ELEMENTS","distance","mathArray","distanceSquared","dist","dot","product","normalize","check","add","vectors","vector","subtract","multiply","divide","scale","Array","isArray","scaleAndAdd","lengthSq","distanceTo","distanceToSquared","getComponent","setComponent","value","addVectors","a","b","copy","subVectors","multiplyVectors","addScaledVector","constructor","multiplyScalar"],"mappings":"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","sourcesContent":["import MathArray from './math-array';\nimport {checkNumber} from './common';\n// import assert from 'assert';\nconst assert = (x, m) => {\n  if (!x) {\n    throw new Error(m);\n  }\n};\n\nexport default class Vector extends MathArray {\n  // ACCESSORS\n\n  // NOTE: `length` is a reserved word for Arrays, so we can't use `v.length()`\n  // Offer `len` and `magnitude`\n\n  len() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  magnitude() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  lengthSquared() {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n    return length;\n  }\n\n  distance(mathArray) {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray) {\n    let length = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n    return checkNumber(length);\n  }\n\n  dot(mathArray) {\n    let product = 0;\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n    return checkNumber(product);\n  }\n\n  // MODIFIERS\n\n  normalize() {\n    const length = this.magnitude();\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n    return this.check();\n  }\n\n  // negate() {\n  //   for (let i = 0; i < this.ELEMENTS; ++i) {\n  //     this[i] = -this[i];\n  //   }\n  //   return this.check();\n  // }\n\n  // inverse() {\n  //   for (let i = 0; i < this.ELEMENTS; ++i) {\n  //     this[i] = 1 / this[i];\n  //   }\n  //   return this.check();\n  // }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  divide(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Array.isArray(scale)) {\n      return this.multiply(scale);\n    }\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scale;\n    }\n    return this.check();\n  }\n\n  scaleAndAdd(vector, scale) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = this[i] * scale + vector[i];\n    }\n    return this.check();\n  }\n\n  // THREE.js compatibility\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  distanceTo(vector) {\n    return this.distance(vector);\n  }\n\n  distanceToSquared(vector) {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i, value) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a, b) {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a, b) {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a, b) {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a, b) {\n    return this.add(new this.constructor(a).multiplyScalar(b));\n  }\n}\n"],"file":"vector.js"}