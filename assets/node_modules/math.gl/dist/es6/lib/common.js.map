{"version":3,"sources":["../../../src/lib/common.js"],"names":["config","EPSILON","debug","precision","printTypes","printDegrees","printRowMajor","configure","options","epsilon","checkNumber","value","Number","isFinite","Error","round","Math","formatValue","parseFloat","toPrecision","formatAngle","printAngles","degrees","isArray","Array","ArrayBuffer","isView","length","undefined","clone","array","map","func","result","i","radians","PI","sin","angle","cos","tan","asin","acos","atan","clamp","min","max","lerp","a","b","t","ai","equals","abs"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable no-shadow */\n// TODO - remove\nconst config = {};\nconfig.EPSILON = 1e-12;\nconfig.debug = true;\nconfig.precision = 4;\nconfig.printTypes = false;\nconfig.printDegrees = false;\nconfig.printRowMajor = true;\n\nexport {config};\n\nexport function configure(options) {\n  if ('epsilon' in options) {\n    config.EPSILON = options.epsilon;\n  }\n\n  if ('debug' in options) {\n    config.debug = options.debug;\n  }\n}\n\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(`Invalid number ${value}`);\n  }\n  return value;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nexport function formatValue(value, {precision = config.precision || 4} = {}) {\n  value = round(value);\n  return parseFloat(value.toPrecision(precision));\n}\n\nexport function formatAngle(\n  value,\n  {precision = config.precision || 4, printDegrees = config.printAngles} = {}\n) {\n  value = printDegrees ? degrees(value) : value;\n  value = round(value);\n  return `${parseFloat(value.toPrecision(precision))}${printDegrees ? 'Â°' : ''}`;\n}\n\n// Returns true if value is either an array or a typed array\n// Note: does not return true for ArrayBuffers and DataViews\nexport function isArray(value) {\n  return Array.isArray(value) || (ArrayBuffer.isView(value) && value.length !== undefined);\n}\n\n// If the array has a clone function, calls it, otherwise returns a copy\nexport function clone(array) {\n  return array.clone ? array.clone() : new Array(array);\n}\n\n// If the argument value is an array, applies the func element wise,\n// otherwise applies func to the argument value\nfunction map(value, func) {\n  if (isArray(value)) {\n    const result = clone(value);\n    for (let i = 0; i < result.length; ++i) {\n      result[i] = func(result[i], i, result);\n    }\n    return result;\n  }\n  return func(value);\n}\n\n//\n// GLSL math function equivalents\n// Works on both single values and vectors\n//\n\nexport function radians(degrees) {\n  return map(degrees, degrees => degrees / 180 * Math.PI);\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function degrees(radians) {\n  return map(radians, radians => radians * 180 / Math.PI);\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function sin(radians) {\n  return map(radians, angle => Math.sin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function cos(radians) {\n  return map(radians, angle => Math.cos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function tan(radians) {\n  return map(radians, angle => Math.tan(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function asin(radians) {\n  return map(radians, angle => Math.asin(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function acos(radians) {\n  return map(radians, angle => Math.acos(angle));\n}\n\n// GLSL equivalent: Works on single values and vectors\nexport function atan(radians) {\n  return map(radians, angle => Math.atan(angle));\n}\n\nexport function clamp(value, min, max) {\n  return map(value, value => Math.max(min, Math.min(max, value)));\n}\n\n// Interpolate between two numbers or two arrays\nexport function lerp(a, b, t) {\n  if (Array.isArray(a)) {\n    return a.map((ai, i) => lerp(ai, b[i], t));\n  }\n  return t * b + (1 - t) * a;\n}\n\nexport function equals(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a === b) {\n      return true;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!equals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return Math.abs(a - b) <= config.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n"],"file":"common.js"}