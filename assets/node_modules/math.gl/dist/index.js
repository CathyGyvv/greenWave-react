'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.experimental = exports.equals = exports.clamp = exports.atan = exports.acos = exports.asin = exports.tan = exports.cos = exports.sin = exports.degrees = exports.radians = exports.clone = exports.isArray = exports.formatValue = exports.configure = exports.checkNumber = exports.config = exports.Quaternion = exports.Matrix4 = exports.Vector4 = exports.Vector3 = exports.Vector2 = undefined;

var _vector = require('./vector2');

Object.defineProperty(exports, 'Vector2', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_vector).default;
  }
});

var _vector2 = require('./vector3');

Object.defineProperty(exports, 'Vector3', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_vector2).default;
  }
});

var _vector3 = require('./vector4');

Object.defineProperty(exports, 'Vector4', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_vector3).default;
  }
});

var _matrix = require('./matrix4');

Object.defineProperty(exports, 'Matrix4', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_matrix).default;
  }
});

var _quaternion = require('./quaternion');

Object.defineProperty(exports, 'Quaternion', {
  enumerable: true,
  get: function get() {
    return _interopRequireDefault(_quaternion).default;
  }
});

var _common = require('./common');

Object.defineProperty(exports, 'config', {
  enumerable: true,
  get: function get() {
    return _common.config;
  }
});
Object.defineProperty(exports, 'checkNumber', {
  enumerable: true,
  get: function get() {
    return _common.checkNumber;
  }
});
Object.defineProperty(exports, 'configure', {
  enumerable: true,
  get: function get() {
    return _common.configure;
  }
});
Object.defineProperty(exports, 'formatValue', {
  enumerable: true,
  get: function get() {
    return _common.formatValue;
  }
});
Object.defineProperty(exports, 'isArray', {
  enumerable: true,
  get: function get() {
    return _common.isArray;
  }
});
Object.defineProperty(exports, 'clone', {
  enumerable: true,
  get: function get() {
    return _common.clone;
  }
});
Object.defineProperty(exports, 'radians', {
  enumerable: true,
  get: function get() {
    return _common.radians;
  }
});
Object.defineProperty(exports, 'degrees', {
  enumerable: true,
  get: function get() {
    return _common.degrees;
  }
});
Object.defineProperty(exports, 'sin', {
  enumerable: true,
  get: function get() {
    return _common.sin;
  }
});
Object.defineProperty(exports, 'cos', {
  enumerable: true,
  get: function get() {
    return _common.cos;
  }
});
Object.defineProperty(exports, 'tan', {
  enumerable: true,
  get: function get() {
    return _common.tan;
  }
});
Object.defineProperty(exports, 'asin', {
  enumerable: true,
  get: function get() {
    return _common.asin;
  }
});
Object.defineProperty(exports, 'acos', {
  enumerable: true,
  get: function get() {
    return _common.acos;
  }
});
Object.defineProperty(exports, 'atan', {
  enumerable: true,
  get: function get() {
    return _common.atan;
  }
});
Object.defineProperty(exports, 'clamp', {
  enumerable: true,
  get: function get() {
    return _common.clamp;
  }
});
Object.defineProperty(exports, 'equals', {
  enumerable: true,
  get: function get() {
    return _common.equals;
  }
});

var _euler = require('./euler');

var _euler2 = _interopRequireDefault(_euler);

var _sphericalCoordinates = require('./spherical-coordinates');

var _sphericalCoordinates2 = _interopRequireDefault(_sphericalCoordinates);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Experimental exports


var experimental = exports.experimental = { Euler: _euler2.default, SphericalCoordinates: _sphericalCoordinates2.default };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJkZWZhdWx0IiwiY29uZmlnIiwiY2hlY2tOdW1iZXIiLCJjb25maWd1cmUiLCJmb3JtYXRWYWx1ZSIsImlzQXJyYXkiLCJjbG9uZSIsInJhZGlhbnMiLCJkZWdyZWVzIiwic2luIiwiY29zIiwidGFuIiwiYXNpbiIsImFjb3MiLCJhdGFuIiwiY2xhbXAiLCJlcXVhbHMiLCJleHBlcmltZW50YWwiLCJFdWxlciIsIlNwaGVyaWNhbENvb3JkaW5hdGVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7MkNBdUJRQSxPOzs7Ozs7Ozs7NENBQ0FBLE87Ozs7Ozs7Ozs0Q0FDQUEsTzs7Ozs7Ozs7OzJDQUNBQSxPOzs7Ozs7Ozs7K0NBQ0FBLE87Ozs7Ozs7OzttQkFJTkMsTTs7Ozs7O21CQUNBQyxXOzs7Ozs7bUJBQ0FDLFM7Ozs7OzttQkFDQUMsVzs7Ozs7O21CQUNBQyxPOzs7Ozs7bUJBQ0FDLEs7Ozs7OzttQkFDQUMsTzs7Ozs7O21CQUNBQyxPOzs7Ozs7bUJBQ0FDLEc7Ozs7OzttQkFDQUMsRzs7Ozs7O21CQUNBQyxHOzs7Ozs7bUJBQ0FDLEk7Ozs7OzttQkFDQUMsSTs7Ozs7O21CQUNBQyxJOzs7Ozs7bUJBQ0FDLEs7Ozs7OzttQkFDQUMsTTs7OztBQUlGOzs7O0FBQ0E7Ozs7OztBQUZBOzs7QUFHTyxJQUFNQyxzQ0FBZSxFQUFDQyxzQkFBRCxFQUFRQyxvREFBUixFQUFyQiIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoYykgMjAxNyBVYmVyIFRlY2hub2xvZ2llcywgSW5jLlxuLy9cbi8vIFBlcm1pc3Npb24gaXMgaGVyZWJ5IGdyYW50ZWQsIGZyZWUgb2YgY2hhcmdlLCB0byBhbnkgcGVyc29uIG9idGFpbmluZyBhIGNvcHlcbi8vIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBmaWxlcyAodGhlIFwiU29mdHdhcmVcIiksIHRvIGRlYWxcbi8vIGluIHRoZSBTb2Z0d2FyZSB3aXRob3V0IHJlc3RyaWN0aW9uLCBpbmNsdWRpbmcgd2l0aG91dCBsaW1pdGF0aW9uIHRoZSByaWdodHNcbi8vIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGxcbi8vIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZSBpc1xuLy8gZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcbi8vXG4vLyBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpblxuLy8gYWxsIGNvcGllcyBvciBzdWJzdGFudGlhbCBwb3J0aW9ucyBvZiB0aGUgU29mdHdhcmUuXG4vL1xuLy8gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIFwiQVMgSVNcIiwgV0lUSE9VVCBXQVJSQU5UWSBPRiBBTlkgS0lORCwgRVhQUkVTUyBPUlxuLy8gSU1QTElFRCwgSU5DTFVESU5HIEJVVCBOT1QgTElNSVRFRCBUTyBUSEUgV0FSUkFOVElFUyBPRiBNRVJDSEFOVEFCSUxJVFksXG4vLyBGSVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEVcbi8vIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sIERBTUFHRVMgT1IgT1RIRVJcbi8vIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sXG4vLyBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOXG4vLyBUSEUgU09GVFdBUkUuXG5cbi8vIFRPRE8gZXhwb3J0IHJhdyBnbC1tYXRyaXhcblxuLy8gbWF0aC5nbCBjbGFzc2VzXG5leHBvcnQge2RlZmF1bHQgYXMgVmVjdG9yMn0gZnJvbSAnLi92ZWN0b3IyJztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBWZWN0b3IzfSBmcm9tICcuL3ZlY3RvcjMnO1xuZXhwb3J0IHtkZWZhdWx0IGFzIFZlY3RvcjR9IGZyb20gJy4vdmVjdG9yNCc7XG5leHBvcnQge2RlZmF1bHQgYXMgTWF0cml4NH0gZnJvbSAnLi9tYXRyaXg0JztcbmV4cG9ydCB7ZGVmYXVsdCBhcyBRdWF0ZXJuaW9ufSBmcm9tICcuL3F1YXRlcm5pb24nO1xuXG4vLyBtYXRoLmdsIFwiR0xTTFwiIGZ1bmN0aW9uc1xuZXhwb3J0IHtcbiAgY29uZmlnLFxuICBjaGVja051bWJlcixcbiAgY29uZmlndXJlLFxuICBmb3JtYXRWYWx1ZSxcbiAgaXNBcnJheSxcbiAgY2xvbmUsXG4gIHJhZGlhbnMsXG4gIGRlZ3JlZXMsXG4gIHNpbixcbiAgY29zLFxuICB0YW4sXG4gIGFzaW4sXG4gIGFjb3MsXG4gIGF0YW4sXG4gIGNsYW1wLFxuICBlcXVhbHNcbn0gZnJvbSAnLi9jb21tb24nO1xuXG4vLyBFeHBlcmltZW50YWwgZXhwb3J0c1xuaW1wb3J0IHtkZWZhdWx0IGFzIEV1bGVyfSBmcm9tICcuL2V1bGVyJztcbmltcG9ydCB7ZGVmYXVsdCBhcyBTcGhlcmljYWxDb29yZGluYXRlc30gZnJvbSAnLi9zcGhlcmljYWwtY29vcmRpbmF0ZXMnO1xuZXhwb3J0IGNvbnN0IGV4cGVyaW1lbnRhbCA9IHtFdWxlciwgU3BoZXJpY2FsQ29vcmRpbmF0ZXN9O1xuIl19