{"version":3,"sources":["../../../src/test-utils/browser-automation/browser-driver.js"],"names":["log","Log","id","DEFAULT_CONFIG","process","parameters","port","options","maxBuffer","DEFAULT_PUPPETEER_OPTIONS","headless","BrowserDriver","execFile","module","require","puppeteer","console","child","browser","page","shellStatus","success","Promise","resolve","launch","then","url","width","height","message","color","COLOR","YELLOW","startBrowser","newPage","waitFor","goto","setViewport","name","exposeFunction","close","config","maxRetryTimes","newConfig","Object","assign","reject","timeout","setTimeout","error","clearTimeout","catch","startServer","RED","kill","exit","stopBrowser","stopServer","exitProcess"],"mappings":"miCAsBMA,KAAM,GAAIC,cAAJ,CAAQ,CAACC,GAAI,aAAL,CAAR,C,CAENC,eAAiB,CACrBC,QAAS,wCADY,CAErBC,WAAY,CAAC,UAAD,CAAa,mBAAb,CAFS,CAGrBC,KAAM,GAHe,CAIrBC,QAAS,CAACC,iBAAD,CAJY,C,CAOjBC,0BAA4B,CAChCC,WADgC,C,CAIbC,a,YACnB,wBAAc,qCACZ,KAAKC,QAAL,CAAgBC,OAAOC,OAAP,CAAe,eAAf,EAAgCF,QADpC,CAEZ,KAAKG,SAAL,CAAiBF,OAAOC,OAAP,CAAe,WAAf,CAFL,CAGZ,KAAKE,OAAL,CAAeH,OAAOC,OAAP,CAAe,SAAf,CAHH,CAIZ,KAAKV,OAAL,CAAeS,OAAOC,OAAP,CAAe,SAAf,CAJH,CAMZ,KAAKG,KAAL,CAAa,IAND,CAOZ,KAAKC,OAAL,CAAe,IAPH,CAQZ,KAAKC,IAAL,CAAY,IARA,CASZ,KAAKb,IAAL,CAAY,IATA,CAUZ,KAAKc,WAAL,CAAmB,CACpB,C,uFAEcC,O,CAAS,CAEtB,KAAKD,WAAL,CAAmBC,QAAU,CAAV,CAAc,CAClC,C,mDAEiD,gBAArCd,OAAqC,wDAA3BE,yBAA2B,OAC5C,MAAKS,OADuC,CAEvCI,QAAQC,OAAR,CAAgB,KAAKL,OAArB,CAFuC,CAIzC,KAAKH,SAAL,CACJS,MADI,CACGjB,OADH,EAEJkB,IAFI,CAEC,iBAAW,CACf,MAAKP,OAAL,CAAeA,OAChB,CAJI,CAKR,C,yCAEoE,6EAAJ,EAAI,eAA5DQ,GAA4D,CAA5DA,GAA4D,mBAAtD,kBAAsD,0BAAlCC,KAAkC,CAAlCA,KAAkC,qBAA1B,IAA0B,6BAApBC,MAAoB,CAApBA,MAAoB,sBAAX,GAAW,aAKnE,MAJA5B,KAAIA,GAAJ,CAAQ,CACN6B,+BAAgC,KAAKvB,IAD/B,CAENwB,MAAOC,aAAMC,MAFP,CAAR,GAIA,CAAO,KAAKC,YAAL,GACJR,IADI,CACC,iBAAK,QAAKP,OAAL,CAAagB,OAAb,EAAL,CADD,EAEJT,IAFI,CAEC,cAAQ,CACZ,OAAKN,IAAL,CAAYA,IACb,CAJI,EAKJM,IALI,CAKC,iBAAK,QAAKN,IAAL,CAAUgB,OAAV,CAAkB,GAAlB,CAAL,CALD,EAMJV,IANI,CAMC,iBAAK,QAAKN,IAAL,CAAUiB,IAAV,CAAkBV,GAAlB,KAAyB,OAAKpB,IAA9B,CAAL,CAND,EAOJmB,IAPI,CAOC,iBAAK,QAAKN,IAAL,CAAUkB,WAAV,CAAsB,CAACV,MAAO,IAAR,CAAcC,OAAQ,GAAtB,CAAtB,CAAL,CAPD,CAQR,C,uDAEuC,iBAAzBU,IAAyB,wDAAlB,gBAAkB,CACtC,MAAO,IAAIhB,QAAJ,CAAY,iBAAW,CAC5B,OAAKH,IAAL,CAAUoB,cAAV,CAAyBD,IAAzB,CAA+Bf,OAA/B,CACD,CAFM,CAGR,C,iDAEa,iBACZ,MAAOD,SAAQC,OAAR,GACJE,IADI,CACC,iBAAK,QAAKN,IAAL,CAAUgB,OAAV,CAAkB,GAAlB,CAAL,CADD,EAEJV,IAFI,CAEC,iBAAK,QAAKP,OAAL,CAAasB,KAAb,EAAL,CAFD,CAGR,C,iDAE4C,iBAAjCC,MAAiC,wDAAxB,EAAwB,CAApBC,aAAoB,wDAAJ,EAAI,CACrCC,UAAYC,OAAOC,MAAP,CAAc,EAAd,CAAkB1C,cAAlB,CAAkCsC,MAAlC,CADyB,CAE3C,MAAO,IAAInB,QAAJ,CAAY,SAACC,OAAD,CAAUuB,MAAV,CAAqB,CACtC9C,IAAIA,GAAJ,CAAQ,CACN6B,4BAA6Bc,UAAUrC,IADjC,CAENwB,MAAOC,aAAMC,MAFP,CAAR,GADsC,CAKtC,GAAMe,SAAUC,WAAW,UAAM,CAC/BzB,SACD,CAFe,CAEb,GAFa,CAAhB,CAGA,OAAKN,KAAL,CAAa,OAAKL,QAAL,CACX+B,UAAUvC,OADC,8BAEPuC,UAAUtC,UAFH,GAEe,QAFf,IAE4BsC,UAAUrC,IAFtC,GAGXqC,UAAUpC,OAHC,CAIX,eAAS,CACH0C,KADG,GAELC,aAAaH,OAAb,CAFK,CAGL/C,IAAIA,GAAJ,CAAQ,CACN6B,gCAAiCc,UAAUrC,IADrC,CAENwB,MAAOC,aAAMC,MAFP,CAAR,GAHK,CAOLc,OAAOG,KAAP,CAPK,CASR,CAbU,CAed,CAvBM,EAwBJxB,IAxBI,CAwBC,UAAM,CACV,OAAKnB,IAAL,CAAYqC,UAAUrC,IACvB,CA1BI,EA2BJ6C,KA3BI,CA2BE,eAAS,CACd,GAAoB,CAAhB,cAAJ,CAEE,MADAR,WAAUrC,IAAV,EACA,CAAO,OAAK8C,WAAL,CAAiBT,SAAjB,CAA4BD,cAAgB,CAA5C,CAAP,CAMA,KAJA1C,KAAIA,GAAJ,CAAQ,CACN6B,QAAS,wEADH,CAENC,MAAOC,aAAMsB,GAFP,CAAR,GAIA,CAAMJ,KAET,CAtCI,CAuCR,C,+CAEY,CACP,KAAKhC,KADE,GAET,KAAKA,KAAL,CAAWqC,IAAX,EAFS,CAGT,KAAKrC,KAAL,CAAa,IAHJ,CAKZ,C,iDAEa,CAEZ,KAAKb,OAAL,CAAamD,IAAb,CAAkB,KAAKnC,WAAvB,CACD,C,mCAEM,iBACL,MAAOE,SAAQC,OAAR,GACJE,IADI,CACC,iBAAM,QAAK+B,WAAL,EAAN,CADD,EAEJ/B,IAFI,CAEC,UAAM,CACV,OAAKgC,UAAL,EADU,CAEV,OAAKC,WAAL,EACD,CALI,CAMR,C,qCAvHkB/C,a","file":"browser-driver.js","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {COLOR} from '../../lib/utils/color';\nimport Log from '../../lib/log';\nconst log = new Log({id: 'render-test'});\n\nconst DEFAULT_CONFIG = {\n  process: './node_modules/.bin/webpack-dev-server',\n  parameters: ['--config', 'webpack.config.js'],\n  port: 5000,\n  options: {maxBuffer: 5000 * 1024}\n};\n\nconst DEFAULT_PUPPETEER_OPTIONS = {\n  headless: false\n};\n\nexport default class BrowserDriver {\n  constructor() {\n    this.execFile = module.require('child_process').execFile;\n    this.puppeteer = module.require('puppeteer');\n    this.console = module.require('console');\n    this.process = module.require('process');\n\n    this.child = null;\n    this.browser = null;\n    this.page = null;\n    this.port = null;\n    this.shellStatus = 0;\n  }\n\n  setShellStatus(success) {\n    // return value that is visible to the shell, 0 is success\n    this.shellStatus = success ? 0 : 1;\n  }\n\n  startBrowser(options = DEFAULT_PUPPETEER_OPTIONS) {\n    if (this.browser) {\n      return Promise.resolve(this.browser);\n    }\n    return this.puppeteer\n      .launch(options)\n      .then(browser => {\n        this.browser = browser;\n      });\n  }\n\n  newPage({url = 'http://localhost', width = 1550, height = 850} = {}) {\n    log.log({\n      message: `Connecting to port: ${this.port}`,\n      color: COLOR.YELLOW\n    })();\n    return this.startBrowser()\n      .then(_ => this.browser.newPage())\n      .then(page => {\n        this.page = page;\n      })\n      .then(_ => this.page.waitFor(1000))\n      .then(_ => this.page.goto(`${url}:${this.port}`))\n      .then(_ => this.page.setViewport({width: 1550, height: 850}));\n  }\n\n  exposeFunction(name = 'testDriverDone') {\n    return new Promise(resolve => {\n      this.page.exposeFunction(name, resolve);\n    });\n  }\n\n  stopBrowser() {\n    return Promise.resolve()\n      .then(_ => this.page.waitFor(1000))\n      .then(_ => this.browser.close());\n  }\n\n  startServer(config = {}, maxRetryTimes = 30) {\n    const newConfig = Object.assign({}, DEFAULT_CONFIG, config);\n    return new Promise((resolve, reject) => {\n      log.log({\n        message: `Binding to port: ${newConfig.port}`,\n        color: COLOR.YELLOW\n      })();\n      const timeout = setTimeout(() => { // eslint-disable-line\n        resolve();\n      }, 2000);\n      this.child = this.execFile(\n        newConfig.process,\n        [...newConfig.parameters, '--port', `${newConfig.port}`],\n        newConfig.options,\n        error => {\n          if (error) {\n            clearTimeout(timeout); // eslint-disable-line\n            log.log({\n              message: `Failed to bind port: ${newConfig.port}`,\n              color: COLOR.YELLOW\n            })();\n            reject(error);\n          }\n        }\n      );\n    })\n      .then(() => {\n        this.port = newConfig.port;\n      })\n      .catch(error => {\n        if (maxRetryTimes > 0) {\n          newConfig.port++;\n          return this.startServer(newConfig, maxRetryTimes - 1);\n        } else { // eslint-disable-line\n          log.log({\n            message: 'Failed to start server, use \\'killall node\\' to stop existing services',\n            color: COLOR.RED\n          })();\n          throw error;\n        }\n      });\n  }\n\n  stopServer() {\n    if (this.child) {\n      this.child.kill();\n      this.child = null;\n    }\n  }\n\n  exitProcess() {\n    // generate a return value that is visible to the shell, 0 is success\n    this.process.exit(this.shellStatus);\n  }\n\n  exit() {\n    return Promise.resolve()\n      .then(() => this.stopBrowser())\n      .then(() => {\n        this.stopServer();\n        this.exitProcess();\n      });\n  }\n}\n"]}