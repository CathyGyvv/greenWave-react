{"version":3,"sources":["../../../src/lib/utils/log-to-dom.js"],"names":["enableDOMLogging","logLineToDOM","old","enable","console","log","bind","logDiv","message","markdown","global","probe","document","createElement","childNodes","body","insertBefore","innerHTML"],"mappings":"4EAMgBA,gB,CAAAA,gB,SAiBAC,Y,CAAAA,Y,mCApBZC,IAAM,I,CAGH,QAASF,iBAAT,EAAyC,IAAfG,OAAe,4DAE1CA,QAAU,CAACD,GAF+B,GAG5CA,IAAME,iBAAQC,GAAR,CAAYC,IAAZ,CAAiBF,gBAAjB,CAHsC,CAI5CA,iBAAQC,GAAR,CAAc,UAAa,CACzBJ,oCADyB,CAEzBC,2BACD,CAP2C,EAS1C,CAACC,MAAD,EAAWD,GAT+B,GAU5CE,iBAAQC,GAAR,CAAcH,GAV8B,CAW5CA,IAAM,IAXsC,CAa/C,CAED,GAAIK,QAAS,IAAb,CAEO,QAASN,aAAT,CAAsBO,OAAtB,CAA+B,CACpC,GAAI,CAACD,MAAL,CAAa,CACX,GAAME,UAAWC,gBAAOC,KAAP,CAAaF,QAA9B,CACAF,OAASK,kBAASC,aAAT,CAAuBJ,SAAW,KAAX,CAAmB,KAA1C,CACV,CAJmC,GAM7BK,WAN6B,CAMfF,kBAASG,IANM,CAM7BD,UAN6B,CAOpCF,kBAASG,IAAT,CAAcC,YAAd,CAA2BT,MAA3B,CAAmCO,YAAcA,WAAW,CAAX,CAAjD,CAPoC,CAUb,QAAnB,QAAON,QAVyB,GAWlCD,OAAOU,SAAP,EAAuBT,OAAvB,SAXkC,CAarC,C,gBAEcR,gB","file":"log-to-dom.js","sourcesContent":["/* eslint-disable no-console */\nimport {document, console, global} from './globals';\n\nlet old = null;\n\n// Can log a (not too long) number of messages to a div in the DOM\nexport function enableDOMLogging(enable = true) {\n  // First time, add a log div\n  if (enable && !old) {\n    old = console.log.bind(console);\n    console.log = (...args) => {\n      logLineToDOM(...args);\n      old(...args);\n    };\n  }\n  if (!enable && old) {\n    console.log = old;\n    old = null;\n  }\n}\n\nlet logDiv = null;\n\nexport function logLineToDOM(message) {\n  if (!logDiv) {\n    const markdown = global.probe.markdown;\n    logDiv = document.createElement(markdown ? 'pre' : 'div');\n  }\n  // Ensure the element comes first\n  const {childNodes} = document.body;\n  document.body.insertBefore(logDiv, childNodes && childNodes[0]);\n\n  // Add the line to the log element\n  if (typeof message === 'string') {\n    logDiv.innerHTML += `${message}<br />`;\n  }\n}\n\nexport default enableDOMLogging;\n"]}