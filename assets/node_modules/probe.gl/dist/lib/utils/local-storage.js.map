{"version":3,"sources":["../../../src/lib/utils/local-storage.js"],"names":["getStorage","type","storage","window","x","setItem","removeItem","e","LocalStorage","id","defaultSettings","config","Object","assign","_loadConfiguration","configuration","updateConfiguration","serialized","JSON","stringify","serializedConfiguration","getItem","parse"],"mappings":"usBAqBA,QAASA,WAAT,CAAoBC,IAApB,CAA0B,CACxB,GAAI,IACIC,SAAUC,OAAOF,IAAP,CADd,CAEIG,EAAI,kBAFR,CAKF,MAFAF,SAAQG,OAAR,CAAgBD,CAAhB,CAAmBA,CAAnB,CAEA,CADAF,QAAQI,UAAR,CAAmBF,CAAnB,CACA,CAAOF,OACR,CAAC,MAAOK,CAAP,CAAU,CACV,MAAO,KACR,CACF,C,GAGoBC,a,YACnB,sBAAYC,EAAZ,CAAgBC,eAAhB,CAA0D,IAAzBT,KAAyB,wDAAlB,gBAAkB,oCACxD,KAAKC,OAAL,CAAeF,WAAWC,IAAX,CADyC,CAExD,KAAKQ,EAAL,CAAUA,EAF8C,CAGxD,KAAKE,MAAL,CAAc,EAH0C,CAIxDC,OAAOC,MAAP,CAAc,KAAKF,MAAnB,CAA2BD,eAA3B,CAJwD,CAKxD,KAAKI,kBAAL,EACD,C,2FAEkB,CACjB,MAAO,MAAKH,MACb,C,0DAEgBI,a,CAAe,CAE9B,MADA,MAAKJ,MAAL,CAAc,EACd,CAAO,KAAKK,mBAAL,CAAyBD,aAAzB,CACR,C,gEAEmBA,a,CAAe,CAEjC,GADAH,OAAOC,MAAP,CAAc,KAAKF,MAAnB,CAA2BI,aAA3B,CACA,CAAI,KAAKb,OAAT,CAAkB,CAChB,GAAMe,YAAaC,KAAKC,SAAL,CAAe,KAAKR,MAApB,CAAnB,CACA,KAAKT,OAAL,CAAaG,OAAb,CAAqB,KAAKI,EAA1B,CAA8BQ,UAA9B,CACD,CACD,MAAO,KACR,C,+DAGoB,CACnB,GAAIF,eAAgB,EAApB,CACA,GAAI,KAAKb,OAAT,CAAkB,CAChB,GAAMkB,yBAA0B,KAAKlB,OAAL,CAAamB,OAAb,CAAqB,KAAKZ,EAA1B,CAAhC,CACAM,cAAgBK,wBAA0BF,KAAKI,KAAL,CAAWF,uBAAX,CAA1B,CAAgE,EACjF,CAED,MADAR,QAAOC,MAAP,CAAc,KAAKF,MAAnB,CAA2BI,aAA3B,CACA,CAAO,IACR,C,oCApCkBP,Y","file":"local-storage.js","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* global window */\nfunction getStorage(type) {\n  try {\n    const storage = window[type];\n    const x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return storage;\n  } catch (e) {\n    return null;\n  }\n}\n\n// Store keys in local storage via simple interface\nexport default class LocalStorage {\n  constructor(id, defaultSettings, type = 'sessionStorage') {\n    this.storage = getStorage(type);\n    this.id = id;\n    this.config = {};\n    Object.assign(this.config, defaultSettings);\n    this._loadConfiguration();\n  }\n\n  getConfiguration() {\n    return this.config;\n  }\n\n  setConfiguration(configuration) {\n    this.config = {};\n    return this.updateConfiguration(configuration);\n  }\n\n  updateConfiguration(configuration) {\n    Object.assign(this.config, configuration);\n    if (this.storage) {\n      const serialized = JSON.stringify(this.config);\n      this.storage.setItem(this.id, serialized);\n    }\n    return this;\n  }\n\n  // Get config from persistent store, if available\n  _loadConfiguration() {\n    let configuration = {};\n    if (this.storage) {\n      const serializedConfiguration = this.storage.getItem(this.id);\n      configuration = serializedConfiguration ? JSON.parse(serializedConfiguration) : {};\n    }\n    Object.assign(this.config, configuration);\n    return this;\n  }\n}\n"]}