'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _prismjs = require('prismjs');

var _prismjs2 = _interopRequireDefault(_prismjs);

require('prismjs/components/prism-jsx');

require('prismjs/components/prism-typescript');

require('../styles/prism-theme-css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (dom) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      _ref$withJSX = _ref.withJSX,
      withJSX = _ref$withJSX === undefined ? false : _ref$withJSX;

  /**
   * should check dom.hasOwnProperty('querySelectorAll')
   * for SSR cases
   * The most common case is using this addon with storyshoots
   * https://github.com/tuchk4/storybook-readme/issues/52
   */
  var nodes = typeof dom.querySelectorAll === 'function' ? dom.querySelectorAll('pre code') : [];

  // console.log(nodes);

  if (nodes.length > 0) {
    for (var i = 0; i < nodes.length; i = i + 1) {
      if (withJSX) {
        if (nodes[i].classList.contains('language-js')) {
          nodes[i].classList.remove('language-js');
          nodes[i].classList.add('language-jsx');
        }
      }

      _prismjs2.default.highlightElement(nodes[i]);
    }
  }
};