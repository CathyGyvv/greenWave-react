{"version":3,"file":"index.js","sources":["../node_modules/array-from/polyfill.js","../node_modules/array-from/index.js","../src/index.js"],"sourcesContent":["// Production steps of ECMA-262, Edition 6, 22.1.2.1\n// Reference: http://www.ecma-international.org/ecma-262/6.0/#sec-array.from\nmodule.exports = (function() {\n  var isCallable = function(fn) {\n    return typeof fn === 'function';\n  };\n  var toInteger = function (value) {\n    var number = Number(value);\n    if (isNaN(number)) { return 0; }\n    if (number === 0 || !isFinite(number)) { return number; }\n    return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n  };\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n  var toLength = function (value) {\n    var len = toInteger(value);\n    return Math.min(Math.max(len, 0), maxSafeInteger);\n  };\n  var iteratorProp = function(value) {\n    if(value != null) {\n      if(['string','number','boolean','symbol'].indexOf(typeof value) > -1){\n        return Symbol.iterator;\n      } else if ((typeof Symbol !== 'undefined') && ('iterator' in Symbol) && (Symbol.iterator in value)) {\n        return Symbol.iterator;\n      }\n      // Support \"@@iterator\" placeholder, Gecko 27 to Gecko 35\n      else if ('@@iterator' in value) {\n        return '@@iterator';\n      }\n    }\n  };\n  var getMethod = function(O, P) {\n    // Assert: IsPropertyKey(P) is true.\n    if (O != null && P != null) {\n      // Let func be GetV(O, P).\n      var func = O[P];\n      // ReturnIfAbrupt(func).\n      // If func is either undefined or null, return undefined.\n      if(func == null) {\n        return void 0;\n      }\n      // If IsCallable(func) is false, throw a TypeError exception.\n      if (!isCallable(func)) {\n        throw new TypeError(func + \" is not a function\");\n      }\n      return func;\n    }\n  };\n  var iteratorStep = function(iterator) {\n    // Let result be IteratorNext(iterator).\n    // ReturnIfAbrupt(result).\n    var result = iterator.next()\n    // Let done be IteratorComplete(result).\n    // ReturnIfAbrupt(done).\n    var done = Boolean(result.done);\n    // If done is true, return false.\n    if(done) {\n      return false;\n    }\n    // Return result.\n    return result;\n  };\n\n  // The length property of the from method is 1.\n  return function from(items /*, mapFn, thisArg */ ) {\n    \"use strict\";\n\n    // 1. Let C be the this value.\n    var C = this;\n\n    // 2. If mapfn is undefined, let mapping be false.\n    var mapFn = arguments.length > 1 ? arguments[1] : void 0;\n\n    var T;\n    if (typeof mapFn !== 'undefined') {\n      // 3. else\n      //   a. If IsCallable(mapfn) is false, throw a TypeError exception.\n      if (!isCallable(mapFn)) {\n        throw new TypeError('Array.from: when provided, the second argument must be a function');\n      }\n\n      //   b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n      if (arguments.length > 2) {\n        T = arguments[2];\n      }\n      //   c. Let mapping be true (implied by mapFn)\n    }\n\n    var A, k;\n\n    // 4. Let usingIterator be GetMethod(items, @@iterator).\n    // 5. ReturnIfAbrupt(usingIterator).\n    var usingIterator = getMethod(items, iteratorProp(items));\n\n    // 6. If usingIterator is not undefined, then\n    if (usingIterator !== void 0) {\n      // a. If IsConstructor(C) is true, then\n      //   i. Let A be the result of calling the [[Construct]] internal method of C with an empty argument list.\n      // ￼￼￼￼￼￼￼￼￼￼￼￼b. Else,\n      //   ￼￼i. Let A be the result of the abstract operation ArrayCreate with argument 0.\n      // c. ReturnIfAbrupt(A).\n      A = isCallable(C) ? Object(new C()) : [];\n\n      // d. Let iterator be GetIterator(items, usingIterator).\n      var iterator = usingIterator.call(items);\n\n      // e. ReturnIfAbrupt(iterator).\n      if (iterator == null) {\n        throw new TypeError(\"Array.from requires an array-like or iterable object\");\n      }\n\n      // f. Let k be 0.\n      k = 0;\n\n      // g. Repeat\n      var next, nextValue;\n      while (true) {\n        // i. Let Pk be ToString(k).\n        // ii. Let next be IteratorStep(iterator).\n        // iii. ReturnIfAbrupt(next).\n        next = iteratorStep(iterator);\n\n        // ￼iv. If next is false, then\n        if (!next) {\n\n          // 1. Let setStatus be Set(A, \"length\", k, true).\n          // 2. ReturnIfAbrupt(setStatus).\n          A.length = k;\n\n          // 3. Return A.\n          return A;\n        }\n        // v. Let nextValue be IteratorValue(next).\n        // vi. ReturnIfAbrupt(nextValue)\n        nextValue = next.value;\n\n        // vii. If mapping is true, then\n        //   1. Let mappedValue be Call(mapfn, T, «nextValue, k»).\n        //   2. If mappedValue is an abrupt completion, return IteratorClose(iterator, mappedValue).\n        //   3. Let mappedValue be mappedValue.[[value]].\n        // viii. Else, let mappedValue be nextValue.\n        // ix. Let defineStatus be the result of CreateDataPropertyOrThrow(A, Pk, mappedValue).\n        // x. [TODO] If defineStatus is an abrupt completion, return IteratorClose(iterator, defineStatus).\n        if (mapFn) {\n          A[k] = mapFn.call(T, nextValue, k);\n        }\n        else {\n          A[k] = nextValue;\n        }\n        // xi. Increase k by 1.\n        k++;\n      }\n      // 7. Assert: items is not an Iterable so assume it is an array-like object.\n    } else {\n\n      // 8. Let arrayLike be ToObject(items).\n      var arrayLike = Object(items);\n\n      // 9. ReturnIfAbrupt(items).\n      if (items == null) {\n        throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");\n      }\n\n      // 10. Let len be ToLength(Get(arrayLike, \"length\")).\n      // 11. ReturnIfAbrupt(len).\n      var len = toLength(arrayLike.length);\n\n      // 12. If IsConstructor(C) is true, then\n      //     a. Let A be Construct(C, «len»).\n      // 13. Else\n      //     a. Let A be ArrayCreate(len).\n      // 14. ReturnIfAbrupt(A).\n      A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n      // 15. Let k be 0.\n      k = 0;\n      // 16. Repeat, while k < len… (also steps a - h)\n      var kValue;\n      while (k < len) {\n        kValue = arrayLike[k];\n        if (mapFn) {\n          A[k] = mapFn.call(T, kValue, k);\n        }\n        else {\n          A[k] = kValue;\n        }\n        k++;\n      }\n      // 17. Let setStatus be Set(A, \"length\", len, true).\n      // 18. ReturnIfAbrupt(setStatus).\n      A.length = len;\n      // 19. Return A.\n    }\n    return A;\n  }\n})();\n","module.exports = (typeof Array.from === 'function' ?\n  Array.from :\n  require('./polyfill')\n);\n","import arrayFrom from 'array-from';\n\n/**\n* a ponyfill for the ES6 String.raw()\n*\n* @param {object} callSite - well-formed template call site object, like { raw: 'string' }\n* @param {any} substitutions - contains substitution values\n* @throws {TypeError} a TypeError is thrown if the first argument is not a well formed object.\n* @returns {string} rawString - the original, uninterpreted text\n* @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/raw\n*/\nexport default (callSite = {}, ...substitutions) => {\n  let template;\n  try {\n    template = arrayFrom(callSite.raw);\n  } catch (e) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  return template.map((chunk, i) => {\n    if (callSite.raw.length <= i) {\n      return chunk;\n    }\n    return substitutions[i - 1] ? substitutions[i - 1] + chunk : chunk;\n  }).join('');\n};\n"],"names":["exports","isCallable","fn","toInteger","value","number","Number","isNaN","isFinite","Math","floor","abs","maxSafeInteger","pow","toLength","len","min","max","iteratorProp","indexOf","Symbol","iterator","getMethod","O","P","func","TypeError","iteratorStep","result","next","done","Boolean","items","T","C","this","mapFn","arguments","length","A","k","usingIterator","Object","call","nextValue","arrayLike","Array","kValue","from","require$$0","substitutions","callSite","template","arrayFrom","raw","e","map","chunk","i","join"],"mappings":"mdAEOA,QAAU,cACXC,GAAa,SAASC,SACH,kBAAPA,IAEZC,EAAY,SAAUC,MACpBC,GAASC,OAAOF,SAChBG,OAAMF,GAAkB,EACb,IAAXA,GAAiBG,SAASH,IACtBA,EAAS,EAAI,EAAI,IAAMI,KAAKC,MAAMD,KAAKE,IAAIN,IADHA,GAG9CO,EAAiBH,KAAKI,IAAI,EAAG,IAAM,EACnCC,EAAW,SAAUV,MACnBW,GAAMZ,EAAUC,SACbK,MAAKO,IAAIP,KAAKQ,IAAIF,EAAK,GAAIH,IAEhCM,EAAe,SAASd,MACd,MAATA,EAAe,KACZ,SAAS,SAAS,UAAU,UAAUe,2BAAef,+BAAS,SACzDgB,QAAOC,QACT,IAAuB,mBAAXD,SAA4B,YAAcA,SAAYA,OAAOC,WAAYjB,SACnFgB,QAAOC,QAGX,IAAI,cAAgBjB,SAChB,eAITkB,EAAY,SAASC,EAAGC,MAEjB,MAALD,GAAkB,MAALC,EAAW,IAEtBC,GAAOF,EAAEC,MAGF,MAARC,aAIExB,EAAWwB,QACR,IAAIC,WAAUD,EAAO,4BAEtBA,KAGPE,EAAe,SAASN,MAGtBO,GAASP,EAASQ,OAGlBC,EAAOC,QAAQH,EAAOE,YAEvBA,IACM,EAGFF,SAIF,UAAcI,MASfC,GALAC,EAAIC,KAGJC,EAAQC,UAAUC,OAAS,EAAID,UAAU,GAAK,UAG7B,mBAAVD,GAAuB,KAG3BnC,EAAWmC,QACR,IAAIV,WAAU,oEAIlBW,WAAUC,OAAS,MACjBD,UAAU,OAKdE,GAAGC,EAIHC,EAAgBnB,EAAUU,EAAOd,EAAac,OAG5B,SAAlBS,EAA0B,GAMxBxC,EAAWiC,GAAKQ,OAAO,GAAIR,UAG3Bb,GAAWoB,EAAcE,KAAKX,MAGlB,MAAZX,OACI,IAAIK,WAAU,0DAIlB,SAGAG,GAAMe,IACG,MAIJjB,EAAaN,IAGfQ,WAIDS,OAASE,EAGJD,IAIGV,EAAKzB,MASbgC,IACAI,GAAKJ,EAAMO,KAAKV,EAAGW,EAAWJ,KAG9BA,GAAKI,WAMN,IAGDC,GAAYH,OAAOV,MAGV,MAATA,OACI,IAAIN,WAAU,uEAKlBX,GAAMD,EAAS+B,EAAUP,UAOzBrC,EAAWiC,GAAKQ,OAAO,GAAIR,GAAEnB,IAAQ,GAAI+B,OAAM/B,KAG/C,SAEAgC,GACOhC,EAAJyB,KACIK,EAAUL,GACfJ,IACAI,GAAKJ,EAAMO,KAAKV,EAAGc,EAAQP,KAG3BA,GAAKO,QAMTT,OAASvB,QAGNwB,4HChMJvC,QAAiC,kBAAf8C,OAAME,KAC7BF,MAAME,KACNC,6ICSgCC,sDAAlBC,8DACVC,eAESC,EAAUF,EAASG,KAC9B,MAAOC,QACD,IAAI7B,WAAU,oDAGf0B,GAASI,IAAI,SAACC,EAAOC,SACtBP,GAASG,IAAIhB,QAAUoB,EAClBD,EAEFP,EAAcQ,EAAI,GAAKR,EAAcQ,EAAI,GAAKD,EAAQA,IAC5DE,KAAK"}