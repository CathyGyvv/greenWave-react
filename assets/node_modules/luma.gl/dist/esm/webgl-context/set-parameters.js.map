{"version":3,"sources":["../../../src/webgl-context/set-parameters.js"],"names":["GL","isWebGL2","assert","GL_PARAMETER_DEFAULTS","BLEND","BLEND_COLOR","Float32Array","BLEND_EQUATION_RGB","FUNC_ADD","BLEND_EQUATION_ALPHA","BLEND_SRC_RGB","ONE","BLEND_DST_RGB","ZERO","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","COLOR_CLEAR_VALUE","COLOR_WRITEMASK","CULL_FACE","CULL_FACE_MODE","BACK","DEPTH_TEST","DEPTH_CLEAR_VALUE","DEPTH_FUNC","LESS","DEPTH_RANGE","DEPTH_WRITEMASK","DITHER","FRAMEBUFFER_BINDING","FRONT_FACE","CCW","GENERATE_MIPMAP_HINT","DONT_CARE","LINE_WIDTH","POLYGON_OFFSET_FILL","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_UNITS","SAMPLE_COVERAGE_VALUE","SAMPLE_COVERAGE_INVERT","SCISSOR_TEST","SCISSOR_BOX","Int32Array","STENCIL_TEST","STENCIL_CLEAR_VALUE","STENCIL_WRITEMASK","STENCIL_BACK_WRITEMASK","STENCIL_FUNC","ALWAYS","STENCIL_REF","STENCIL_VALUE_MASK","STENCIL_BACK_FUNC","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","STENCIL_FAIL","KEEP","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_BACK_FAIL","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","VIEWPORT","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","FRAGMENT_SHADER_DERIVATIVE_HINT","READ_FRAMEBUFFER_BINDING","RASTERIZER_DISCARD","PACK_ROW_LENGTH","PACK_SKIP_PIXELS","PACK_SKIP_ROWS","UNPACK_ROW_LENGTH","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","enable","gl","value","key","disable","hint","pixelStorei","drawFramebuffer","target","DRAW_FRAMEBUFFER","FRAMEBUFFER","bindFramebuffer","readFramebuffer","READ_FRAMEBUFFER","GL_PARAMETER_SETTERS","blendColor","clearColor","colorMask","cullFace","clearDepth","depthFunc","depthRange","depthMask","frontFace","lineWidth","scissor","clearStencil","stencilMaskSeparate","FRONT","viewport","COMPOSITE_GL_PARAMETER_SETTERS","blendEquation","values","blendEquationSeparate","blendFunc","blendFuncSeparate","polygonOffset","sampleCoverage","stencilFuncFront","stencilFuncSeparate","stencilFuncBack","stencilOpFront","stencilOpSeparate","stencilOpBack","isEnabled","GL_PARAMETER_GETTERS","SAMPLE_ALPHA_TO_COVERAGE","SAMPLE_COVERAGE","deepArrayEqual","x","y","isArrayX","Array","isArray","ArrayBuffer","isView","isArrayY","length","i","setParameter","getter","prevValue","Number","getParameter","setter","setParameters","compositeSetters","glConstant","cache","state","mergedValues","Object","assign","compositeSetter","getParameters","parameters","parameterKeys","keys","getDefaultParameters","resetParameters","getModifiedParameters","modified"],"mappings":"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","sourcesContent":["// Provides a unified API for getting and setting any WebGL parameter\n// Also knows default values of all parameters, enabling fast cache initialization\n// Provides base functionality for the state caching.\nimport GL from '../constants';\nimport {isWebGL2} from '../webgl-utils';\nimport assert from '../utils/assert';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\nexport const GL_PARAMETER_DEFAULTS = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xFFFFFFFF,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xFFFFFFFF,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xFFFFFFFF,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xFFFFFFFF,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: new Int32Array([0, 0, 1024, 1024]),\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n\n  // WEBGL2 / EXTENSIONS\n  // gl1: 'OES_standard_derivatives'\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl, value, key) => value ? gl.enable(key) : gl.disable(key);\nconst hint = (gl, value, key) => gl.hint(key, value);\nconst pixelStorei = (gl, value, key) => gl.pixelStorei(key, value);\n\nconst drawFramebuffer = (gl, value) => {\n  const target = isWebGL2(gl) ? GL.DRAW_FRAMEBUFFER : GL.FRAMEBUFFER;\n  return gl.bindFramebuffer(target, value);\n};\nconst readFramebuffer = (gl, value) => {\n  return gl.bindFramebuffer(GL.READ_FRAMEBUFFER, value);\n};\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'COMPOSITE_GL_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl, value) => gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl, value) => gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl, value) => gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl, value) => gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: drawFramebuffer,\n  [GL.FRONT_FACE]: (gl, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl, value) => gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl, value) => gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl, value) => gl.viewport(...value),\n\n  // WEBGL1 PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n\n  // WEBGL2 PIXEL PACK/UNPACK MODES\n  // RASTERIZER_DISCARD ...\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.READ_FRAMEBUFFER_BINDING]: readFramebuffer,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei\n};\n\n// COMPOSITE_WEBGL_PARAMETER_\nconst COMPOSITE_GL_PARAMETER_SETTERS = {\n  blendEquation: (gl, values) => gl.blendEquationSeparate(\n    values[GL.BLEND_EQUATION_RGB],\n    values[GL.BLEND_EQUATION_ALPHA]\n  ),\n  blendFunc: (gl, values) => gl.blendFuncSeparate(\n    values[GL.BLEND_SRC_RGB],\n    values[GL.BLEND_DST_RGB],\n    values[GL.BLEND_SRC_ALPHA],\n    values[GL.BLEND_DST_ALPHA]\n  ),\n  polygonOffset: (gl, values) => gl.polygonOffset(\n    values[GL.POLYGON_OFFSET_FACTOR],\n    values[GL.POLYGON_OFFSET_UNITS]\n  ),\n  sampleCoverage: (gl, values) => gl.sampleCoverage(\n    values[GL.SAMPLE_COVERAGE_VALUE],\n    values[GL.SAMPLE_COVERAGE_INVERT]\n  ),\n  stencilFuncFront: (gl, values) => gl.stencilFuncSeparate(GL.FRONT,\n    values[GL.STENCIL_FUNC],\n    values[GL.STENCIL_REF],\n    values[GL.STENCIL_VALUE_MASK]\n  ),\n  stencilFuncBack: (gl, values) => gl.stencilFuncSeparate(GL.BACK,\n    values[GL.STENCIL_BACK_FUNC],\n    values[GL.STENCIL_BACK_REF],\n    values[GL.STENCIL_BACK_VALUE_MASK]\n  ),\n  stencilOpFront: (gl, values) => gl.stencilOpSeparate(GL.FRONT,\n    values[GL.STENCIL_FAIL],\n    values[GL.STENCIL_PASS_DEPTH_FAIL],\n    values[GL.STENCIL_PASS_DEPTH_PASS]\n  ),\n  stencilOpBack: (gl, values) => gl.stencilOpSeparate(GL.BACK,\n    values[GL.STENCIL_BACK_FAIL],\n    values[GL.STENCIL_BACK_PASS_DEPTH_FAIL],\n    values[GL.STENCIL_BACK_PASS_DEPTH_PASS]\n  )\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n\n  // WebGL 2\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n\n// HELPER METHODS\n\nconst deepArrayEqual = (x, y) => {\n  if (x === y) {\n    return true;\n  }\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  if (isArrayX && isArrayY && x.length === y.length) {\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n};\n\n// PUBLIC METHODS\n\n// Sets any single GL parameter regardless of function (gl.getParameter/gl.isEnabled...)\n// Returns the previous value\n// Note: limited to parameter values\nexport function setParameter(gl, key, value) {\n  const getter = GL_PARAMETER_GETTERS[key];\n  const prevValue = getter ? getter(gl, Number(key)) : gl.getParameter(Number(key));\n  const setter = GL_PARAMETER_SETTERS[key];\n  assert(typeof setter === 'function');\n  setter(gl, value, Number(key));\n  return prevValue;\n}\n\n// Sets any GL parameter regardless of function (gl.blendMode, ...)\n// Note: requires a `cache` object to be set on the context (gl.state.cache)\n// This object is used to fill in any missing values for composite setter functions\nexport function setParameters(gl, values) {\n  const compositeSetters = {};\n\n  // HANDLE PRIMITIVE SETTERS (and make note of any composite setters)\n\n  for (const key in values) {\n    const glConstant = Number(key);\n    const setter = GL_PARAMETER_SETTERS[key];\n    if (setter) {\n      // Composite setters should only be called once, so save them\n      if (typeof setter === 'string') {\n        compositeSetters[setter] = true;\n      } else { // if (gl[glConstant] !== undefined) {\n        // TODO - added above check since this is being called on WebGL2 values in WebGL1...\n        // TODO - deep equal on values? only call setter if value has changed?\n        // NOTE - the setter will automatically update this.state\n        setter(gl, values[key], glConstant);\n      }\n    }\n  }\n\n  // HANDLE COMPOSITE SETTERS\n\n  // NOTE: any non-provided values needed by composite setters are filled in from state cache\n  // The cache parameter is automatically retrieved from the context\n  // This depends on `trackContextState`, which is technically a \"circular\" dependency.\n  // But it is too inconvenient to always require a cache parameter here.\n  // This is the ONLY external dependency in this module/\n  const cache = gl.state && gl.state.cache;\n  if (cache) {\n    const mergedValues = Object.assign({}, cache, values);\n\n    for (const key in compositeSetters) {\n      // TODO - avoid calling composite setters if values have not changed.\n      const compositeSetter = COMPOSITE_GL_PARAMETER_SETTERS[key];\n      // Note - if `trackContextState` has been called,\n      // the setter will automatically update this.state.cache\n      compositeSetter(gl, mergedValues);\n    }\n  }\n  // Add a log for the else case?\n}\n\n// Queries any single GL parameter regardless of function (gl.getParameter/gl.isEnabled...)\nexport function getParameter(gl, key) {\n  const getter = GL_PARAMETER_GETTERS[key];\n  return getter ? getter(gl, Number(key)) : gl.getParameter(Number(key));\n}\n\n// Copies the state from a context (gl.getParameter should not be overriden)\n// Reads the entire WebGL state from a context\n// Caveat: This generates a huge amount of synchronous driver roundtrips and should be\n// considered a very slow operation, to be used only if/when a context already manipulated\n// by external code needs to be synchronized for the first time\n// @return {Object} - a newly created map, with values keyed by GL parameters\nexport function getParameters(gl, parameters) {\n  // default to querying all parameters\n  parameters = parameters || GL_PARAMETER_DEFAULTS;\n  // support both arrays of parameters and objects (keys represent parameters)\n  const parameterKeys = Array.isArray(parameters) ? parameters : Object.keys(parameters);\n\n  const state = {};\n  for (const key of parameterKeys) {\n    state[key] = getParameter(gl, key);\n  }\n  return state;\n}\n\nexport function getDefaultParameters(gl) {\n  // TODO - Query GL.VIEWPORT and GL.SCISSOR_BOX since these are dynamic\n  return Object.assign({}, GL_PARAMETER_DEFAULTS, {\n    // TODO: For viewport and scissor default values are set at the time of\n    // context creation based on canvas size, we can query them here but it will\n    // not match with what we have in GL_PARAMETER_DEFAULTS table, we should revisit.\n    // [GL.VIEWPORT]: gl.constructor.prototype.getParameter.call(gl, GL.VIEWPORT),\n    // [GL.SCISSOR_BOX]: gl.constructor.prototype.getParameter.call(gl, GL.SCISSOR_BOX)\n  });\n}\n\n// Reset all parameters to a pure context state\nexport function resetParameters(gl) {\n  setParameters(gl, getDefaultParameters(gl));\n}\n\n// Get all parameters that have been modified from a pure context state\nexport function getModifiedParameters(gl) {\n  const values = getParameters(GL_PARAMETER_DEFAULTS);\n  const modified = {};\n  for (const key in GL_PARAMETER_DEFAULTS) {\n    if (!deepArrayEqual(values[key], GL_PARAMETER_DEFAULTS[key])) {\n      modified[key] = values[key];\n    }\n  }\n  return modified;\n}\n"],"file":"set-parameters.js"}