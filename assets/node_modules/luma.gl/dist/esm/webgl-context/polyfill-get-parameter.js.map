{"version":3,"sources":["../../../src/webgl-context/polyfill-get-parameter.js"],"names":["GL","OES_element_index","WEBGL_draw_buffers","EXT_disjoint_timer_query","EXT_disjoint_timer_query_webgl2","EXT_texture_filter_anisotropic","WEBGL_debug_renderer_info","GL_FRAGMENT_SHADER_DERIVATIVE_HINT","GL_DONT_CARE","GL_GPU_DISJOINT_EXT","GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT","GL_UNMASKED_VENDOR_WEBGL","GL_UNMASKED_RENDERER_WEBGL","getWebGL2ValueOrZero","isWebGL2","gl","undefined","WEBGL_PARAMETERS","READ_BUFFER","COLOR_ATTACHMENT0","RASTERIZER_DISCARD","SAMPLES","getParameter","ext","getExtension","GPU_DISJOINT_EXT","UNMASKED_VENDOR_WEBGL","VENDOR","UNMASKED_RENDERER_WEBGL","RENDERER","luma","extensions","MAX_TEXTURE_MAX_ANISOTROPY_EXT","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","MAX_COLOR_ATTACHMENTS","MAX_COLOR_ATTACHMENTS_WEBGL","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_DRAW_BUFFERS","MAX_DRAW_BUFFERS_WEBGL","MAX_ELEMENT_INDEX","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_SAMPLES","MAX_SERVER_WAIT_TIMEOUT","MAX_TEXTURE_LOD_BIAS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_VARYING_COMPONENTS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MIN_PROGRAM_TEXEL_OFFSET","MAX_PROGRAM_TEXEL_OFFSET","UNIFORM_BUFFER_OFFSET_ALIGNMENT","GL_TEXTURE_BINDING_3D","TEXTURE_BINDING_3D","getParameterPolyfill","originalGetParameter","pname","limit","value","result"],"mappings":"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","sourcesContent":["/* eslint-disable no-inline-comments, max-len, camelcase */\nimport GL from '../constants';\n\nconst OES_element_index = 'OES_element_index';\nconst WEBGL_draw_buffers = 'WEBGL_draw_buffers';\nconst EXT_disjoint_timer_query = 'EXT_disjoint_timer_query';\nconst EXT_disjoint_timer_query_webgl2 = 'EXT_disjoint_timer_query_webgl2';\nconst EXT_texture_filter_anisotropic = 'EXT_texture_filter_anisotropic';\nconst WEBGL_debug_renderer_info = 'WEBGL_debug_renderer_info';\n\nconst GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;\nconst GL_DONT_CARE = 0x1100;\nconst GL_GPU_DISJOINT_EXT = 0x8FBB;\nconst GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\nconst GL_UNMASKED_VENDOR_WEBGL = 0x9245; // vendor string of the graphics driver.\nconst GL_UNMASKED_RENDERER_WEBGL = 0x9246; // renderer string of the graphics driver.\n\nconst getWebGL2ValueOrZero = gl => !isWebGL2(gl) ? 0 : undefined;\n\n// if a function returns undefined in this table,\n// the original getParameter will be called, defeating the override\nconst WEBGL_PARAMETERS = {\n  [GL.READ_BUFFER]: gl => !isWebGL2(gl) ? GL.COLOR_ATTACHMENT0 : undefined,\n\n  // WebGL2 context parameters\n  [GL_FRAGMENT_SHADER_DERIVATIVE_HINT]:\n    gl => !isWebGL2(gl) ? GL_DONT_CARE : undefined,\n\n  [GL.RASTERIZER_DISCARD]: getWebGL2ValueOrZero,\n\n  [GL.SAMPLES]: getWebGL2ValueOrZero,\n\n  // WebGL2 extension context parameters\n  [GL_GPU_DISJOINT_EXT]:\n    (gl, getParameter) => {\n      const ext = isWebGL2(gl) ?\n        gl.getExtension(EXT_disjoint_timer_query_webgl2) :\n        gl.getExtension(EXT_disjoint_timer_query);\n      return ext && ext.GPU_DISJOINT_EXT ? getParameter(ext.GPU_DISJOINT_EXT) : 0;\n    },\n\n  // Extension fixed values\n  [GL_UNMASKED_VENDOR_WEBGL]:\n    (gl, getParameter) => {\n      const ext = gl.getExtension(WEBGL_debug_renderer_info);\n      return getParameter((ext && ext.UNMASKED_VENDOR_WEBGL) || GL.VENDOR);\n    },\n\n  [GL_UNMASKED_RENDERER_WEBGL]:\n    (gl, getParameter) => {\n      const ext = gl.getExtension(WEBGL_debug_renderer_info);\n      return getParameter((ext && ext.UNMASKED_RENDERER_WEBGL) || GL.RENDERER);\n    },\n\n  // Extension LIMITS\n  [GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT]:\n    (gl, getParameter) => {\n      const ext = gl.luma.extensions[EXT_texture_filter_anisotropic];\n      return ext ? getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1.0;\n    },\n\n  // WebGL2 Limits\n  [GL.MAX_3D_TEXTURE_SIZE]: getWebGL2ValueOrZero,\n  [GL.MAX_ARRAY_TEXTURE_LAYERS]: getWebGL2ValueOrZero,\n  [GL.MAX_CLIENT_WAIT_TIMEOUT_WEBGL]: getWebGL2ValueOrZero,\n  [GL.MAX_COLOR_ATTACHMENTS]:\n    (gl, getParameter) => {\n      if (!isWebGL2(gl)) {\n        const ext = gl.getExtension(WEBGL_draw_buffers);\n        return ext ? getParameter(ext.MAX_COLOR_ATTACHMENTS_WEBGL) : 0;\n      }\n      return undefined;\n    },\n  [GL.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_COMBINED_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_DRAW_BUFFERS]:\n    gl => {\n      if (!isWebGL2(gl)) {\n        const ext = gl.getExtension(WEBGL_draw_buffers);\n        return ext ? ext.MAX_DRAW_BUFFERS_WEBGL : 0;\n      }\n      return undefined;\n    },\n  [GL.MAX_ELEMENT_INDEX]:\n    // Guess: per webglstats.com 99.6% of webgl2 supports 2147483647\n    gl => gl.getExtension(OES_element_index) ? 2147483647 : 65535,\n  [GL.MAX_ELEMENTS_INDICES]:\n    // Guess: \"Reasonably safe\" per webglstats.com - could be higher/lower (on some mobile devices)\n    gl => gl.getExtension(OES_element_index) ? 16777216 : 65535,\n  [GL.MAX_ELEMENTS_VERTICES]:\n    // Guess: \"Reasonably safe\" per webglstats.com - could be higher/lower (on some mobile devices)\n    gl => 16777216,\n  [GL.MAX_FRAGMENT_INPUT_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_FRAGMENT_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_FRAGMENT_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_SAMPLES]: getWebGL2ValueOrZero,\n  [GL.MAX_SERVER_WAIT_TIMEOUT]: getWebGL2ValueOrZero,\n  [GL.MAX_TEXTURE_LOD_BIAS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_UNIFORM_BLOCK_SIZE]: getWebGL2ValueOrZero,\n  [GL.MAX_UNIFORM_BUFFER_BINDINGS]: getWebGL2ValueOrZero,\n  [GL.MAX_VARYING_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_OUTPUT_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MIN_PROGRAM_TEXEL_OFFSET]: getWebGL2ValueOrZero,\n  [GL.MAX_PROGRAM_TEXEL_OFFSET]: getWebGL2ValueOrZero,\n  [GL.UNIFORM_BUFFER_OFFSET_ALIGNMENT]: getWebGL2ValueOrZero\n};\n\n// Return true if WebGL2 context\nfunction isWebGL2(gl) {\n  const GL_TEXTURE_BINDING_3D = 0x806A;\n  return gl && gl.TEXTURE_BINDING_3D === GL_TEXTURE_BINDING_3D;\n}\n\n// A \"replacement\" gl.getParameter that accepts \"enums\" from extensions and WebGL2\n// and returns reasonably safe defaults\nexport function getParameterPolyfill(gl, originalGetParameter, pname) {\n\n  // Return mock limits (usually 0) for WebGL2 constants to ensure these\n  // can be queries without error\n  const limit = WEBGL_PARAMETERS[pname];\n  const value = typeof limit === 'function' ? limit(gl, originalGetParameter, pname) : limit;\n  const result = value !== undefined ? value : originalGetParameter(pname);\n  return result;\n}\n"],"file":"polyfill-get-parameter.js"}