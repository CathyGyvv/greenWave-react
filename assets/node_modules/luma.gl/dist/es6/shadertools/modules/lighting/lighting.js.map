{"version":3,"sources":["../../../../../src/shadertools/modules/lighting/lighting.js"],"names":["Vector3","commonShader","vertexShader1","fragmentShader1","vertexShader","fragmentShader","name","config","MAX_POINT_LIGHTS","getUniforms","lightingEnable","lightingAmbientColor","lightingDirection","lightingDirectionalColor","lightingPointLights","Object","assign","getDirectionalUniforms","getPointUniforms","color","direction","dir","x","y","z","normalize","scale","directionalColor","r","g","b","points","Array","numberPoints","length","pointLocations","pointColors","enableSpecular","pointSpecularColors","point","position","diffuse","specular","pointColor","push","Number","Boolean","pointLocation","pointSpecularColor","vs","fs"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,SAAtB;AAEA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,OAAO,MAAMC,eAAgB;EAC3BH,YAAa;EACbC,aAAc;CAFT;AAKP,OAAO,MAAMG,iBAAkB;EAC7BJ,YAAa;EACbE,eAAgB;CAFX;AAKP,OAAO,MAAMG,OAAO,UAAb;AAEP,OAAO,MAAMC,SAAS;AACpBC,oBAAkB;AADE,CAAf,C,CAIP;;AACA,OAAO,SAASC,WAAT,CAAqB;AAC1BC,mBAAiB,KADS;AAG1B;AACAC,yBAAuB,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAJG;AAM1B;AACAC,sBAAoB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPM;AAQ1BC,6BAA2B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARD;AAU1B;AACAC,wBAAsB;AAXI,CAArB,EAYJ;AACD;AACA,SAAOC,OAAOC,MAAP,CACL;AACEN,kBADF;AAEE;AACAC;AAHF,GADK,EAMLM,uBAAuBL,iBAAvB,CANK,EAOLM,iBAAiBJ,mBAAjB,CAPK,CAAP;AASD;;AAED,SAASG,sBAAT,CAAgC;AAACE,OAAD;AAAQC;AAAR,CAAhC,EAAoD;AAClD;AACA,QAAMC,MAAM,IAAIrB,OAAJ,CAAYoB,UAAUE,CAAtB,EAAyBF,UAAUG,CAAnC,EAAsCH,UAAUI,CAAhD,EACTC,SADS,GAETC,KAFS,CAEH,CAAC,CAFE,EAEC,CAAC,CAFF,EAEK,CAAC,CAFN,CAAZ;AAIA,SAAO;AACLC,sBAAkB,CAACR,MAAMS,CAAP,EAAUT,MAAMU,CAAhB,EAAmBV,MAAMW,CAAzB,CADb;AAELlB,uBAAmB,CAACS,IAAIC,CAAL,EAAQD,IAAIE,CAAZ,EAAeF,IAAIG,CAAnB;AAFd,GAAP;AAID;;AAED,SAASN,gBAAT,CAA0Ba,MAA1B,EAAkC;AAChCA,WAASA,kBAAkBC,KAAlB,GAA0BD,MAA1B,GAAmC,CAACA,MAAD,CAA5C;AACA,QAAME,eAAeF,OAAOG,MAA5B;AACA,QAAMC,iBAAiB,EAAvB;AACA,QAAMC,cAAc,EAApB;AACA,QAAMC,iBAAiB,EAAvB;AACA,QAAMC,sBAAsB,EAA5B;;AACA,OAAK,MAAMC,KAAX,IAAoBR,MAApB,EAA4B;AAAA,UACnBS,QADmB,GACmBD,KADnB,CACnBC,QADmB;AAAA,UACTrB,KADS,GACmBoB,KADnB,CACTpB,KADS;AAAA,UACFsB,OADE,GACmBF,KADnB,CACFE,OADE;AAAA,UACOC,QADP,GACmBH,KADnB,CACOG,QADP;AAE1B,UAAMC,aAAaxB,SAASsB,OAA5B;AAEAN,mBAAeS,IAAf,CAAoBJ,SAASlB,CAA7B,EAAgCkB,SAASjB,CAAzC,EAA4CiB,SAAShB,CAArD;AACAY,gBAAYQ,IAAZ,CAAiBD,WAAWf,CAA5B,EAA+Be,WAAWd,CAA1C,EAA6Cc,WAAWb,CAAxD,EAL0B,CAO1B;;AACAO,mBAAeO,IAAf,CAAoBC,OAAOC,QAAQJ,QAAR,CAAP,CAApB;;AACA,QAAIA,QAAJ,EAAc;AACZJ,0BAAoBM,IAApB,CAAyBF,SAASd,CAAlC,EAAqCc,SAASb,CAA9C,EAAiDa,SAASZ,CAA1D;AACD,KAFD,MAEO;AACLQ,0BAAoBM,IAApB,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,CAA/B;AACD;AACF;;AAED,SAAO;AACLX,gBADK;AAELc,mBAAeZ,cAFV;AAGLQ,gBAAYP,WAHP;AAILC,kBAJK;AAKLW,wBAAoBV;AALf,GAAP;AAOD;;AAED,eAAe;AACbhC,MADa;AAEb2C,MAAI7C,YAFS;AAGb8C,MAAI7C,cAHS;AAIbI;AAJa,CAAf","sourcesContent":["import {Vector3} from 'math.gl';\n\nimport commonShader from './lighting-common.glsl';\nimport vertexShader1 from './lighting-vertex.glsl';\nimport fragmentShader1 from './lighting-fragment.glsl';\n\nexport const vertexShader = `\\\n${commonShader}\n${vertexShader1}\n`;\n\nexport const fragmentShader = `\\\n${commonShader}\n${fragmentShader1}\n`;\n\nexport const name = 'lighting';\n\nexport const config = {\n  MAX_POINT_LIGHTS: 4\n};\n\n// Setup the lighting system: ambient, directional, point lights.\nexport function getUniforms({\n  lightingEnable = false,\n\n  // ambient light\n  lightingAmbientColor = [0.2, 0.2, 0.2],\n\n  // directional light\n  lightingDirection = [1, 1, 1],\n  lightingDirectionalColor = [0, 0, 0],\n\n  // point lights\n  lightingPointLights = []\n}) {\n  // Set light uniforms. Ambient, directional and point lights.\n  return Object.assign(\n    {\n      lightingEnable,\n      // Ambient\n      lightingAmbientColor\n    },\n    getDirectionalUniforms(lightingDirection),\n    getPointUniforms(lightingPointLights)\n  );\n}\n\nfunction getDirectionalUniforms({color, direction}) {\n  // Normalize lighting direction vector\n  const dir = new Vector3(direction.x, direction.y, direction.z)\n    .normalize()\n    .scale(-1, -1, -1);\n\n  return {\n    directionalColor: [color.r, color.g, color.b],\n    lightingDirection: [dir.x, dir.y, dir.z]\n  };\n}\n\nfunction getPointUniforms(points) {\n  points = points instanceof Array ? points : [points];\n  const numberPoints = points.length;\n  const pointLocations = [];\n  const pointColors = [];\n  const enableSpecular = [];\n  const pointSpecularColors = [];\n  for (const point of points) {\n    const {position, color, diffuse, specular} = point;\n    const pointColor = color || diffuse;\n\n    pointLocations.push(position.x, position.y, position.z);\n    pointColors.push(pointColor.r, pointColor.g, pointColor.b);\n\n    // Add specular color\n    enableSpecular.push(Number(Boolean(specular)));\n    if (specular) {\n      pointSpecularColors.push(specular.r, specular.g, specular.b);\n    } else {\n      pointSpecularColors.push(0, 0, 0);\n    }\n  }\n\n  return {\n    numberPoints,\n    pointLocation: pointLocations,\n    pointColor: pointColors,\n    enableSpecular,\n    pointSpecularColor: pointSpecularColors\n  };\n}\n\nexport default {\n  name,\n  vs: vertexShader,\n  fs: fragmentShader,\n  getUniforms\n};\n"],"file":"lighting.js"}