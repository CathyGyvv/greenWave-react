{"version":3,"sources":["../../../src/core/object-3d.js"],"names":["uid","Vector3","Matrix4","assert","Object3D","constructor","id","display","position","rotation","scale","matrix","name","userData","setPosition","length","setRotation","setScale","setMatrixComponents","update","updateMatrix","pos","rot","identity","translate","rotateXYZ","getCoordinateUniforms","viewMatrix","modelMatrix","worldMatrix","multiplyRight","worldInverse","invert","worldInverseTranspose","transpose","objectMatrix","worldInverseMatrix","worldInverseTransposeMatrix","transform","parent","endPosition","set","endRotation","endScale","add","ch","children","i"],"mappings":"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","sourcesContent":["import {uid} from '../utils';\nimport {Vector3, Matrix4} from 'math.gl';\nimport assert from '../utils/assert';\n\nexport default class Object3D {\n\n  constructor({id, display = true}) {\n    // model position, rotation, scale and all in all matrix\n    this.position = new Vector3();\n    this.rotation = new Vector3();\n    this.scale = new Vector3(1, 1, 1);\n    this.matrix = new Matrix4();\n\n    // whether to display the object at all\n    this.id = id || uid(this.constructor.name);\n    this.display = true;\n    this.userData = {};\n  }\n\n  setPosition(position) {\n    assert(position.length === 3, 'setPosition requires vector argument');\n    this.position = position;\n    return this;\n  }\n\n  setRotation(rotation) {\n    assert(rotation.length === 3, 'setRotation requires vector argument');\n    this.rotation = rotation;\n    return this;\n  }\n\n  setScale(scale) {\n    assert(scale.length === 3, 'setScale requires vector argument');\n    this.scale = scale;\n    return this;\n  }\n\n  setMatrixComponents({position, rotation, scale, update = true}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    if (update) {\n      this.updateMatrix();\n    }\n    return this;\n  }\n\n  updateMatrix() {\n    const pos = this.position;\n    const rot = this.rotation;\n    const scale = this.scale;\n\n    this.matrix.identity();\n    this.matrix.translate(pos);\n    this.matrix.rotateXYZ(rot);\n    this.matrix.scale(scale);\n    return this;\n  }\n\n  update({position, rotation, scale} = {}) {\n    if (position) {\n      this.setPosition(position);\n    }\n    if (rotation) {\n      this.setRotation(rotation);\n    }\n    if (scale) {\n      this.setScale(scale);\n    }\n    this.updateMatrix();\n    return this;\n  }\n\n  getCoordinateUniforms(viewMatrix, modelMatrix) {\n    // TODO - solve multiple class problem\n    // assert(viewMatrix instanceof Matrix4);\n    assert(viewMatrix);\n    modelMatrix = modelMatrix || this.matrix;\n    const worldMatrix = new Matrix4(viewMatrix).multiplyRight(modelMatrix);\n    const worldInverse = worldMatrix.invert();\n    const worldInverseTranspose = worldInverse.transpose();\n\n    return {\n      viewMatrix,\n      modelMatrix,\n      objectMatrix: modelMatrix,\n      worldMatrix,\n      worldInverseMatrix: worldInverse,\n      worldInverseTransposeMatrix: worldInverseTranspose\n    };\n  }\n\n  // TODO - copied code, not yet vetted\n  transform() {\n\n    if (!this.parent) {\n      this.endPosition.set(this.position);\n      this.endRotation.set(this.rotation);\n      this.endScale.set(this.scale);\n    } else {\n      const parent = this.parent;\n      this.endPosition.set(this.position.add(parent.endPosition));\n      this.endRotation.set(this.rotation.add(parent.endRotation));\n      this.endScale.set(this.scale.add(parent.endScale));\n    }\n\n    const ch = this.children;\n    for (let i = 0; i < ch.length; ++i) {\n      ch[i].transform();\n    }\n\n    return this;\n  }\n}\n"],"file":"object-3d.js"}