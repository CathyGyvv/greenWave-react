{"version":3,"sources":["../../../src/core/animation-loop.js"],"names":["createGLContext","resizeGLContext","resetParameters","pageLoadPromise","makeDebugContext","isWebGL","requestAnimationFrame","cancelAnimationFrame","log","assert","Framebuffer","DEFAULT_GL_OPTIONS","preserveDrawingBuffer","AnimationLoop","constructor","props","onCreateContext","opts","onInitialize","onRender","onFinalize","offScreen","gl","glOptions","debug","createFramebuffer","autoResizeViewport","autoResizeDrawingBuffer","useDevicePixels","deprecated","useDevicePixelRatio","needsRedraw","setProps","start","bind","stop","_renderFrame","setNeedsRedraw","reason","_stopped","_animationFrameId","_startPromise","then","_createWebGLContext","_createFramebuffer","_initializeCallbackData","_updateCallbackData","_resizeCanvasDrawingBuffer","_resizeViewport","_callbackData","appContext","_addCallbackData","_finalizeCallbackData","setViewParameters","autoResizeCanvas","_setupFrame","_onSetupFrame","_resizeFramebuffer","commit","canvas","framebuffer","tick","tock","width","drawingBufferWidth","height","drawingBufferHeight","aspect","Object","assign","Error","viewport","resize"],"mappings":"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","sourcesContent":["import {createGLContext, resizeGLContext, resetParameters} from '../webgl-context';\nimport {pageLoadPromise} from '../webgl-context';\nimport {makeDebugContext} from '../webgl-context/debug-context';\nimport {isWebGL, requestAnimationFrame, cancelAnimationFrame} from '../webgl-utils';\nimport {log} from '../utils';\nimport assert from '../utils/assert';\n\n// TODO - remove dependency on webgl classes\nimport {Framebuffer} from '../webgl';\n\nconst DEFAULT_GL_OPTIONS = {\n  preserveDrawingBuffer: true\n};\n\nexport default class AnimationLoop {\n  /*\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\n   */\n  constructor(props = {}) {\n    const {\n      onCreateContext = opts => createGLContext(opts),\n      onInitialize = () => {},\n      onRender = () => {},\n      onFinalize = () => {},\n\n      offScreen = false,\n      gl = null,\n      glOptions = {},\n      debug = false,\n\n      createFramebuffer = false,\n\n      // view parameters\n      autoResizeViewport = true,\n      autoResizeDrawingBuffer = true\n    } = props;\n\n    let {\n      useDevicePixels = true\n    } = props;\n\n    if ('useDevicePixelRatio' in props) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      useDevicePixels = props.useDevicePixelRatio;\n    }\n\n    this.props = {\n      onCreateContext,\n      onInitialize,\n      onRender,\n      onFinalize,\n\n      gl,\n      glOptions,\n      debug,\n      createFramebuffer\n    };\n\n    // state\n    this.gl = gl;\n    this.offScreen = offScreen;\n    this.needsRedraw = null;\n\n    this.setProps({\n      autoResizeViewport,\n      autoResizeDrawingBuffer,\n      useDevicePixels\n    });\n\n    // Bind methods\n    this.start = this.start.bind(this);\n    this.stop = this.stop.bind(this);\n    this._renderFrame = this._renderFrame.bind(this);\n\n    return this;\n  }\n\n  setNeedsRedraw(reason) {\n    assert(typeof reason === 'string');\n    this.needsRedraw = this.needsRedraw || reason;\n    return this;\n  }\n\n  setProps(props) {\n    if ('autoResizeViewport' in props) {\n      this.autoResizeViewport = props.autoResizeViewport;\n    }\n    if ('autoResizeDrawingBuffer' in props) {\n      this.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer;\n    }\n    if ('useDevicePixels' in props) {\n      this.useDevicePixels = props.useDevicePixels;\n    }\n    return this;\n  }\n\n  // Starts a render loop if not already running\n  // @param {Object} context - contains frame specific info (E.g. tick, width, height, etc)\n  start(opts = {}) {\n    this._stopped = false;\n    // console.debug(`Starting ${this.constructor.name}`);\n    if (!this._animationFrameId) {\n      // Wait for start promise before rendering frame\n      this._startPromise = pageLoadPromise\n      .then(() => {\n        if (this._stopped) {\n          return null;\n        }\n\n        // Create the WebGL context\n        this._createWebGLContext(opts);\n        this._createFramebuffer();\n\n        // Initialize the callback data\n        this._initializeCallbackData();\n        this._updateCallbackData();\n\n        // Default viewport setup, in case onInitialize wants to render\n        this._resizeCanvasDrawingBuffer();\n        this._resizeViewport();\n\n        // Note: onIntialize can return a promise (in case it needs to load resources)\n        return this.props.onInitialize(this._callbackData);\n      })\n      .then(appContext => {\n        if (!this._stopped) {\n          this._addCallbackData(appContext || {});\n          if (appContext !== false && !this._animationFrameId) {\n            this._animationFrameId = requestAnimationFrame(this._renderFrame);\n          }\n        }\n      });\n\n    }\n    return this;\n  }\n\n  // Stops a render loop if already running, finalizing\n  stop() {\n    // console.debug(`Stopping ${this.constructor.name}`);\n    if (this._animationFrameId) {\n      this._finalizeCallbackData();\n      cancelAnimationFrame(this._animationFrameId);\n      this._animationFrameId = null;\n      this._stopped = true;\n    }\n    return this;\n  }\n\n  // DEPRECATED METHODS\n\n  // Update parameters\n  setViewParameters({\n    autoResizeDrawingBuffer = true,\n    autoResizeCanvas = true,\n    autoResizeViewport = true,\n    useDevicePixels = true,\n    useDevicePixelRatio = null // deprecated\n  }) {\n    log.deprecated('AnimationLoop.setViewParameters', 'AnimationLoop.setProps')();\n    this.autoResizeViewport = autoResizeViewport;\n    this.autoResizeCanvas = autoResizeCanvas;\n    this.autoResizeDrawingBuffer = autoResizeDrawingBuffer;\n    this.useDevicePixels = useDevicePixels;\n    if (useDevicePixelRatio !== null) {\n      log.deprecated('useDevicePixelRatio', 'useDevicePixels')();\n      this.useDevicePixels = useDevicePixelRatio;\n    }\n    return this;\n  }\n\n  // PRIVATE METHODS\n\n  _setupFrame() {\n    if (this._onSetupFrame) {\n      // call callback\n      this._onSetupFrame(this._callbackData);\n      // end callback\n    } else {\n      this._resizeCanvasDrawingBuffer();\n      this._resizeViewport();\n      this._resizeFramebuffer();\n    }\n  }\n\n  /**\n   * @private\n   * Handles a render loop frame - updates context and calls the application\n   * callback\n   */\n  _renderFrame() {\n    if (this._stopped) {\n      return;\n    }\n\n    this._setupFrame();\n    this._updateCallbackData();\n\n    // call callback\n    this.props.onRender(this._callbackData);\n    // end callback\n\n    if (this.offScreen) {\n      // commit returns a Promise\n      this.gl.commit().then(this._renderFrame);\n    } else {\n      // Request another render frame (now )\n      this._animationFrameId = requestAnimationFrame(this._renderFrame);\n    }\n  }\n\n  // Initialize the  object that will be passed to app callbacks\n  _initializeCallbackData() {\n    this._callbackData = {\n      gl: this.gl,\n      canvas: this.gl.canvas,\n      framebuffer: this.framebuffer,\n      stop: this.stop,\n      // Initial values\n      useDevicePixels: this.useDevicePixels,\n      needsRedraw: null,\n      tick: 0,\n      tock: 0\n    };\n  }\n\n  // Update the context object that will be passed to app callbacks\n  _updateCallbackData() {\n    // CallbackData width and height represent drawing buffer width and height\n    const width = this.gl.drawingBufferWidth;\n    const height = this.gl.drawingBufferHeight;\n    if (width !== this._callbackData.width || height !== this._callbackData.height) {\n      this.setNeedsRedraw('drawing buffer resized');\n    }\n    this._callbackData.width = width;\n    this._callbackData.height = height;\n    this._callbackData.aspect = width / height;\n    this._callbackData.needsRedraw = this.needsRedraw;\n    this._callbackData.offScreen = this.offScreen;\n\n    // Update redraw reason\n    this._callbackData.needsRedraw = this.needsRedraw;\n    this.needsRedraw = null;\n\n    // Increment tick\n    this._callbackData.tick++;\n  }\n\n  _finalizeCallbackData() {\n    // call callback\n    this.props.onFinalize(this._callbackData);\n    // end callback\n  }\n\n  // Add application's data to the app context object\n  _addCallbackData(appContext) {\n    if (typeof appContext === 'object' && appContext !== null) {\n      this._callbackData = Object.assign({}, this._callbackData, appContext);\n    }\n  }\n\n  // Either uses supplied or existing context, or calls provided callback to create one\n  _createWebGLContext(opts) {\n    // Create the WebGL context if necessary\n    opts = Object.assign({}, opts, DEFAULT_GL_OPTIONS, this.props.glOptions);\n    this.gl = this.props.gl || this.props.onCreateContext(opts);\n\n    if (!isWebGL(this.gl)) {\n      throw new Error('AnimationLoop.onCreateContext - illegal context returned');\n    }\n\n    if (this.props.debug) {\n      this.gl = makeDebugContext(this.gl);\n    }\n\n    // Reset the WebGL context.\n    resetParameters(this.gl);\n  }\n\n  // Default viewport setup\n  _resizeViewport() {\n    if (this.autoResizeViewport) {\n      this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    }\n  }\n\n  // Resize the render buffer of the canvas to match canvas client size\n  // Optionally multiplying with devicePixel ratio\n  _resizeCanvasDrawingBuffer() {\n    if (this.autoResizeDrawingBuffer) {\n      resizeGLContext(this.gl, {useDevicePixels: this.useDevicePixels});\n    }\n  }\n\n  // TBD - deprecated?\n  _createFramebuffer() {\n    // Setup default framebuffer\n    if (this.props.createFramebuffer) {\n      this.framebuffer = new Framebuffer(this.gl);\n    }\n  }\n\n  _resizeFramebuffer() {\n    if (this.framebuffer) {\n      this.framebuffer.resize({\n        width: this.gl.drawingBufferWidth,\n        height: this.gl.drawingBufferHeight\n      });\n    }\n  }\n}\n"],"file":"animation-loop.js"}