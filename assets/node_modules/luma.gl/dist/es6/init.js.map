{"version":3,"sources":["../../src/init.js"],"names":["isBrowser","global","log","VERSION","STARTUP_MESSAGE","luma","Error","version","stats","globals","modules","nodeIO"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,SAAQC,MAAR,QAAqB,iBAArB;AACA,OAAOC,GAAP,MAAgB,aAAhB,C,CACA;;AACA;;AACA,MAAMC,UAAU,mBAAuB,WAAvB,aAAmD,qBAAnE;AAEA,MAAMC,kBAAkB,wDAAxB,C,CACA;AACA;AACA;;AAEA,IAAIH,OAAOI,IAAP,IAAeJ,OAAOI,IAAP,CAAYF,OAAZ,KAAwBA,OAA3C,EAAoD;AAClD,QAAM,IAAIG,KAAJ,CAAW,yCAAwCL,OAAOI,IAAP,CAAYF,OAAQ,OAAMA,OAAQ,EAArF,CAAN;AACD;;AAED,IAAI,CAACF,OAAOI,IAAZ,EAAkB;AAChB,MAAIL,SAAJ,EAAe;AACbE,QAAIA,GAAJ,CAAQ,CAAR,EAAY,WAAUC,OAAQ,MAAKC,eAAgB,EAAnD;AACD;;AAEDH,SAAOI,IAAP,GAAcJ,OAAOI,IAAP,IAAe;AAC3BF,WAD2B;AAE3BI,aAASJ,OAFkB;AAG3BD,OAH2B;AAK3B;AACA;AACAM,WAAO,EAPoB;AAS3B;AACA;AACA;AACA;AACA;AACAC,aAAS;AACPC,eAAS,EADF;AAEPC,cAAQ;AAFD;AAdkB,GAA7B;AAmBD;;AAED,SAAQV,MAAR;AACA,eAAeA,OAAOI,IAAtB","sourcesContent":["import isBrowser from './utils/is-browser';\nimport {global} from './utils/globals';\nimport log from './utils/log';\n// Version detection using babel plugin\n/* global __VERSION__ */\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'untranspiled source';\n\nconst STARTUP_MESSAGE = 'set luma.log.priority=1 (or higher) to trace rendering';\n// Assign luma.log.priority in console to control logging: \\\n// 0: none, 1: minimal, 2: verbose, 3: attribute/uniforms, 4: gl logs\n// luma.log.break[], set to gl funcs, luma.log.profile[] set to model names`;\n\nif (global.luma && global.luma.VERSION !== VERSION) {\n  throw new Error(`luma.gl - multiple VERSIONs detected: ${global.luma.VERSION} vs ${VERSION}`);\n}\n\nif (!global.luma) {\n  if (isBrowser) {\n    log.log(0, `luma.gl ${VERSION} - ${STARTUP_MESSAGE}`)();\n  }\n\n  global.luma = global.luma || {\n    VERSION,\n    version: VERSION,\n    log,\n\n    // A global stats object that various components can add information to\n    // E.g. see webgl/resource.js\n    stats: {},\n\n    // Keep some luma globals in a sub-object\n    // This allows us to dynamically detect if certain modules have been\n    // included (such as IO and headless) and enable related functionality,\n    // without unconditionally requiring and thus bundling big dependencies\n    // into the app.\n    globals: {\n      modules: {},\n      nodeIO: {}\n    }\n  };\n}\n\nexport {global};\nexport default global.luma;\n"],"file":"init.js"}