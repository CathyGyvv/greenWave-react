{"version":3,"sources":["../../../src/webgl-context/create-headless-context.js"],"names":["isBrowser","ERR_HEADLESSGL_LOAD","ERR_HEADLESSGL_NOT_AVAILABLE","ERR_HEADLESSGL_FAILED","headlessGL","module","require","error","console","message","isWebglAvailable","createHeadlessContext","width","height","opts","onError","webgl1","webgl2","gl"],"mappings":"AAAA;;AACA;AACA,OAAOA,SAAP,MAAsB,qBAAtB;AAEA,MAAMC,sBAAuB;gEAA7B;AAGA,MAAMC,+BACN,sEADA;AAGA,MAAMC,wBACN,sEADA;AAGA,OAAO,IAAIC,aAAa,IAAjB;;AAEP,IAAI,CAACJ,SAAL,EAAgB;AACd,MAAI;AACFI,iBAAaC,OAAOC,OAAP,CAAe,IAAf,CAAb;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,YAAQD,KAAR;AACAC,YAAQD,KAAR,CAAe,GAAEN,mBAAoB,KAAIM,MAAME,OAAQ,EAAvD;AACD;AACF;;AAED,OAAO,MAAMC,mBAAmBV,aAAaI,UAAtC,C,CAEP;;AACA,OAAO,SAASO,qBAAT,CAA+B;AAACC,OAAD;AAAQC,QAAR;AAAgBC,MAAhB;AAAsBC;AAAtB,CAA/B,EAA+D;AAAA,QAC7DC,MAD6D,GAC3CF,IAD2C,CAC7DE,MAD6D;AAAA,QACrDC,MADqD,GAC3CH,IAD2C,CACrDG,MADqD;;AAEpE,MAAIA,UAAU,CAACD,MAAf,EAAuB;AACrB,WAAOD,QAAQ,qCAAR,CAAP;AACD;;AACD,MAAI,CAACX,UAAL,EAAiB;AACf,WAAOW,QAAQb,4BAAR,CAAP;AACD;;AACD,QAAMgB,KAAKd,WAAWQ,KAAX,EAAkBC,MAAlB,EAA0BC,IAA1B,CAAX;;AACA,MAAI,CAACI,EAAL,EAAS;AACP,WAAOH,QAAQZ,qBAAR,CAAP;AACD;;AACD,SAAOe,EAAP;AACD","sourcesContent":["/* eslint-disable quotes, no-console */\n/* global console */\nimport isBrowser from '../utils/is-browser';\n\nconst ERR_HEADLESSGL_LOAD = `\\\nWebGL not available in Node.js, install using \"npm install gl\".`;\n\nconst ERR_HEADLESSGL_NOT_AVAILABLE =\n'Failed to create WebGL context in Node.js, headless gl not available';\n\nconst ERR_HEADLESSGL_FAILED =\n'Failed to create WebGL context in Node.js, headless gl returned null';\n\nexport let headlessGL = null;\n\nif (!isBrowser) {\n  try {\n    headlessGL = module.require('gl');\n  } catch (error) {\n    console.error();\n    console.error(`${ERR_HEADLESSGL_LOAD}\\n${error.message}`);\n  }\n}\n\nexport const isWebglAvailable = isBrowser || headlessGL;\n\n// Create headless gl context (for running under Node.js)\nexport function createHeadlessContext({width, height, opts, onError}) {\n  const {webgl1, webgl2} = opts;\n  if (webgl2 && !webgl1) {\n    return onError('headless-gl does not support WebGL2');\n  }\n  if (!headlessGL) {\n    return onError(ERR_HEADLESSGL_NOT_AVAILABLE);\n  }\n  const gl = headlessGL(width, height, opts);\n  if (!gl) {\n    return onError(ERR_HEADLESSGL_FAILED);\n  }\n  return gl;\n}\n"],"file":"create-headless-context.js"}