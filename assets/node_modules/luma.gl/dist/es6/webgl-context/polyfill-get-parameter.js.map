{"version":3,"sources":["../../../src/webgl-context/polyfill-get-parameter.js"],"names":["GL","OES_element_index","WEBGL_draw_buffers","EXT_disjoint_timer_query","EXT_disjoint_timer_query_webgl2","EXT_texture_filter_anisotropic","WEBGL_debug_renderer_info","GL_FRAGMENT_SHADER_DERIVATIVE_HINT","GL_DONT_CARE","GL_GPU_DISJOINT_EXT","GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT","GL_UNMASKED_VENDOR_WEBGL","GL_UNMASKED_RENDERER_WEBGL","getWebGL2ValueOrZero","gl","isWebGL2","undefined","WEBGL_PARAMETERS","READ_BUFFER","COLOR_ATTACHMENT0","RASTERIZER_DISCARD","SAMPLES","getParameter","ext","getExtension","GPU_DISJOINT_EXT","UNMASKED_VENDOR_WEBGL","VENDOR","UNMASKED_RENDERER_WEBGL","RENDERER","luma","extensions","MAX_TEXTURE_MAX_ANISOTROPY_EXT","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","MAX_COLOR_ATTACHMENTS","MAX_COLOR_ATTACHMENTS_WEBGL","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_DRAW_BUFFERS","MAX_DRAW_BUFFERS_WEBGL","MAX_ELEMENT_INDEX","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_SAMPLES","MAX_SERVER_WAIT_TIMEOUT","MAX_TEXTURE_LOD_BIAS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_VARYING_COMPONENTS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MIN_PROGRAM_TEXEL_OFFSET","MAX_PROGRAM_TEXEL_OFFSET","UNIFORM_BUFFER_OFFSET_ALIGNMENT","GL_TEXTURE_BINDING_3D","TEXTURE_BINDING_3D","getParameterPolyfill","originalGetParameter","pname","limit","value","result"],"mappings":"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","sourcesContent":["/* eslint-disable no-inline-comments, max-len, camelcase */\nimport GL from '../constants';\n\nconst OES_element_index = 'OES_element_index';\nconst WEBGL_draw_buffers = 'WEBGL_draw_buffers';\nconst EXT_disjoint_timer_query = 'EXT_disjoint_timer_query';\nconst EXT_disjoint_timer_query_webgl2 = 'EXT_disjoint_timer_query_webgl2';\nconst EXT_texture_filter_anisotropic = 'EXT_texture_filter_anisotropic';\nconst WEBGL_debug_renderer_info = 'WEBGL_debug_renderer_info';\n\nconst GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;\nconst GL_DONT_CARE = 0x1100;\nconst GL_GPU_DISJOINT_EXT = 0x8FBB;\nconst GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\nconst GL_UNMASKED_VENDOR_WEBGL = 0x9245; // vendor string of the graphics driver.\nconst GL_UNMASKED_RENDERER_WEBGL = 0x9246; // renderer string of the graphics driver.\n\nconst getWebGL2ValueOrZero = gl => !isWebGL2(gl) ? 0 : undefined;\n\n// if a function returns undefined in this table,\n// the original getParameter will be called, defeating the override\nconst WEBGL_PARAMETERS = {\n  [GL.READ_BUFFER]: gl => !isWebGL2(gl) ? GL.COLOR_ATTACHMENT0 : undefined,\n\n  // WebGL2 context parameters\n  [GL_FRAGMENT_SHADER_DERIVATIVE_HINT]:\n    gl => !isWebGL2(gl) ? GL_DONT_CARE : undefined,\n\n  [GL.RASTERIZER_DISCARD]: getWebGL2ValueOrZero,\n\n  [GL.SAMPLES]: getWebGL2ValueOrZero,\n\n  // WebGL2 extension context parameters\n  [GL_GPU_DISJOINT_EXT]:\n    (gl, getParameter) => {\n      const ext = isWebGL2(gl) ?\n        gl.getExtension(EXT_disjoint_timer_query_webgl2) :\n        gl.getExtension(EXT_disjoint_timer_query);\n      return ext && ext.GPU_DISJOINT_EXT ? getParameter(ext.GPU_DISJOINT_EXT) : 0;\n    },\n\n  // Extension fixed values\n  [GL_UNMASKED_VENDOR_WEBGL]:\n    (gl, getParameter) => {\n      const ext = gl.getExtension(WEBGL_debug_renderer_info);\n      return getParameter((ext && ext.UNMASKED_VENDOR_WEBGL) || GL.VENDOR);\n    },\n\n  [GL_UNMASKED_RENDERER_WEBGL]:\n    (gl, getParameter) => {\n      const ext = gl.getExtension(WEBGL_debug_renderer_info);\n      return getParameter((ext && ext.UNMASKED_RENDERER_WEBGL) || GL.RENDERER);\n    },\n\n  // Extension LIMITS\n  [GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT]:\n    (gl, getParameter) => {\n      const ext = gl.luma.extensions[EXT_texture_filter_anisotropic];\n      return ext ? getParameter(ext.MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 1.0;\n    },\n\n  // WebGL2 Limits\n  [GL.MAX_3D_TEXTURE_SIZE]: getWebGL2ValueOrZero,\n  [GL.MAX_ARRAY_TEXTURE_LAYERS]: getWebGL2ValueOrZero,\n  [GL.MAX_CLIENT_WAIT_TIMEOUT_WEBGL]: getWebGL2ValueOrZero,\n  [GL.MAX_COLOR_ATTACHMENTS]:\n    (gl, getParameter) => {\n      if (!isWebGL2(gl)) {\n        const ext = gl.getExtension(WEBGL_draw_buffers);\n        return ext ? getParameter(ext.MAX_COLOR_ATTACHMENTS_WEBGL) : 0;\n      }\n      return undefined;\n    },\n  [GL.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_COMBINED_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_DRAW_BUFFERS]:\n    gl => {\n      if (!isWebGL2(gl)) {\n        const ext = gl.getExtension(WEBGL_draw_buffers);\n        return ext ? ext.MAX_DRAW_BUFFERS_WEBGL : 0;\n      }\n      return undefined;\n    },\n  [GL.MAX_ELEMENT_INDEX]:\n    // Guess: per webglstats.com 99.6% of webgl2 supports 2147483647\n    gl => gl.getExtension(OES_element_index) ? 2147483647 : 65535,\n  [GL.MAX_ELEMENTS_INDICES]:\n    // Guess: \"Reasonably safe\" per webglstats.com - could be higher/lower (on some mobile devices)\n    gl => gl.getExtension(OES_element_index) ? 16777216 : 65535,\n  [GL.MAX_ELEMENTS_VERTICES]:\n    // Guess: \"Reasonably safe\" per webglstats.com - could be higher/lower (on some mobile devices)\n    gl => 16777216,\n  [GL.MAX_FRAGMENT_INPUT_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_FRAGMENT_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_FRAGMENT_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_SAMPLES]: getWebGL2ValueOrZero,\n  [GL.MAX_SERVER_WAIT_TIMEOUT]: getWebGL2ValueOrZero,\n  [GL.MAX_TEXTURE_LOD_BIAS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS]: getWebGL2ValueOrZero,\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_UNIFORM_BLOCK_SIZE]: getWebGL2ValueOrZero,\n  [GL.MAX_UNIFORM_BUFFER_BINDINGS]: getWebGL2ValueOrZero,\n  [GL.MAX_VARYING_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_OUTPUT_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_UNIFORM_BLOCKS]: getWebGL2ValueOrZero,\n  [GL.MAX_VERTEX_UNIFORM_COMPONENTS]: getWebGL2ValueOrZero,\n  [GL.MIN_PROGRAM_TEXEL_OFFSET]: getWebGL2ValueOrZero,\n  [GL.MAX_PROGRAM_TEXEL_OFFSET]: getWebGL2ValueOrZero,\n  [GL.UNIFORM_BUFFER_OFFSET_ALIGNMENT]: getWebGL2ValueOrZero\n};\n\n// Return true if WebGL2 context\nfunction isWebGL2(gl) {\n  const GL_TEXTURE_BINDING_3D = 0x806A;\n  return gl && gl.TEXTURE_BINDING_3D === GL_TEXTURE_BINDING_3D;\n}\n\n// A \"replacement\" gl.getParameter that accepts \"enums\" from extensions and WebGL2\n// and returns reasonably safe defaults\nexport function getParameterPolyfill(gl, originalGetParameter, pname) {\n\n  // Return mock limits (usually 0) for WebGL2 constants to ensure these\n  // can be queries without error\n  const limit = WEBGL_PARAMETERS[pname];\n  const value = typeof limit === 'function' ? limit(gl, originalGetParameter, pname) : limit;\n  const result = value !== undefined ? value : originalGetParameter(pname);\n  return result;\n}\n"],"file":"polyfill-get-parameter.js"}