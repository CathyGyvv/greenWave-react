{"version":3,"sources":["../../../src/webgl-context/context-state.js"],"names":["GL","pushContextState","popContextState","getParameter","getParameters","setParameter","setParameters","glSetParameters","resetParameters","getModifiedParameters","isObjectEmpty","assert","LUMA_SETTERS","framebuffer","gl","handle","bindFramebuffer","FRAMEBUFFER","blend","value","enable","BLEND","disable","blendColor","blendEquation","args","isArray","blendEquationSeparate","blendFunc","length","blendFuncSeparate","clearColor","clearDepth","clearStencil","colorMask","cull","CULL_FACE","cullFace","depthTest","DEPTH_TEST","depthFunc","depthMask","depthRange","dither","DITHER","derivativeHint","hint","FRAGMENT_SHADER_DERIVATIVE_HINT","frontFace","mipmapHint","GENERATE_MIPMAP_HINT","lineWidth","polygonOffsetFill","POLYGON_OFFSET_FILL","polygonOffset","sampleCoverage","scissorTest","SCISSOR_TEST","scissor","stencilTest","STENCIL_TEST","stencilMask","mask","backMask","stencilMaskSeparate","FRONT","BACK","stencilFunc","func","ref","backFunc","backRef","stencilFuncSeparate","stencilOp","sfail","dpfail","dppass","backSfail","backDpfail","backDppass","stencilOpSeparate","viewport","array","Array","ArrayBuffer","isView","parameters","key","setter","withParameters","nocatch","frameBuffer"],"mappings":"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","sourcesContent":["/* eslint-disable no-inline-comments, max-len */\nimport GL from '../constants';\nimport {\n  pushContextState,\n  popContextState\n} from '../webgl-context/track-context-state';\nimport {\n  getParameter,\n  getParameters,\n  setParameter,\n  setParameters as glSetParameters,\n  resetParameters,\n  getModifiedParameters\n} from '../webgl-context/set-parameters';\nimport {isObjectEmpty} from '../utils';\nimport assert from '../utils/assert';\n\n// map of parameter setter function names, parameter constants, default values and types\n// - Uses gl function names, except when setter function exist that are named differently\n// - When the WebGL api offers <setter> and <setter>Separate (e.g. blendEquation and\n//   blendEquationSeparate, we use non-separate name, but accept both non-separate and\n//   separate arguments. Thus, a `getParameter` call will always return all the separate values\n//   in an array, in a form that can be accepted by the setter.\nexport const LUMA_SETTERS = {\n  framebuffer: (gl, framebuffer) => {\n    const handle = framebuffer && framebuffer.handle ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl, value) => value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    args = isArray(args) ? args : [args, args];\n    gl.blendEquationSeparate(...args);\n  },\n  blendFunc: (gl, args) => {\n    args = isArray(args) && args.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...args);\n  },\n\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n\n  colorMask: (gl, value) => gl.colorMask(...value),\n\n  cull: (gl, value) => value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE),\n  cullFace: (gl, value) => gl.cullFace(value),\n\n  depthTest: (gl, value) => value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n\n  dither: (gl, value) => value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER),\n\n  derivativeHint: (gl, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl, value) => gl.frontFace(value),\n\n  mipmapHint: (gl, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n\n  sampleCoverage: (gl, value) => gl.sampleCoverage(...value),\n\n  scissorTest: (gl, value) => value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST),\n  scissor: (gl, value) => gl.scissor(...value),\n\n  stencilTest: (gl, value) => value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl, value) => gl.viewport(...value)\n};\n\n// HELPERS\n\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\n\n// GETTERS AND SETTERS\n\n// Get the parameter value(s) from the context\nexport {getParameter}; // from '../webgl-utils/set-parameters'\n\n// Get the parameters from the context\nexport {getParameters}; // from '../webgl-utils/set-parameters'\n\n// Resets gl state to default values.\nexport {setParameter}; // from '../webgl-utils/set-parameters'\n\n// Resets gl state to default values.\nexport {resetParameters}; // from '../webgl-utils/set-parameters'\n\n// Get a map of modified parameters\nexport {getModifiedParameters};\n\n// Note: \"setParameters\" is given extra treatment below\n\n// Set the parameter value(s) by key to the context\n// Sets value with key to context.\n// Value may be \"normalized\" (in case a short form is supported). In that case\n// the normalized value is retured.\nexport function setParameters(gl, parameters) {\n  glSetParameters(gl, parameters);\n  for (const key in parameters) {\n    const setter = LUMA_SETTERS[key];\n    if (setter) {\n      setter(gl, parameters[key], key);\n    }\n  }\n}\n\n// VERY LIMITED / BASIC GL STATE MANAGEMENT\n// Executes a function with gl states temporarily set, exception safe\n// Currently support pixelStorage, scissor test and framebuffer binding\nexport function withParameters(gl, parameters, func) {\n  // assertWebGLContext(gl);\n\n  if (isObjectEmpty(parameters)) {\n    // Avoid setting state if no parameters provided. Just call and return\n    return func(gl);\n  }\n\n  const {nocatch = true} = parameters;\n  // frameBuffer not supported use framebuffer\n  assert(!parameters.frameBuffer);\n\n  pushContextState(gl);\n  setParameters(gl, parameters);\n\n  // Setup is done, call the function\n  let value;\n\n  if (nocatch) {\n    // Avoid try catch to minimize stack size impact for safe execution paths\n    value = func(gl);\n    popContextState(gl);\n  } else {\n    // Wrap in a try-catch to ensure that parameters are restored on exceptions\n    try {\n      value = func(gl);\n    } finally {\n      popContextState(gl);\n    }\n  }\n\n  return value;\n}\n"],"file":"context-state.js"}