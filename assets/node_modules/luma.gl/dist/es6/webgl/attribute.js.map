{"version":3,"sources":["../../../src/webgl/attribute.js"],"names":["assert","Buffer","GL","Attribute","constructor","gl","opts","id","type","isIndexed","target","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","value","externalBuffer","buffer","userData","update","Object","seal","_validateAttributeDefinition","delete","size","offset","stride","normalized","integer","instanced","isGeneric","isInstanced","undefined","setData","data","getBuffer"],"mappings":"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","sourcesContent":["/* eslint-disable complexity */\nimport assert from '../utils/assert';\nimport {Buffer} from '../webgl';\nimport GL from '../constants';\n\nexport default class Attribute {\n  constructor(gl, opts = {}) {\n    const {\n      id = 'unnamed-attribute',\n      type,\n      isIndexed = false\n    } = opts;\n\n    // Options that cannot be changed later\n    this.gl = gl;\n    this.id = id;\n    this.isIndexed = isIndexed;\n    this.target = isIndexed ? GL.ELEMENT_ARRAY_BUFFER : GL.ARRAY_BUFFER;\n    this.type = type;\n\n    // Initialize the attribute descriptor, with WebGL and metadata fields\n    this.value = null;\n    this.externalBuffer = null;\n    this.buffer = null;\n    this.userData = {}; // Reserved for application\n    this.update(opts);\n\n    // Sanity - no app fields on our attributes. Use userData instead.\n    Object.seal(this);\n\n    // Check all fields and generate helpful error messages\n    this._validateAttributeDefinition();\n  }\n\n  delete() {\n    if (this.buffer) {\n      this.buffer.delete();\n      this.buffer = null;\n    }\n  }\n\n  update({\n    value,\n    buffer,\n\n    // buffer options\n    size = this.size,\n    offset = this.offset || 0,\n    stride = this.stride || 0,\n    normalized = this.normalized || false,\n    integer = this.integer || false,\n    instanced = this.instanced || 0,\n\n    isGeneric = this.isGeneric || false,\n    isInstanced\n  }) {\n\n    this.size = size;\n    this.offset = offset;\n    this.stride = stride;\n    this.normalized = normalized;\n    this.integer = integer;\n    this.isGeneric = isGeneric;\n\n    if (isInstanced !== undefined) {\n      this.instanced = isInstanced ? 1 : 0;\n    } else {\n      this.instanced = instanced;\n    }\n\n    if (buffer) {\n      this.externalBuffer = buffer;\n      this.type = buffer.type;\n    } else if (value) {\n      this.externalBuffer = null;\n      this.value = value;\n\n      if (!isGeneric) {\n        // Create buffer if needed\n        this.buffer = this.buffer || new Buffer(this.gl, {\n          target: this.target,\n          type: this.type\n        });\n        this.buffer.setData({data: value});\n        this.type = this.buffer.type;\n      }\n    }\n  }\n\n  getBuffer() {\n    if (this.isGeneric) {\n      return null;\n    }\n    return this.externalBuffer || this.buffer;\n  }\n\n  _validateAttributeDefinition() {\n    assert(\n      this.size >= 1 && this.size <= 4,\n      `Attribute definition for ${this.id} invalid size`\n    );\n  }\n}\n"],"file":"attribute.js"}