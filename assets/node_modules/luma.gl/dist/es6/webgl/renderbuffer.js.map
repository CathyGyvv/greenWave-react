{"version":3,"sources":["../../../src/webgl/renderbuffer.js"],"names":["GL","isWebGL2","Resource","assert","GL_RENDERBUFFER","GL_SAMPLES","GL_RENDERBUFFER_WIDTH","GL_RENDERBUFFER_HEIGHT","GL_RENDERBUFFER_INTERNAL_FORMAT","GL_RENDERBUFFER_SAMPLES","CB_FLOAT_WEBGL2","RENDERBUFFER_FORMATS","DEPTH_COMPONENT16","DEPTH_COMPONENT24","gl2","DEPTH_COMPONENT32F","STENCIL_INDEX8","DEPTH_STENCIL","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","RGBA4","RGB565","RGB5_A1","R8","R8UI","R8I","R16UI","R16I","R32UI","R32I","RG8","RG8UI","RG8I","RG16UI","RG16I","RG32UI","RG32I","RGB8","RGBA8","RGB10_A2","RGBA8UI","RGBA8I","RGB10_A2UI","RGBA16UI","RGBA16I","RGBA32I","RGBA32UI","R16F","RG16F","RGBA16F","R32F","RG32F","RGBA32F","R11F_G11F_B10F","isFormatSupported","gl","format","formats","info","value","gl1","getExtension","Renderbuffer","isSupported","getSamplesForFormat","getInternalformatParameter","constructor","opts","initialize","Object","seal","width","height","samples","bindRenderbuffer","handle","renderbufferStorageMultisample","renderbufferStorage","resize","_createHandle","createRenderbuffer","_deleteHandle","deleteRenderbuffer","_syncHandle","getParameter","_getParameter","pname","getRenderbufferParameter"],"mappings":"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","sourcesContent":["/* eslint-disable no-inline-comments */\nimport GL from '../constants';\nimport {isWebGL2} from '../webgl-utils';\nimport Resource from './resource';\nimport assert from '../utils/assert';\n\n// Define local GL constants to optimize minification\nconst GL_RENDERBUFFER = 0x8D41;\nconst GL_SAMPLES = 0x80A9;\nconst GL_RENDERBUFFER_WIDTH = 0x8D42;\nconst GL_RENDERBUFFER_HEIGHT = 0x8D43;\nconst GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;\nconst GL_RENDERBUFFER_SAMPLES = 0x8CAB;\n\n// Define local extension strings to optimize minification\n// const SRGB = 'EXT_sRGB';\n// const CB_FLOAT_WEBGL1 = 'WEBGL_color_buffer_float';\nconst CB_FLOAT_WEBGL2 = 'EXT_color_buffer_float';\n// const CB_HALF_FLOAT_WEBGL1 = 'EXT_color_buffer_half_float';\n\nexport const RENDERBUFFER_FORMATS = {\n  [GL.DEPTH_COMPONENT16]: {}, // 16 depth bits.\n  [GL.DEPTH_COMPONENT24]: {gl2: true},\n  [GL.DEPTH_COMPONENT32F]: {gl2: true},\n\n  [GL.STENCIL_INDEX8]: {}, // 8 stencil bits.\n\n  [GL.DEPTH_STENCIL]: {},\n  [GL.DEPTH24_STENCIL8]: {gl2: true},\n  [GL.DEPTH32F_STENCIL8]: {gl2: true},\n\n  // When using a WebGL 1 context, color renderbuffer formats are limited\n  [GL.RGBA4]: {},\n  [GL.RGB565]: {},\n  [GL.RGB5_A1]: {},\n\n  // When using a WebGL 2 context, the following values are available additionally:\n  [GL.R8]: {gl2: true},\n  [GL.R8UI]: {gl2: true},\n  [GL.R8I]: {gl2: true},\n  [GL.R16UI]: {gl2: true},\n  [GL.R16I]: {gl2: true},\n  [GL.R32UI]: {gl2: true},\n  [GL.R32I]: {gl2: true},\n  [GL.RG8]: {gl2: true},\n  [GL.RG8UI]: {gl2: true},\n  [GL.RG8I]: {gl2: true},\n  [GL.RG16UI]: {gl2: true},\n  [GL.RG16I]: {gl2: true},\n  [GL.RG32UI]: {gl2: true},\n  [GL.RG32I]: {gl2: true},\n  [GL.RGB8]: {gl2: true},\n  [GL.RGBA8]: {gl2: true},\n  // [GL.SRGB8_ALPHA8]: {gl2: true, gl1: SRGB}, // When using the EXT_sRGB WebGL1 extension\n  [GL.RGB10_A2]: {gl2: true},\n  [GL.RGBA8UI]: {gl2: true},\n  [GL.RGBA8I]: {gl2: true},\n  [GL.RGB10_A2UI]: {gl2: true},\n  [GL.RGBA16UI]: {gl2: true},\n  [GL.RGBA16I]: {gl2: true},\n  [GL.RGBA32I]: {gl2: true},\n  [GL.RGBA32UI]: {gl2: true},\n\n  // When using a WebGL 2 context and the EXT_color_buffer_float WebGL2 extension\n  [GL.R16F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.RG16F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.RGBA16F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.R32F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.RG32F]: {gl2: CB_FLOAT_WEBGL2},\n  // TODO - can't get WEBGL_color_buffer_float to work on renderbuffers\n  [GL.RGBA32F]: {gl2: CB_FLOAT_WEBGL2},\n  // [GL.RGBA32F]: {gl2: CB_FLOAT_WEBGL2, gl1: CB_FLOAT_WEBGL1},\n  [GL.R11F_G11F_B10F]: {gl2: CB_FLOAT_WEBGL2}\n};\n\nfunction isFormatSupported(gl, format, formats) {\n  const info = formats[format];\n  if (!info) {\n    return false;\n  }\n  const value = isWebGL2(gl) ? info.gl2 || info.gl1 : info.gl1;\n  if (typeof value === 'string') {\n    return gl.getExtension(value);\n  }\n  return value;\n}\n\nexport default class Renderbuffer extends Resource {\n\n  static isSupported(gl, {format} = {}) {\n    return !format || isFormatSupported(gl, format, RENDERBUFFER_FORMATS);\n  }\n\n  static getSamplesForFormat(gl, {format}) {\n    // Polyfilled to return [0] under WebGL1\n    return gl.getInternalformatParameter(GL_RENDERBUFFER, format, GL_SAMPLES);\n  }\n\n  constructor(gl, opts = {}) {\n    super(gl, opts);\n    this.initialize(opts);\n    Object.seal(this);\n  }\n\n  // Creates and initializes a renderbuffer object's data store\n  initialize({format, width = 1, height = 1, samples = 0}) {\n    assert(format, 'Needs format');\n    this.gl.bindRenderbuffer(GL_RENDERBUFFER, this.handle);\n\n    if (samples !== 0 && isWebGL2(this.gl)) {\n      this.gl.renderbufferStorageMultisample(GL_RENDERBUFFER, samples, format, width, height);\n    } else {\n      this.gl.renderbufferStorage(GL_RENDERBUFFER, format, width, height);\n    }\n\n    // this.gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n\n    this.format = format;\n    this.width = width;\n    this.height = height;\n    this.samples = samples;\n\n    return this;\n  }\n\n  resize({width, height}) {\n    // Don't resize if width/height haven't changed\n    if (width !== this.width || height !== this.height) {\n      return this.initialize({width, height, format: this.format, samples: this.samples});\n    }\n    return this;\n  }\n\n  // PRIVATE METHODS\n  _createHandle() {\n    return this.gl.createRenderbuffer();\n  }\n\n  _deleteHandle() {\n    this.gl.deleteRenderbuffer(this.handle);\n  }\n\n  _syncHandle(handle) {\n    this.format = this.getParameter(GL_RENDERBUFFER_INTERNAL_FORMAT);\n    this.width = this.getParameter(GL_RENDERBUFFER_WIDTH);\n    this.height = this.getParameter(GL_RENDERBUFFER_HEIGHT);\n    this.samples = this.getParameter(GL_RENDERBUFFER_SAMPLES);\n  }\n\n  // @param {Boolean} opt.autobind=true - method call will bind/unbind object\n  // @returns {GLenum|GLint} - depends on pname\n  _getParameter(pname) {\n    this.gl.bindRenderbuffer(GL_RENDERBUFFER, this.handle);\n    const value = this.gl.getRenderbufferParameter(GL_RENDERBUFFER, pname);\n    // this.gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n    return value;\n  }\n}\n"],"file":"renderbuffer.js"}