{"version":3,"sources":["../../../src/webgl-utils/attribute-utils.js"],"names":["GL_POINTS","GL_LINES","GL_LINE_LOOP","GL_LINE_STRIP","GL_TRIANGLES","GL_TRIANGLE_STRIP","GL_TRIANGLE_FAN","getPrimitiveDrawMode","drawMode","getPrimitiveCount","vertexCount","getVertexCount","primitiveCount"],"mappings":";;;;;;;;;AAAA;;;;AAEA,IAAMA,YAAY,GAAlB;AACA,IAAMC,WAAW,GAAjB;AACA,IAAMC,eAAe,GAArB;AACA,IAAMC,gBAAgB,GAAtB;AACA,IAAMC,eAAe,GAArB;AACA,IAAMC,oBAAoB,GAA1B;AACA,IAAMC,kBAAkB,GAAxB,C,CAEA;;AACO,SAASC,oBAAT,CAA8BC,QAA9B,EAAwC;AAC7C,UAAQA,QAAR;AACA,SAAKR,SAAL;AAAgB,aAAOA,SAAP;;AAChB,SAAKC,QAAL;AAAe,aAAOA,QAAP;;AACf,SAAKE,aAAL;AAAoB,aAAOF,QAAP;;AACpB,SAAKC,YAAL;AAAmB,aAAOD,QAAP;;AACnB,SAAKG,YAAL;AAAmB,aAAOA,YAAP;;AACnB,SAAKC,iBAAL;AAAwB,aAAOD,YAAP;;AACxB,SAAKE,eAAL;AAAsB,aAAOF,YAAP;;AACtB;AAAS,2BAAO,KAAP;AAAe,aAAO,CAAP;AARxB;AAUD,C,CAED;;;AACO,SAASK,iBAAT,OAAoD;AAAA,MAAxBD,QAAwB,QAAxBA,QAAwB;AAAA,MAAdE,WAAc,QAAdA,WAAc;;AACzD,UAAQF,QAAR;AACA,SAAKR,SAAL;AACA,SAAKE,YAAL;AACE,aAAOQ,WAAP;;AACF,SAAKT,QAAL;AAAe,aAAOS,cAAc,CAArB;;AACf,SAAKP,aAAL;AAAoB,aAAOO,cAAc,CAArB;;AACpB,SAAKN,YAAL;AAAmB,aAAOM,cAAc,CAArB;;AACnB,SAAKL,iBAAL;AACA,SAAKC,eAAL;AACE,aAAOI,cAAc,CAArB;;AACF;AAAS,2BAAO,KAAP;AAAe,aAAO,CAAP;AAVxB;AAYD,C,CAED;;;AACO,SAASC,cAAT,QAAiD;AAAA,MAAxBH,QAAwB,SAAxBA,QAAwB;AAAA,MAAdE,WAAc,SAAdA,WAAc;AACtD,MAAME,iBAAiBH,kBAAkB;AAACD,sBAAD;AAAWE;AAAX,GAAlB,CAAvB;;AACA,UAAQH,qBAAqBC,QAArB,CAAR;AACA,SAAKR,SAAL;AAAgB,aAAOY,cAAP;;AAChB,SAAKX,QAAL;AAAe,aAAOW,iBAAiB,CAAxB;;AACf,SAAKR,YAAL;AAAmB,aAAOQ,iBAAiB,CAAxB;;AACnB;AAAS,2BAAO,KAAP;AAAe,aAAO,CAAP;AAJxB;AAMD","sourcesContent":["import assert from '../utils/assert';\n\nconst GL_POINTS = 0x0;\nconst GL_LINES = 0x1;\nconst GL_LINE_LOOP = 0x2;\nconst GL_LINE_STRIP = 0x3;\nconst GL_TRIANGLES = 0x4;\nconst GL_TRIANGLE_STRIP = 0x5;\nconst GL_TRIANGLE_FAN = 0x6;\n\n// Counts the number of complete primitives given a number of vertices and a drawMode\nexport function getPrimitiveDrawMode(drawMode) {\n  switch (drawMode) {\n  case GL_POINTS: return GL_POINTS;\n  case GL_LINES: return GL_LINES;\n  case GL_LINE_STRIP: return GL_LINES;\n  case GL_LINE_LOOP: return GL_LINES;\n  case GL_TRIANGLES: return GL_TRIANGLES;\n  case GL_TRIANGLE_STRIP: return GL_TRIANGLES;\n  case GL_TRIANGLE_FAN: return GL_TRIANGLES;\n  default: assert(false); return 0;\n  }\n}\n\n// Counts the number of complete \"primitives\" given a number of vertices and a drawMode\nexport function getPrimitiveCount({drawMode, vertexCount}) {\n  switch (drawMode) {\n  case GL_POINTS:\n  case GL_LINE_LOOP:\n    return vertexCount;\n  case GL_LINES: return vertexCount / 2;\n  case GL_LINE_STRIP: return vertexCount - 1;\n  case GL_TRIANGLES: return vertexCount / 3;\n  case GL_TRIANGLE_STRIP:\n  case GL_TRIANGLE_FAN:\n    return vertexCount - 2;\n  default: assert(false); return 0;\n  }\n}\n\n// Counts the number of vertices after splitting the vertex stream into separate \"primitives\"\nexport function getVertexCount({drawMode, vertexCount}) {\n  const primitiveCount = getPrimitiveCount({drawMode, vertexCount});\n  switch (getPrimitiveDrawMode(drawMode)) {\n  case GL_POINTS: return primitiveCount;\n  case GL_LINES: return primitiveCount * 2;\n  case GL_TRIANGLES: return primitiveCount * 3;\n  default: assert(false); return 0;\n  }\n}\n"],"file":"attribute-utils.js"}