{"version":3,"sources":["../../../src/webgl/renderbuffer.js"],"names":["GL_RENDERBUFFER","GL_SAMPLES","GL_RENDERBUFFER_WIDTH","GL_RENDERBUFFER_HEIGHT","GL_RENDERBUFFER_INTERNAL_FORMAT","GL_RENDERBUFFER_SAMPLES","CB_FLOAT_WEBGL2","RENDERBUFFER_FORMATS","GL","DEPTH_COMPONENT16","DEPTH_COMPONENT24","gl2","DEPTH_COMPONENT32F","STENCIL_INDEX8","DEPTH_STENCIL","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","RGBA4","RGB565","RGB5_A1","R8","R8UI","R8I","R16UI","R16I","R32UI","R32I","RG8","RG8UI","RG8I","RG16UI","RG16I","RG32UI","RG32I","RGB8","RGBA8","RGB10_A2","RGBA8UI","RGBA8I","RGB10_A2UI","RGBA16UI","RGBA16I","RGBA32I","RGBA32UI","R16F","RG16F","RGBA16F","R32F","RG32F","RGBA32F","R11F_G11F_B10F","isFormatSupported","gl","format","formats","info","value","gl1","getExtension","Renderbuffer","getInternalformatParameter","opts","initialize","Object","seal","width","height","samples","bindRenderbuffer","handle","renderbufferStorageMultisample","renderbufferStorage","createRenderbuffer","deleteRenderbuffer","getParameter","pname","getRenderbufferParameter","Resource"],"mappings":"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","sourcesContent":["/* eslint-disable no-inline-comments */\nimport GL from '../constants';\nimport {isWebGL2} from '../webgl-utils';\nimport Resource from './resource';\nimport assert from '../utils/assert';\n\n// Define local GL constants to optimize minification\nconst GL_RENDERBUFFER = 0x8D41;\nconst GL_SAMPLES = 0x80A9;\nconst GL_RENDERBUFFER_WIDTH = 0x8D42;\nconst GL_RENDERBUFFER_HEIGHT = 0x8D43;\nconst GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;\nconst GL_RENDERBUFFER_SAMPLES = 0x8CAB;\n\n// Define local extension strings to optimize minification\n// const SRGB = 'EXT_sRGB';\n// const CB_FLOAT_WEBGL1 = 'WEBGL_color_buffer_float';\nconst CB_FLOAT_WEBGL2 = 'EXT_color_buffer_float';\n// const CB_HALF_FLOAT_WEBGL1 = 'EXT_color_buffer_half_float';\n\nexport const RENDERBUFFER_FORMATS = {\n  [GL.DEPTH_COMPONENT16]: {}, // 16 depth bits.\n  [GL.DEPTH_COMPONENT24]: {gl2: true},\n  [GL.DEPTH_COMPONENT32F]: {gl2: true},\n\n  [GL.STENCIL_INDEX8]: {}, // 8 stencil bits.\n\n  [GL.DEPTH_STENCIL]: {},\n  [GL.DEPTH24_STENCIL8]: {gl2: true},\n  [GL.DEPTH32F_STENCIL8]: {gl2: true},\n\n  // When using a WebGL 1 context, color renderbuffer formats are limited\n  [GL.RGBA4]: {},\n  [GL.RGB565]: {},\n  [GL.RGB5_A1]: {},\n\n  // When using a WebGL 2 context, the following values are available additionally:\n  [GL.R8]: {gl2: true},\n  [GL.R8UI]: {gl2: true},\n  [GL.R8I]: {gl2: true},\n  [GL.R16UI]: {gl2: true},\n  [GL.R16I]: {gl2: true},\n  [GL.R32UI]: {gl2: true},\n  [GL.R32I]: {gl2: true},\n  [GL.RG8]: {gl2: true},\n  [GL.RG8UI]: {gl2: true},\n  [GL.RG8I]: {gl2: true},\n  [GL.RG16UI]: {gl2: true},\n  [GL.RG16I]: {gl2: true},\n  [GL.RG32UI]: {gl2: true},\n  [GL.RG32I]: {gl2: true},\n  [GL.RGB8]: {gl2: true},\n  [GL.RGBA8]: {gl2: true},\n  // [GL.SRGB8_ALPHA8]: {gl2: true, gl1: SRGB}, // When using the EXT_sRGB WebGL1 extension\n  [GL.RGB10_A2]: {gl2: true},\n  [GL.RGBA8UI]: {gl2: true},\n  [GL.RGBA8I]: {gl2: true},\n  [GL.RGB10_A2UI]: {gl2: true},\n  [GL.RGBA16UI]: {gl2: true},\n  [GL.RGBA16I]: {gl2: true},\n  [GL.RGBA32I]: {gl2: true},\n  [GL.RGBA32UI]: {gl2: true},\n\n  // When using a WebGL 2 context and the EXT_color_buffer_float WebGL2 extension\n  [GL.R16F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.RG16F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.RGBA16F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.R32F]: {gl2: CB_FLOAT_WEBGL2},\n  [GL.RG32F]: {gl2: CB_FLOAT_WEBGL2},\n  // TODO - can't get WEBGL_color_buffer_float to work on renderbuffers\n  [GL.RGBA32F]: {gl2: CB_FLOAT_WEBGL2},\n  // [GL.RGBA32F]: {gl2: CB_FLOAT_WEBGL2, gl1: CB_FLOAT_WEBGL1},\n  [GL.R11F_G11F_B10F]: {gl2: CB_FLOAT_WEBGL2}\n};\n\nfunction isFormatSupported(gl, format, formats) {\n  const info = formats[format];\n  if (!info) {\n    return false;\n  }\n  const value = isWebGL2(gl) ? info.gl2 || info.gl1 : info.gl1;\n  if (typeof value === 'string') {\n    return gl.getExtension(value);\n  }\n  return value;\n}\n\nexport default class Renderbuffer extends Resource {\n\n  static isSupported(gl, {format} = {}) {\n    return !format || isFormatSupported(gl, format, RENDERBUFFER_FORMATS);\n  }\n\n  static getSamplesForFormat(gl, {format}) {\n    // Polyfilled to return [0] under WebGL1\n    return gl.getInternalformatParameter(GL_RENDERBUFFER, format, GL_SAMPLES);\n  }\n\n  constructor(gl, opts = {}) {\n    super(gl, opts);\n    this.initialize(opts);\n    Object.seal(this);\n  }\n\n  // Creates and initializes a renderbuffer object's data store\n  initialize({format, width = 1, height = 1, samples = 0}) {\n    assert(format, 'Needs format');\n    this.gl.bindRenderbuffer(GL_RENDERBUFFER, this.handle);\n\n    if (samples !== 0 && isWebGL2(this.gl)) {\n      this.gl.renderbufferStorageMultisample(GL_RENDERBUFFER, samples, format, width, height);\n    } else {\n      this.gl.renderbufferStorage(GL_RENDERBUFFER, format, width, height);\n    }\n\n    // this.gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n\n    this.format = format;\n    this.width = width;\n    this.height = height;\n    this.samples = samples;\n\n    return this;\n  }\n\n  resize({width, height}) {\n    // Don't resize if width/height haven't changed\n    if (width !== this.width || height !== this.height) {\n      return this.initialize({width, height, format: this.format, samples: this.samples});\n    }\n    return this;\n  }\n\n  // PRIVATE METHODS\n  _createHandle() {\n    return this.gl.createRenderbuffer();\n  }\n\n  _deleteHandle() {\n    this.gl.deleteRenderbuffer(this.handle);\n  }\n\n  _syncHandle(handle) {\n    this.format = this.getParameter(GL_RENDERBUFFER_INTERNAL_FORMAT);\n    this.width = this.getParameter(GL_RENDERBUFFER_WIDTH);\n    this.height = this.getParameter(GL_RENDERBUFFER_HEIGHT);\n    this.samples = this.getParameter(GL_RENDERBUFFER_SAMPLES);\n  }\n\n  // @param {Boolean} opt.autobind=true - method call will bind/unbind object\n  // @returns {GLenum|GLint} - depends on pname\n  _getParameter(pname) {\n    this.gl.bindRenderbuffer(GL_RENDERBUFFER, this.handle);\n    const value = this.gl.getRenderbufferParameter(GL_RENDERBUFFER, pname);\n    // this.gl.bindRenderbuffer(GL_RENDERBUFFER, null);\n    return value;\n  }\n}\n"],"file":"renderbuffer.js"}