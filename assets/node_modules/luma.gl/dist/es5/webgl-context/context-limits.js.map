{"version":3,"sources":["../../../src/webgl-context/context-limits.js"],"names":["WEBGL_LIMITS","GL","ALIASED_LINE_WIDTH_RANGE","gl1","Float32Array","ALIASED_POINT_SIZE_RANGE","MAX_TEXTURE_SIZE","gl2","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_RENDERBUFFER_SIZE","MAX_VARYING_VECTORS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_VIEWPORT_DIMS","Int32Array","MAX_3D_TEXTURE_SIZE","MAX_ARRAY_TEXTURE_LAYERS","MAX_CLIENT_WAIT_TIMEOUT_WEBGL","MAX_COLOR_ATTACHMENTS","MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS","MAX_COMBINED_UNIFORM_BLOCKS","MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS","MAX_DRAW_BUFFERS","MAX_ELEMENT_INDEX","MAX_ELEMENTS_INDICES","MAX_ELEMENTS_VERTICES","MAX_FRAGMENT_INPUT_COMPONENTS","MAX_FRAGMENT_UNIFORM_BLOCKS","MAX_FRAGMENT_UNIFORM_COMPONENTS","MAX_SAMPLES","MAX_SERVER_WAIT_TIMEOUT","MAX_TEXTURE_LOD_BIAS","MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS","MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS","MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS","MAX_UNIFORM_BLOCK_SIZE","MAX_UNIFORM_BUFFER_BINDINGS","MAX_VARYING_COMPONENTS","MAX_VERTEX_OUTPUT_COMPONENTS","MAX_VERTEX_UNIFORM_BLOCKS","MAX_VERTEX_UNIFORM_COMPONENTS","MIN_PROGRAM_TEXEL_OFFSET","negative","MAX_PROGRAM_TEXEL_OFFSET","UNIFORM_BUFFER_OFFSET_ALIGNMENT","getContextLimits","gl","luma","limits","webgl1MinLimits","webgl2MinLimits","isWebgl2","parameter","limit","webgl1MinLimit","webgl2MinLimit","minLimit","limitNotAvailable","getExtension","extension","value","getParameter","getGLContextInfo","info","VENDOR","RENDERER","UNMASKED_VENDOR_WEBGL","UNMASKED_RENDERER_WEBGL","VERSION","SHADING_LANGUAGE_VERSION","GL_UNMASKED_VENDOR_WEBGL","GL_UNMASKED_RENDERER_WEBGL","getGLContextInfo2","vendorMasked","rendererMasked","ext","vendorUnmasked","rendererUnmasked","vendor","renderer","version","shadingLanguageVersion","getContextInfo","glGetDebugInfo","TEST_EXPORTS"],"mappings":"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","sourcesContent":["/* eslint-disable no-inline-comments, max-len */\nimport GL from '../constants';\nimport {isWebGL2} from '../webgl-utils';\n\nconst WEBGL_LIMITS = {\n  [GL.ALIASED_LINE_WIDTH_RANGE]: {gl1: new Float32Array([1, 1])},\n  [GL.ALIASED_POINT_SIZE_RANGE]: {gl1: new Float32Array([1, 1])},\n  [GL.MAX_TEXTURE_SIZE]: {gl1: 64, gl2: 2048}, // GLint\n  [GL.MAX_CUBE_MAP_TEXTURE_SIZE]: {gl1: 16}, // GLint\n  [GL.MAX_TEXTURE_IMAGE_UNITS]: {gl1: 8}, // GLint\n  [GL.MAX_COMBINED_TEXTURE_IMAGE_UNITS]: {gl1: 8}, // GLint\n  [GL.MAX_VERTEX_TEXTURE_IMAGE_UNITS]: {gl1: 0}, // GLint\n  [GL.MAX_RENDERBUFFER_SIZE]: {gl1: 1}, // GLint\n  [GL.MAX_VARYING_VECTORS]: {gl1: 8}, // GLint\n  [GL.MAX_VERTEX_ATTRIBS]: {gl1: 8}, // GLint\n  [GL.MAX_VERTEX_UNIFORM_VECTORS]: {gl1: 128}, // GLint\n  [GL.MAX_FRAGMENT_UNIFORM_VECTORS]: {gl1: 16}, // GLint\n  [GL.MAX_VIEWPORT_DIMS]: {gl1: new Int32Array([0, 0])},\n\n  // Extensions\n  // [GL.MAX_TEXTURE_MAX_ANISOTROPY_EXT]: {gl1: 1.0, extension: 'EXT_texture_filter_anisotropic'},\n\n  // WebGL2 Limits\n  [GL.MAX_3D_TEXTURE_SIZE]: {gl1: 0, gl2: 256}, //  GLint\n  [GL.MAX_ARRAY_TEXTURE_LAYERS]: {gl1: 0, gl2: 256}, // GLint\n  [GL.MAX_CLIENT_WAIT_TIMEOUT_WEBGL]: {gl1: 0, gl2: 0}, //  GLint64\n  [GL.MAX_COLOR_ATTACHMENTS]: {gl1: 0, gl2: 4}, //  GLint\n  [GL.MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS]: {gl1: 0, gl2: 0}, // GLint64\n  [GL.MAX_COMBINED_UNIFORM_BLOCKS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS]: {gl1: 0, gl2: 0}, // GLint64\n  [GL.MAX_DRAW_BUFFERS]: {gl1: 0, gl2: 4}, // GLint\n  [GL.MAX_ELEMENT_INDEX]: {gl1: 0, gl2: 0}, //  GLint64\n  [GL.MAX_ELEMENTS_INDICES]: {gl1: 0, gl2: 0}, // GLint\n  [GL.MAX_ELEMENTS_VERTICES]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_FRAGMENT_INPUT_COMPONENTS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_FRAGMENT_UNIFORM_BLOCKS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_FRAGMENT_UNIFORM_COMPONENTS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_SAMPLES]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_SERVER_WAIT_TIMEOUT]: {gl1: 0, gl2: 0}, //  GLint64\n  [GL.MAX_TEXTURE_LOD_BIAS]: {gl1: 0, gl2: 0}, // GLfloat\n  [GL.MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS]: {gl1: 0, gl2: 0}, // GLint\n  [GL.MAX_UNIFORM_BLOCK_SIZE]: {gl1: 0, gl2: 0}, // GLint64\n  [GL.MAX_UNIFORM_BUFFER_BINDINGS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_VARYING_COMPONENTS]: {gl1: 0, gl2: 0}, // GLint\n  [GL.MAX_VERTEX_OUTPUT_COMPONENTS]: {gl1: 0, gl2: 0}, // GLint\n  [GL.MAX_VERTEX_UNIFORM_BLOCKS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MAX_VERTEX_UNIFORM_COMPONENTS]: {gl1: 0, gl2: 0}, //  GLint\n  [GL.MIN_PROGRAM_TEXEL_OFFSET]: {gl1: 0, gl2: -8, negative: true}, // GLint\n  [GL.MAX_PROGRAM_TEXEL_OFFSET]: {gl1: 0, gl2: 7}, // GLint\n  [GL.UNIFORM_BUFFER_OFFSET_ALIGNMENT]: {gl1: 0, gl2: 0} // GLint\n};\n\nexport function getContextLimits(gl) {\n  gl.luma = gl.luma || {};\n\n  if (!gl.luma.limits) {\n    gl.luma.limits = {};\n    gl.luma.webgl1MinLimits = {};\n    gl.luma.webgl2MinLimits = {};\n\n    const isWebgl2 = isWebGL2(gl);\n\n    // WEBGL limits\n    for (const parameter in WEBGL_LIMITS) {\n      const limit = WEBGL_LIMITS[parameter];\n\n      const webgl1MinLimit = limit.gl1;\n      const webgl2MinLimit = 'gl2' in limit ? limit.gl2 : limit.gl1;\n      const minLimit = isWebgl2 ? webgl2MinLimit : webgl1MinLimit;\n\n      // Check if we can query for this limit\n      const limitNotAvailable =\n        ('gl2' in limit && !isWebgl2) ||\n        ('extension' in limit && !gl.getExtension(limit.extension));\n\n      const value = limitNotAvailable ? minLimit : gl.getParameter(parameter);\n      gl.luma.limits[parameter] = value;\n      gl.luma.webgl1MinLimits[parameter] = webgl1MinLimit;\n      gl.luma.webgl2MinLimits[parameter] = webgl2MinLimit;\n    }\n  }\n\n  return gl.luma.limits;\n}\n\nexport function getGLContextInfo(gl) {\n  gl.luma = gl.luma || {};\n\n  if (!gl.luma.info) {\n    const info = gl.getExtension('WEBGL_debug_renderer_info');\n    gl.luma.info = {\n      [GL.VENDOR]: gl.getParameter(GL.VENDOR),\n      [GL.RENDERER]: gl.getParameter(GL.RENDERER),\n      [GL.UNMASKED_VENDOR_WEBGL]:\n        gl.getParameter((info && info.UNMASKED_VENDOR_WEBGL) || GL.VENDOR),\n      [GL.UNMASKED_RENDERER_WEBGL]:\n        gl.getParameter((info && info.UNMASKED_RENDERER_WEBGL) || GL.RENDERER),\n      [GL.VERSION]: gl.getParameter(GL.VERSION),\n      [GL.SHADING_LANGUAGE_VERSION]: gl.getParameter(GL.SHADING_LANGUAGE_VERSION)\n    };\n  }\n\n  return gl.luma.info;\n}\n\nconst GL_UNMASKED_VENDOR_WEBGL = 0x9245; // vendor string of the graphics driver.\nconst GL_UNMASKED_RENDERER_WEBGL = 0x9246; // renderer string of the graphics driver.\n\nexport function getGLContextInfo2(gl) {\n  const vendorMasked = gl.getParameter(GL.VENDOR);\n  const rendererMasked = gl.getParameter(GL.RENDERER);\n  const ext = gl.getExtension('WEBGL_debug_renderer_info');\n  const vendorUnmasked = ext && gl.getParameter(ext.UNMASKED_VENDOR_WEBGL || GL.VENDOR);\n  const rendererUnmasked = ext && gl.getParameter(ext.UNMASKED_RENDERER_WEBGL || GL.RENDERER);\n  return {\n    vendor: vendorUnmasked || vendorMasked,\n    renderer: rendererUnmasked || rendererMasked,\n    vendorMasked,\n    rendererMasked,\n    version: gl.getParameter(GL.VERSION),\n    shadingLanguageVersion: gl.getParameter(GL.SHADING_LANGUAGE_VERSION)\n  };\n}\n\nexport function getContextInfo(gl) {\n  const limits = getContextLimits(gl);\n  const info = getGLContextInfo(gl);\n  return {\n    // basic information\n    vendor: info[GL_UNMASKED_VENDOR_WEBGL] || info[GL.VENDOR],\n    renderer: info[GL_UNMASKED_RENDERER_WEBGL] || info[GL.RENDERER],\n    version: info[GL.VERSION],\n    shadingLanguageVersion: info[GL.SHADING_LANGUAGE_VERSION],\n    // info, caps and limits\n    info,\n    limits,\n    webgl1MinLimits: gl.luma.webgl1MinLimits,\n    webgl2MinLimits: gl.luma.webgl2MinLimits\n  };\n}\n\n// DEBUG INFO\n\n/**\n * Provides strings identifying the GPU vendor and driver.\n * https://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\n * @param {WebGLRenderingContext} gl - context\n * @return {Object} - 'vendor' and 'renderer' string fields.\n */\nexport function glGetDebugInfo(gl) {\n  return getGLContextInfo2(gl);\n  // const info = gl.getExtension('WEBGL_debug_renderer_info');\n  // // We can't determine if 'WEBGL_debug_renderer_info' is supported by\n  // // checking whether info is null here. Firefox doesn't follow the\n  // // specs by returning null for unsupported extension. Instead,\n  // // it returns an object without GL_UNMASKED_VENDOR_WEBGL and GL_UNMASKED_RENDERER_WEBGL.\n  // return {\n  //   vendor: (info && info.UNMASKED_VENDOR_WEBGL) ?\n  //     gl.getParameter(info.UNMASKED_VENDOR_WEBGL) : 'unknown',\n  //   renderer: (info && info.UNMASKED_RENDERER_WEBGL) ?\n  //     gl.getParameter(info.UNMASKED_RENDERER_WEBGL) : 'unknown'\n  // };\n}\n\nexport const TEST_EXPORTS = {\n  WEBGL_LIMITS\n};\n"],"file":"context-limits.js"}