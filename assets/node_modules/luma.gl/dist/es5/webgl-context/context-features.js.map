{"version":3,"sources":["../../../src/webgl-context/context-features.js"],"names":["WEBGL_FEATURES","VERTEX_ARRAY_OBJECT","TIMER_QUERY","INSTANCED_RENDERING","MULTIPLE_RENDER_TARGETS","ELEMENT_INDEX_UINT32","BLEND_EQUATION_MINMAX","COLOR_ENCODING_SRGB","TEXTURE_DEPTH","TEXTURE_FLOAT","TEXTURE_HALF_FLOAT","TEXTURE_FILTER_LINEAR_FLOAT","TEXTURE_FILTER_LINEAR_HALF_FLOAT","TEXTURE_FILTER_ANISOTROPIC","COLOR_ATTACHMENT_RGBA32F","COLOR_ATTACHMENT_FLOAT","COLOR_ATTACHMENT_HALF_FLOAT","GLSL_FRAG_DATA","GLSL_FRAG_DEPTH","GLSL_DERIVATIVES","GLSL_TEXTURE_LOD","FEATURES","Object","keys","forEach","key","compiledGlslExtensions","canCompileGLGSExtension","gl","cap","opts","feature","extensionName","source","shader","createShader","VERTEX_SHADER","shaderSource","compileShader","canCompile","getShaderParameter","COMPILE_STATUS","deleteShader","getFeature","value","Boolean","getExtension","hasFeature","hasFeatures","features","Array","isArray","every","getFeatures","luma","caps","webgl2","TEST_EXPORTS"],"mappings":"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","sourcesContent":["// Feature detection for WebGL\n//\n// Provides a function that enables simple checking of which WebGL features are\n// available in an WebGL1 or WebGL2 environment.\n\n/* eslint-disable no-inline-comments, max-len */\nimport {isWebGL2} from '../webgl-utils';\nimport {isOldIE} from '../utils';\nimport assert from '../utils/assert';\n\n// Defines luma.gl \"feature\" names and semantics\nconst WEBGL_FEATURES = {\n  // API SUPPORT\n  VERTEX_ARRAY_OBJECT: ['OES_vertex_array_object', true],\n  TIMER_QUERY: ['EXT_disjoint_timer_query', 'EXT_disjoint_timer_query_webgl2'],\n  INSTANCED_RENDERING: ['ANGLE_instanced_arrays', true],\n  MULTIPLE_RENDER_TARGETS: ['WEBGL_draw_buffers', true],\n\n  // FEATURES\n  ELEMENT_INDEX_UINT32: ['OES_element_index_uint', true],\n  BLEND_EQUATION_MINMAX: ['EXT_blend_minmax', true],\n\n  // TEXTURES, RENDERBUFFERS\n  COLOR_ENCODING_SRGB: ['EXT_sRGB', true],\n\n  // TEXTURES\n  TEXTURE_DEPTH: ['WEBGL_depth_texture', true],\n  TEXTURE_FLOAT: ['OES_texture_float', true],\n  TEXTURE_HALF_FLOAT: ['OES_texture_half_float', true],\n\n  TEXTURE_FILTER_LINEAR_FLOAT: ['OES_texture_float_linear'],\n  TEXTURE_FILTER_LINEAR_HALF_FLOAT: ['OES_texture_half_float_linear'],\n  TEXTURE_FILTER_ANISOTROPIC: ['EXT_texture_filter_anisotropic'],\n\n  // FRAMEBUFFERS, TEXTURES AND RENDERBUFFERS\n  COLOR_ATTACHMENT_RGBA32F: ['WEBGL_color_buffer_float', 'EXT_color_buffer_float'],\n  COLOR_ATTACHMENT_FLOAT: [false, 'EXT_color_buffer_float'],\n  COLOR_ATTACHMENT_HALF_FLOAT: [false, 'EXT_color_buffer_half_float'],\n\n  // GLSL extensions\n  GLSL_FRAG_DATA: ['WEBGL_draw_buffers', true],\n  GLSL_FRAG_DEPTH: ['EXT_frag_depth', true],\n  GLSL_DERIVATIVES: ['OES_standard_derivatives', true],\n  GLSL_TEXTURE_LOD: ['EXT_shader_texture_lod', true]\n};\n\n// Create a key-mirrored FEATURES array\nconst FEATURES = {};\nObject.keys(WEBGL_FEATURES).forEach(key => {\n  FEATURES[key] = key;\n});\nexport {FEATURES};\n\n// Enables feature detection in IE11 due to a bug where gl.getExtension may return true\n// but fail to compile when the extension is enabled in the shader. Specifically,\n// the OES_standard_derivatives extension fails to compile in IE11 even though its included\n// in the list of supported extensions.\nconst compiledGlslExtensions = {};\n// opts allows user agent to be overridden for testing\nexport function canCompileGLGSExtension(gl, cap, opts = {}) {\n  const feature = WEBGL_FEATURES[cap];\n  assert(feature, cap);\n\n  if (!isOldIE(opts)) {\n    return true;\n  }\n\n  if (cap in compiledGlslExtensions) {\n    return compiledGlslExtensions[cap];\n  }\n\n  const extensionName = feature[0];\n  const source = `#extension GL_${extensionName} : enable\\nvoid main(void) {}`;\n\n  const shader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n  const canCompile = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  gl.deleteShader(shader);\n  compiledGlslExtensions[cap] = canCompile;\n  return canCompile;\n}\n\n// TODO - cache the value\nfunction getFeature(gl, cap) {\n  const feature = WEBGL_FEATURES[cap];\n  assert(feature, cap);\n\n  // Get extension name from table\n  const extensionName = isWebGL2(gl) ?\n    feature[1] || feature[0] :\n    feature[0];\n\n  // Check if the value is dependent on checking an extension\n  const value = typeof extensionName === 'string' ?\n    Boolean(gl.getExtension(extensionName)) :\n    extensionName;\n\n  assert(value === false || value === true);\n\n  return value;\n}\n\n// capability can be a WebGL extension name or a luma capability name\nexport function hasFeature(gl, feature) {\n  return hasFeatures(gl, feature);\n}\n\nexport function hasFeatures(gl, features) {\n  features = Array.isArray(features) ? features : [features];\n  return features.every(feature => {\n    return getFeature(gl, feature);\n  });\n}\n\nexport function getFeatures(gl) {\n  gl.luma = gl.luma || {};\n\n  if (!gl.luma.caps) {\n    gl.luma.caps = {};\n    gl.luma.caps.webgl2 = isWebGL2(gl);\n    for (const cap in WEBGL_FEATURES) {\n      gl.luma.caps[cap] = getFeature(gl, cap);\n    }\n\n  }\n  return gl.luma.caps;\n}\n\nexport const TEST_EXPORTS = {\n  WEBGL_FEATURES\n};\n"],"file":"context-features.js"}