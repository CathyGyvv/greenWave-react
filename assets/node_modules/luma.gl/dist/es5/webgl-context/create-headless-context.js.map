{"version":3,"sources":["../../../src/webgl-context/create-headless-context.js"],"names":["ERR_HEADLESSGL_LOAD","ERR_HEADLESSGL_NOT_AVAILABLE","ERR_HEADLESSGL_FAILED","headlessGL","isBrowser","module","require","error","console","message","isWebglAvailable","createHeadlessContext","width","height","opts","onError","webgl1","webgl2","gl"],"mappings":";;;;;;;;AAEA;;;;AAFA;;AACA;AAGA,IAAMA,yFAAN;AAGA,IAAMC,+BACN,sEADA;AAGA,IAAMC,wBACN,sEADA;AAGO,IAAIC,aAAa,IAAjB;;;AAEP,IAAI,CAACC,kBAAL,EAAgB;AACd,MAAI;AACF,sCAAaC,OAAOC,OAAP,CAAe,IAAf,CAAb;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACdC,YAAQD,KAAR;AACAC,YAAQD,KAAR,WAAiBP,mBAAjB,eAAyCO,MAAME,OAA/C;AACD;AACF;;AAEM,IAAMC,mBAAmBN,sBAAaD,UAAtC,C,CAEP;;;;AACO,SAASQ,qBAAT,OAA+D;AAAA,MAA/BC,KAA+B,QAA/BA,KAA+B;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAAA,MAAhBC,IAAgB,QAAhBA,IAAgB;AAAA,MAAVC,OAAU,QAAVA,OAAU;AAAA,MAC7DC,MAD6D,GAC3CF,IAD2C,CAC7DE,MAD6D;AAAA,MACrDC,MADqD,GAC3CH,IAD2C,CACrDG,MADqD;;AAEpE,MAAIA,UAAU,CAACD,MAAf,EAAuB;AACrB,WAAOD,QAAQ,qCAAR,CAAP;AACD;;AACD,MAAI,CAACZ,UAAL,EAAiB;AACf,WAAOY,QAAQd,4BAAR,CAAP;AACD;;AACD,MAAMiB,KAAKf,WAAWS,KAAX,EAAkBC,MAAlB,EAA0BC,IAA1B,CAAX;;AACA,MAAI,CAACI,EAAL,EAAS;AACP,WAAOH,QAAQb,qBAAR,CAAP;AACD;;AACD,SAAOgB,EAAP;AACD","sourcesContent":["/* eslint-disable quotes, no-console */\n/* global console */\nimport isBrowser from '../utils/is-browser';\n\nconst ERR_HEADLESSGL_LOAD = `\\\nWebGL not available in Node.js, install using \"npm install gl\".`;\n\nconst ERR_HEADLESSGL_NOT_AVAILABLE =\n'Failed to create WebGL context in Node.js, headless gl not available';\n\nconst ERR_HEADLESSGL_FAILED =\n'Failed to create WebGL context in Node.js, headless gl returned null';\n\nexport let headlessGL = null;\n\nif (!isBrowser) {\n  try {\n    headlessGL = module.require('gl');\n  } catch (error) {\n    console.error();\n    console.error(`${ERR_HEADLESSGL_LOAD}\\n${error.message}`);\n  }\n}\n\nexport const isWebglAvailable = isBrowser || headlessGL;\n\n// Create headless gl context (for running under Node.js)\nexport function createHeadlessContext({width, height, opts, onError}) {\n  const {webgl1, webgl2} = opts;\n  if (webgl2 && !webgl1) {\n    return onError('headless-gl does not support WebGL2');\n  }\n  if (!headlessGL) {\n    return onError(ERR_HEADLESSGL_NOT_AVAILABLE);\n  }\n  const gl = headlessGL(width, height, opts);\n  if (!gl) {\n    return onError(ERR_HEADLESSGL_FAILED);\n  }\n  return gl;\n}\n"],"file":"create-headless-context.js"}