{"version":3,"sources":["../../../src/webgl-context/track-context-state.js"],"names":["clone","Array","isArray","x","ArrayBuffer","isView","slice","deepEqual","y","isArrayX","isArrayY","length","i","GL_STATE_SETTERS","enable","update","cap","disable","pixelStorei","pname","param","hint","bindFramebuffer","target","fb","GL","FRAMEBUFFER","DRAW_FRAMEBUFFER_BINDING","READ_FRAMEBUFFER_BINDING","DRAW_FRAMEBUFFER","READ_FRAMEBUFFER","blendColor","r","g","b","a","BLEND_COLOR","Float32Array","blendEquation","mode","BLEND_EQUATION_RGB","BLEND_EQUATION_ALPHA","blendEquationSeparate","modeRGB","modeAlpha","blendFunc","src","dst","BLEND_SRC_RGB","BLEND_DST_RGB","BLEND_SRC_ALPHA","BLEND_DST_ALPHA","blendFuncSeparate","srcRGB","dstRGB","srcAlpha","dstAlpha","clearColor","COLOR_CLEAR_VALUE","clearDepth","depth","DEPTH_CLEAR_VALUE","clearStencil","s","STENCIL_CLEAR_VALUE","colorMask","COLOR_WRITEMASK","cullFace","CULL_FACE_MODE","depthFunc","func","DEPTH_FUNC","depthRange","zNear","zFar","DEPTH_RANGE","depthMask","mask","DEPTH_WRITEMASK","frontFace","face","FRONT_FACE","lineWidth","width","LINE_WIDTH","polygonOffset","factor","units","POLYGON_OFFSET_FACTOR","POLYGON_OFFSET_UNITS","sampleCoverage","value","invert","SAMPLE_COVERAGE_VALUE","SAMPLE_COVERAGE_INVERT","scissor","height","SCISSOR_BOX","Int32Array","stencilMask","STENCIL_WRITEMASK","STENCIL_BACK_WRITEMASK","stencilMaskSeparate","FRONT","stencilFunc","ref","STENCIL_FUNC","STENCIL_REF","STENCIL_VALUE_MASK","STENCIL_BACK_FUNC","STENCIL_BACK_REF","STENCIL_BACK_VALUE_MASK","stencilFuncSeparate","stencilOp","fail","zfail","zpass","STENCIL_FAIL","STENCIL_PASS_DEPTH_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_BACK_FAIL","STENCIL_BACK_PASS_DEPTH_FAIL","STENCIL_BACK_PASS_DEPTH_PASS","stencilOpSeparate","viewport","VIEWPORT","installGetterOverride","gl","functionName","originalGetterFunc","bind","state","cache","Object","defineProperty","configurable","installSetterSpy","setter","originalSetterFunc","params","_updateCache","valueChanged","oldValue","log","GLState","copyState","stateStack","assign","GL_PARAMETER_DEFAULTS","seal","values","push","oldValues","pop","key","undefined","trackContextState","pushContextState","popContextState"],"mappings":"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","sourcesContent":["// Support for listening to context state changes and intercepting state queries\n//\n// NOTE: this system does not handle buffer bindings\nimport GL from '../constants';\nimport {setParameters, getParameters, GL_PARAMETER_DEFAULTS} from './set-parameters';\nimport polyfillContext from './polyfill-context';\nimport assert from '../utils/assert';\n\nexport const clone = x => {\n  return Array.isArray(x) || ArrayBuffer.isView(x) ? x.slice() : x;\n};\n\nexport const deepEqual = (x, y) => {\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  if (isArrayX && isArrayY && x.length === y.length) {\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return x === y;\n};\n\n// interceptors for WEBGL FUNCTIONS that set WebGLRenderingContext state\n// These \"setters\" map functions to gl parameters\n\nexport const GL_STATE_SETTERS = {\n\n  // GENERIC SETTERS\n\n  enable: (update, cap) => update({\n    [cap]: true\n  }),\n  disable: (update, cap) => update({\n    [cap]: false}\n  ),\n  pixelStorei: (update, pname, param) => update({\n    [pname]: param\n  }),\n  hint: (update, pname, hint) => update({\n    [pname]: hint\n  }),\n\n  // SPECIFIC SETTERS\n\n  bindFramebuffer: (update, target, fb) => {\n    switch (target) {\n    case GL.FRAMEBUFFER:\n      return update({\n        [GL.DRAW_FRAMEBUFFER_BINDING]: fb,\n        [GL.READ_FRAMEBUFFER_BINDING]: fb\n      });\n    case GL.DRAW_FRAMEBUFFER:\n      return update({[GL.DRAW_FRAMEBUFFER_BINDING]: fb});\n    case GL.READ_FRAMEBUFFER:\n      return update({[GL.READ_FRAMEBUFFER_BINDING]: fb});\n    default:\n      return null;\n    }\n  },\n  blendColor: (update, r, g, b, a) => update({\n    [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])}\n  ),\n\n  blendEquation: (update, mode) => update({\n    [GL.BLEND_EQUATION_RGB]: mode,\n    [GL.BLEND_EQUATION_ALPHA]: mode\n  }),\n\n  blendEquationSeparate: (update, modeRGB, modeAlpha) => update({\n    [GL.BLEND_EQUATION_RGB]: modeRGB,\n    [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n  }),\n\n  blendFunc: (update, src, dst) => update({\n    [GL.BLEND_SRC_RGB]: src,\n    [GL.BLEND_DST_RGB]: dst,\n    [GL.BLEND_SRC_ALPHA]: src,\n    [GL.BLEND_DST_ALPHA]: dst\n  }),\n\n  blendFuncSeparate: (update, srcRGB, dstRGB, srcAlpha, dstAlpha) => update({\n    [GL.BLEND_SRC_RGB]: srcRGB,\n    [GL.BLEND_DST_RGB]: dstRGB,\n    [GL.BLEND_SRC_ALPHA]: srcAlpha,\n    [GL.BLEND_DST_ALPHA]: dstAlpha\n  }),\n\n  clearColor: (update, r, g, b, a) => update({\n    [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n  }),\n\n  clearDepth: (update, depth) => update({\n    [GL.DEPTH_CLEAR_VALUE]: depth\n  }),\n\n  clearStencil: (update, s) => update({\n    [GL.STENCIL_CLEAR_VALUE]: s\n  }),\n\n  colorMask: (update, r, g, b, a) => update({\n    [GL.COLOR_WRITEMASK]: [r, g, b, a]\n  }),\n\n  cullFace: (update, mode) => update({\n    [GL.CULL_FACE_MODE]: mode\n  }),\n\n  depthFunc: (update, func) => update({\n    [GL.DEPTH_FUNC]: func\n  }),\n\n  depthRange: (update, zNear, zFar) => update({\n    [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n  }),\n\n  depthMask: (update, mask) => update({\n    [GL.DEPTH_WRITEMASK]: mask\n  }),\n\n  frontFace: (update, face) => update({\n    [GL.FRONT_FACE]: face\n  }),\n\n  lineWidth: (update, width) => update({\n    [GL.LINE_WIDTH]: width\n  }),\n\n  polygonOffset: (update, factor, units) => update({\n    [GL.POLYGON_OFFSET_FACTOR]: factor,\n    [GL.POLYGON_OFFSET_UNITS]: units\n  }),\n\n  sampleCoverage: (update, value, invert) => update({\n    [GL.SAMPLE_COVERAGE_VALUE]: value,\n    [GL.SAMPLE_COVERAGE_INVERT]: invert\n  }),\n\n  scissor: (update, x, y, width, height) => update({\n    [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n  }),\n\n  stencilMask: (update, mask) => update({\n    [GL.STENCIL_WRITEMASK]: mask,\n    [GL.STENCIL_BACK_WRITEMASK]: mask\n  }),\n\n  stencilMaskSeparate: (update, face, mask) => update({\n    [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n  }),\n\n  stencilFunc: (update, func, ref, mask) => update({\n    [GL.STENCIL_FUNC]: func,\n    [GL.STENCIL_REF]: ref,\n    [GL.STENCIL_VALUE_MASK]: mask,\n    [GL.STENCIL_BACK_FUNC]: func,\n    [GL.STENCIL_BACK_REF]: ref,\n    [GL.STENCIL_BACK_VALUE_MASK]: mask\n  }),\n\n  stencilFuncSeparate: (update, face, func, ref, mask) => update({\n    [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n    [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n    [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n  }),\n\n  stencilOp: (update, fail, zfail, zpass) => update({\n    [GL.STENCIL_FAIL]: fail,\n    [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n    [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n    [GL.STENCIL_BACK_FAIL]: fail,\n    [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n    [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n  }),\n\n  stencilOpSeparate: (update, face, fail, zfail, zpass) => update({\n    [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n    [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n    [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n  }),\n\n  viewport: (update, x, y, width, height) => update({\n    [GL.VIEWPORT]: new Int32Array([x, y, width, height])\n  })\n};\n\n// HELPER FUNCTIONS - INSTALL GET/SET INTERCEPTORS (SPYS) ON THE CONTEXT\n\n// Overrides a WebGLRenderingContext state \"getter\" function\n// to return values directly from cache\nfunction installGetterOverride(gl, functionName) {\n  // Get the original function from the WebGLRenderingContext\n  const originalGetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function(...params) {\n    const pname = params[0];\n\n    // WebGL limits are not prepopulated in the cache, we must\n    // query first time. They are all primitive (single value)\n    if (!(pname in gl.state.cache)) {\n      gl.state.cache[pname] = originalGetterFunc(...params);\n    }\n\n    // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n    return gl.state.enable ?\n      // Call the getter the params so that it can e.g. serve from a cache\n      gl.state.cache[pname] :\n      // Optionally call the original function to do a \"hard\" query from the WebGLRenderingContext\n      originalGetterFunc(...params);\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(\n    gl[functionName], 'name', {value: `${functionName}-from-cache`, configurable: false});\n}\n\n// Overrides a WebGLRenderingContext state \"setter\" function\n// to call a setter spy before the actual setter. Allows us to keep a cache\n// updated with a copy of the WebGL context state.\nfunction installSetterSpy(gl, functionName, setter) {\n  // Get the original function from the WebGLRenderingContext\n  const originalSetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function(...params) {\n    // Update the value\n    // Call the setter with the state cache and the params so that it can store the parameters\n    const {valueChanged, oldValue} = setter(gl.state._updateCache, ...params);\n\n    // Call the original WebGLRenderingContext func to make sure the context actually gets updated\n    if (valueChanged) {\n      gl.state.log(`gl.${functionName}`, ...params); // eslint-disable-line\n      originalSetterFunc(...params);\n    }\n\n    // Note: if the original function fails to set the value, our state cache will be bad\n    // No solution for this at the moment, but assuming that this is unlikely to be a real problem\n    // We could call the setter after the originalSetterFunc. Concern is that this would\n    // cause different behavior in debug mode, where originalSetterFunc can throw exceptions\n\n    return oldValue;\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(\n    gl[functionName], 'name', {value: `${functionName}-to-cache`, configurable: false});\n}\n\n// HELPER CLASS - GLState\n\n/* eslint-disable no-shadow */\nclass GLState {\n  constructor(gl, {\n    copyState = false, // Copy cache from params (slow) or initialize from WebGL defaults (fast)\n    log = () => {} // Logging function, called when gl parameter change calls are actually issued\n  } = {}) {\n    this.gl = gl;\n    this.stateStack = [];\n    this.enable = true;\n    this.cache = copyState ? getParameters(gl) : Object.assign({}, GL_PARAMETER_DEFAULTS);\n    this.log = log;\n\n    this._updateCache = this._updateCache.bind(this);\n    Object.seal(this);\n  }\n\n  push(values = {}) {\n    this.stateStack.push({});\n  }\n\n  pop() {\n    assert(this.stateStack.length > 0);\n    // Use the saved values in the state stack to restore parameters\n    const oldValues = this.stateStack[this.stateStack.length - 1];\n    setParameters(this.gl, oldValues, this.cache);\n    // Don't pop until we have reset parameters (to make sure other \"stack frames\" are not affected)\n    this.stateStack.pop();\n  }\n\n  // interceptor for context set functions - update our cache and our stack\n  // values (Object) - the key values for this setter\n  _updateCache(values) {\n    let valueChanged = false;\n    let oldValue; // = undefined\n\n    const oldValues = this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1];\n\n    for (const key in values) {\n      assert(key !== undefined);\n      // Check that value hasn't already been shadowed\n      if (!deepEqual(values[key], this.cache[key])) {\n        valueChanged = true;\n        oldValue = this.cache[key];\n\n        // First, save current value being shadowed\n        // If a state stack frame is active, save the current parameter values for pop\n        // but first check that value hasn't already been shadowed and saved\n        if (oldValues && !(key in oldValues)) {\n          oldValues[key] = this.cache[key];\n        }\n\n        // Save current value being shadowed\n        this.cache[key] = values[key];\n      }\n    }\n\n    return {valueChanged, oldValue};\n  }\n}\n\n// PUBLIC API\n\n/**\n * Initialize WebGL state caching on a context\n * can be called multiple times to enable/disable\n * @param {WebGLRenderingContext} - context\n */\n// After calling this function, context state will be cached\n// gl.state.push() and gl.state.pop() will be available for saving,\n// temporarily modifying, and then restoring state.\nexport default function trackContextState(gl, {enable = true, copyState} = {}) {\n  assert(copyState !== undefined);\n  if (!gl.state) {\n    polyfillContext(gl);\n\n    // Create a state cache\n    gl.state = new GLState(gl, {copyState, enable});\n\n    // intercept all setter functions in the table\n    for (const key in GL_STATE_SETTERS) {\n      const setter = GL_STATE_SETTERS[key];\n      installSetterSpy(gl, key, setter);\n    }\n\n    // intercept all getter functions in the table\n    installGetterOverride(gl, 'getParameter');\n    installGetterOverride(gl, 'isEnabled');\n  }\n\n  gl.state.enable = enable;\n\n  return gl;\n}\n\nexport function pushContextState(gl) {\n  if (!gl.state) {\n    trackContextState(gl, {copyState: false});\n  }\n  gl.state.push();\n}\n\nexport function popContextState(gl) {\n  assert(gl.state);\n  gl.state.pop();\n}\n"],"file":"track-context-state.js"}