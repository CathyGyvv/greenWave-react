{"version":3,"sources":["../../../src/webgl-context/context-state.js"],"names":["LUMA_SETTERS","framebuffer","gl","handle","bindFramebuffer","GL","FRAMEBUFFER","blend","value","enable","BLEND","disable","blendColor","blendEquation","args","isArray","blendEquationSeparate","blendFunc","length","blendFuncSeparate","clearColor","clearDepth","clearStencil","colorMask","cull","CULL_FACE","cullFace","depthTest","DEPTH_TEST","depthFunc","depthMask","depthRange","dither","DITHER","derivativeHint","hint","FRAGMENT_SHADER_DERIVATIVE_HINT","frontFace","mipmapHint","GENERATE_MIPMAP_HINT","lineWidth","polygonOffsetFill","POLYGON_OFFSET_FILL","polygonOffset","sampleCoverage","scissorTest","SCISSOR_TEST","scissor","stencilTest","STENCIL_TEST","stencilMask","mask","backMask","stencilMaskSeparate","FRONT","BACK","stencilFunc","func","ref","backFunc","backRef","stencilFuncSeparate","stencilOp","sfail","dpfail","dppass","backSfail","backDpfail","backDppass","stencilOpSeparate","viewport","array","Array","ArrayBuffer","isView","setParameters","parameters","key","setter","withParameters","nocatch","frameBuffer"],"mappings":"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","sourcesContent":["/* eslint-disable no-inline-comments, max-len */\nimport GL from '../constants';\nimport {\n  pushContextState,\n  popContextState\n} from '../webgl-context/track-context-state';\nimport {\n  getParameter,\n  getParameters,\n  setParameter,\n  setParameters as glSetParameters,\n  resetParameters,\n  getModifiedParameters\n} from '../webgl-context/set-parameters';\nimport {isObjectEmpty} from '../utils';\nimport assert from '../utils/assert';\n\n// map of parameter setter function names, parameter constants, default values and types\n// - Uses gl function names, except when setter function exist that are named differently\n// - When the WebGL api offers <setter> and <setter>Separate (e.g. blendEquation and\n//   blendEquationSeparate, we use non-separate name, but accept both non-separate and\n//   separate arguments. Thus, a `getParameter` call will always return all the separate values\n//   in an array, in a form that can be accepted by the setter.\nexport const LUMA_SETTERS = {\n  framebuffer: (gl, framebuffer) => {\n    const handle = framebuffer && framebuffer.handle ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl, value) => value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND),\n  blendColor: (gl, value) => gl.blendColor(...value),\n  blendEquation: (gl, args) => {\n    args = isArray(args) ? args : [args, args];\n    gl.blendEquationSeparate(...args);\n  },\n  blendFunc: (gl, args) => {\n    args = isArray(args) && args.length === 2 ? [...args, ...args] : args;\n    gl.blendFuncSeparate(...args);\n  },\n\n  clearColor: (gl, value) => gl.clearColor(...value),\n  clearDepth: (gl, value) => gl.clearDepth(value),\n  clearStencil: (gl, value) => gl.clearStencil(value),\n\n  colorMask: (gl, value) => gl.colorMask(...value),\n\n  cull: (gl, value) => value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE),\n  cullFace: (gl, value) => gl.cullFace(value),\n\n  depthTest: (gl, value) => value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST),\n  depthFunc: (gl, value) => gl.depthFunc(value),\n  depthMask: (gl, value) => gl.depthMask(value),\n  depthRange: (gl, value) => gl.depthRange(...value),\n\n  dither: (gl, value) => value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER),\n\n  derivativeHint: (gl, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl, value) => gl.frontFace(value),\n\n  mipmapHint: (gl, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl, value) => gl.polygonOffset(...value),\n\n  sampleCoverage: (gl, value) => gl.sampleCoverage(...value),\n\n  scissorTest: (gl, value) => value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST),\n  scissor: (gl, value) => gl.scissor(...value),\n\n  stencilTest: (gl, value) => value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST),\n  stencilMask: (gl, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl, value) => gl.viewport(...value)\n};\n\n// HELPERS\n\nfunction isArray(array) {\n  return Array.isArray(array) || ArrayBuffer.isView(array);\n}\n\n// GETTERS AND SETTERS\n\n// Get the parameter value(s) from the context\nexport {getParameter}; // from '../webgl-utils/set-parameters'\n\n// Get the parameters from the context\nexport {getParameters}; // from '../webgl-utils/set-parameters'\n\n// Resets gl state to default values.\nexport {setParameter}; // from '../webgl-utils/set-parameters'\n\n// Resets gl state to default values.\nexport {resetParameters}; // from '../webgl-utils/set-parameters'\n\n// Get a map of modified parameters\nexport {getModifiedParameters};\n\n// Note: \"setParameters\" is given extra treatment below\n\n// Set the parameter value(s) by key to the context\n// Sets value with key to context.\n// Value may be \"normalized\" (in case a short form is supported). In that case\n// the normalized value is retured.\nexport function setParameters(gl, parameters) {\n  glSetParameters(gl, parameters);\n  for (const key in parameters) {\n    const setter = LUMA_SETTERS[key];\n    if (setter) {\n      setter(gl, parameters[key], key);\n    }\n  }\n}\n\n// VERY LIMITED / BASIC GL STATE MANAGEMENT\n// Executes a function with gl states temporarily set, exception safe\n// Currently support pixelStorage, scissor test and framebuffer binding\nexport function withParameters(gl, parameters, func) {\n  // assertWebGLContext(gl);\n\n  if (isObjectEmpty(parameters)) {\n    // Avoid setting state if no parameters provided. Just call and return\n    return func(gl);\n  }\n\n  const {nocatch = true} = parameters;\n  // frameBuffer not supported use framebuffer\n  assert(!parameters.frameBuffer);\n\n  pushContextState(gl);\n  setParameters(gl, parameters);\n\n  // Setup is done, call the function\n  let value;\n\n  if (nocatch) {\n    // Avoid try catch to minimize stack size impact for safe execution paths\n    value = func(gl);\n    popContextState(gl);\n  } else {\n    // Wrap in a try-catch to ensure that parameters are restored on exceptions\n    try {\n      value = func(gl);\n    } finally {\n      popContextState(gl);\n    }\n  }\n\n  return value;\n}\n"],"file":"context-state.js"}