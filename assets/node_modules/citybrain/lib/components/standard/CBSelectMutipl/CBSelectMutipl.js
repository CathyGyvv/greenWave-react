'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _select = require('antd/es/select');

var _select2 = _interopRequireDefault(_select);

require('antd/es/select/style');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

require('antd/lib/select/style');

var _CBSelectMutipl = require('./CBSelectMutipl.less');

var _CBSelectMutipl2 = _interopRequireDefault(_CBSelectMutipl);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cx = _bind2.default.bind(_CBSelectMutipl2.default);
var Option = _select2.default.Option;
function CBSelectMutipl(_ref) {
  var children = _ref.children,
      mode = _ref.mode,
      placeholder = _ref.placeholder,
      onChange = _ref.onChange,
      onBlur = _ref.onBlur,
      onFocus = _ref.onFocus,
      defaultValue = _ref.defaultValue;

  return _react2.default.createElement(
    'div',
    { className: cx('cbSelectMutipl') },
    _react2.default.createElement(
      _select2.default,
      {
        mode: mode || 'multiple',
        placeholder: placeholder || '请输入关键字',
        onChange: onChange,
        onBlur: onBlur,
        onFocus: onFocus,
        defaultValue: defaultValue,
        dropdownClassName: 'selectDowmMutipl'
      },
      children.map(function (item, index) {
        return _react2.default.createElement(
          Option,
          { key: item },
          item
        );
      })
    )
  );
}
CBSelectMutipl.protoTypes = {
  children: _propTypes.array,
  mode: _propTypes.string,
  placeholder: _propTypes.string,
  onChange: _propTypes.func,
  onBlur: _propTypes.func,
  onFocus: _propTypes.func,
  defaultValue: (0, _propTypes.oneOfType)([_propTypes.string, _propTypes.array])
};
exports.default = CBSelectMutipl;