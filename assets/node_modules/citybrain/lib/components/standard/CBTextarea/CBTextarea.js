'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _input = require('antd/lib/input');

var _input2 = _interopRequireDefault(_input);

require('antd/lib/input/style');

var _CBTextarea = require('./CBTextarea.less');

var _CBTextarea2 = _interopRequireDefault(_CBTextarea);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cx = _bind2.default.bind(_CBTextarea2.default);
var TextArea = _input2.default.TextArea;


function CBTextarea(_ref) {
  var defaultValue = _ref.defaultValue,
      textareaRows = _ref.textareaRows,
      autosize = _ref.autosize,
      maxLength = _ref.maxLength,
      minLength = _ref.minLength,
      textareaPlaceholder = _ref.textareaPlaceholder,
      readOnly = _ref.readOnly,
      disabled = _ref.disabled,
      labelText = _ref.labelText,
      onPressEnterCallBack = _ref.onPressEnterCallBack,
      onChangeCallBack = _ref.onChangeCallBack;

  return _react2.default.createElement(
    'div',
    { className: cx('textareaContainer') },
    _react2.default.createElement(
      'span',
      { className: cx('textareaLabel') },
      labelText,
      ' :'
    ),
    _react2.default.createElement(TextArea, {
      maxLength: maxLength || 200,
      minLength: minLength,
      placeholder: textareaPlaceholder,
      defaultValue: defaultValue,
      rows: textareaRows || 4,
      autosize: autosize,
      onPressEnter: function onPressEnter(e) {
        return onClickEnter(e, onPressEnterCallBack);
      },
      readOnly: readOnly,
      disabled: disabled,
      onChange: function onChange(e) {
        return onTextareaChange(e, onChangeCallBack);
      }
    })
  );
}

function onClickEnter(e, onPressEnterCallBack) {
  onPressEnterCallBack(e.target.value);
}

function onTextareaChange(e, onChangeCallBack) {
  onChangeCallBack && onChangeCallBack(e.target.value);
}

CBTextarea.propTypes = {
  autosize: _propTypes.PropTypes.oneOfType([_propTypes.PropTypes.bool, _propTypes.PropTypes.object]),
  defaultValue: _propTypes.string,
  textareaPlaceholder: _propTypes.string,
  labelText: _propTypes.string.isRequired,
  textareaRows: _propTypes.number,
  maxLength: _propTypes.number,
  minLength: _propTypes.number,
  readOnly: _propTypes.bool,
  disabled: _propTypes.bool,
  onPressEnterCallBack: _propTypes.func.isRequired,
  onChangeCallBack: _propTypes.func
};

exports.default = CBTextarea;