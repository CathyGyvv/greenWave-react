'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

require('antd/lib/button/style');

var _CBButton = require('./CBButton.less');

var _CBButton2 = _interopRequireDefault(_CBButton);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cx = _bind2.default.bind(_CBButton2.default);
function CBButton(_ref) {
  var word = _ref.word,
      type = _ref.type,
      icon = _ref.icon,
      disabled = _ref.disabled,
      ghost = _ref.ghost,
      href = _ref.href,
      loading = _ref.loading,
      htmlType = _ref.htmlType,
      shape = _ref.shape,
      size = _ref.size,
      target = _ref.target,
      onClick = _ref.onClick,
      style = _ref.style,
      linear = _ref.linear,
      aviationButton = _ref.aviationButton,
      aviationButtonDisable = _ref.aviationButtonDisable;

  return _react2.default.createElement(
    'div',
    { className: cx('cbButton') },
    _react2.default.createElement(
      _button2.default,
      {
        type: type,
        className: cx({ 'button-ghost': ghost, 'button-primary-ghost': type === 'primary' && ghost, 'linear': linear, 'aviationButton': aviationButton, 'aviationButtonDisable': aviationButtonDisable }),
        disabled: disabled,
        icon: icon,
        ghost: ghost,
        href: href,
        loading: loading,
        htmltype: htmlType,
        shape: shape,
        size: size,
        target: target,
        onClick: onClick,
        style: style
      },
      word
    )
  );
}

CBButton.propTypes = {
  word: _propTypes.node.isRequired,
  type: _propTypes.string,
  icon: _propTypes.string,
  disabled: _propTypes.bool,
  ghost: _propTypes.bool,
  href: _propTypes.string,
  loading: _propTypes.bool,
  htmlType: _propTypes.string,
  shape: _propTypes.string,
  size: _propTypes.string,
  target: _propTypes.string,
  onClick: _propTypes.func,
  style: _propTypes.object,
  aviationButton: _propTypes.bool,
  aviationButtonDisable: _propTypes.bool
};

exports.default = CBButton;