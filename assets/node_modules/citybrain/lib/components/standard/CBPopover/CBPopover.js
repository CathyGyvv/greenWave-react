'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _popover = require('antd/lib/popover');

var _popover2 = _interopRequireDefault(_popover);

var _icon = require('antd/lib/icon');

var _icon2 = _interopRequireDefault(_icon);

var _button = require('antd/lib/button');

var _button2 = _interopRequireDefault(_button);

require('antd/lib/button/style');

require('antd/lib/icon/style');

require('antd/lib/popover/style');

var _CBPopover = require('./CBPopover.less');

var _CBPopover2 = _interopRequireDefault(_CBPopover);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var cx = _bind2.default.bind(_CBPopover2.default);

var CBPopover = function (_React$Component) {
  _inherits(CBPopover, _React$Component);

  function CBPopover() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, CBPopover);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CBPopover.__proto__ || Object.getPrototypeOf(CBPopover)).call.apply(_ref, [this].concat(args))), _this), _this.state = { visible: false }, _this.hide = function (e) {
      e.stopPropagation ? e.stopPropagation() : e.cancelBubble = true;
      _this.setState({
        visible: false
      });
    }, _this.handleVisibleChange = function (visible) {
      _this.setState({ visible: visible });
    }, _this.detailClick = function (e) {
      e.stopPropagation ? e.stopPropagation() : e.cancelBubble = true;
      _this.hide(e);
      _this.props.callBack();
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(CBPopover, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          footerDoor = _props.footerDoor,
          children = _props.children,
          placement = _props.placement,
          buttonContent = _props.buttonContent,
          id = _props.id,
          trigger = _props.trigger;

      var idNode = id || document.body;
      var title = _react2.default.createElement(
        'h2',
        { className: cx('modal-content-title') },
        this.props.title,
        _react2.default.createElement(
          'span',
          { className: cx('modal-close-x', 'click-cursor'), onClick: function onClick(e) {
              _this2.hide(e);
            } },
          _react2.default.createElement(_icon2.default, { type: 'close' })
        )
      );
      var modalFotter = _react2.default.createElement(
        'div',
        { className: cx('modal-footer'), onClick: function onClick(e) {
            _this2.detailClick(e);
          } },
        _react2.default.createElement(
          'span',
          { className: cx('click-cursor') },
          '\u67E5\u770B\u8BE6\u60C5'
        )
      );
      var modalBox = _react2.default.createElement(
        'div',
        { className: cx('modal-content-container') },
        _react2.default.createElement(
          'div',
          { className: cx('modal-content-box', { boxHasFooter: footerDoor }) },
          _react2.default.createElement(
            'div',
            { className: cx('modal-content') },
            children
          ),
          footerDoor && modalFotter
        )
      );
      return _react2.default.createElement(
        'span',
        { id: 'cb-popover' },
        _react2.default.createElement(
          _popover2.default,
          {
            trigger: trigger,
            title: title,
            content: modalBox,
            placement: placement,
            visible: this.state.visible,
            onVisibleChange: this.handleVisibleChange,
            getPopupContainer: function getPopupContainer() {
              return idNode;
            }
          },
          _react2.default.createElement(
            _button2.default,
            null,
            buttonContent
          )
        )
      );
    }
  }]);

  return CBPopover;
}(_react2.default.Component);

CBPopover.propTypes = {
  callBack: _propTypes.func,
  footerDoor: _propTypes.bool,
  placement: _propTypes.string,
  trigger: _propTypes.string,
  title: _propTypes.string.isRequired,
  buttonContent: _propTypes.string.isRequired
};

exports.default = CBPopover;