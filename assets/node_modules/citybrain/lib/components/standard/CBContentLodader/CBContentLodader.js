'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _icon = require('antd/es/icon');

var _icon2 = _interopRequireDefault(_icon);

require('antd/es/icon/style');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

require('antd/lib/icon/style');

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _CBContentLodader = require('./CBContentLodader.less');

var _CBContentLodader2 = _interopRequireDefault(_CBContentLodader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cx = _bind2.default.bind(_CBContentLodader2.default);
function CBContentLodader(_ref) {
  var children = _ref.children,
      status = _ref.status,
      position = _ref.position,
      color = _ref.color,
      fontSize = _ref.fontSize;

  switch (status) {
    case 'loading':
      return _react2.default.createElement(
        'div',
        {
          style: { color: color, fontSize: fontSize },
          className: cx({ 'CBContentLodader': true, 'left': position === 'left', 'top': position === 'top', 'right': position === 'right', 'bottom': position === 'bottom' })
        },
        _react2.default.createElement(_icon2.default, { type: 'loading' }),
        _react2.default.createElement(
          'span',
          null,
          '\u6570\u636E\u52A0\u8F7D\u4E2D,\u8BF7\u7A0D\u5019...'
        )
      );
    case 'loaded':
      return _react2.default.createElement(
        'div',
        null,
        children
      );
    case 'empty':
      return _react2.default.createElement(
        'div',
        {
          style: { color: color, fontSize: fontSize },
          className: cx({ 'CBContentLodader': true, 'left': position === 'left', 'top': position === 'top', 'right': position === 'right', 'bottom': position === 'bottom' })
        },
        _react2.default.createElement(_icon2.default, { type: 'minus-circle-o' }),
        _react2.default.createElement(
          'span',
          null,
          '\u6682\u65E0\u6570\u636E'
        )
      );
    case 'exception':
      return _react2.default.createElement(
        'div',
        {
          style: { color: color, fontSize: fontSize },
          className: cx({ 'CBContentLodader': true, 'left': position === 'left', 'top': position === 'top', 'right': position === 'right', 'bottom': position === 'bottom' })
        },
        _react2.default.createElement(_icon2.default, { type: 'exclamation-circle-o' }),
        _react2.default.createElement(
          'span',
          null,
          '\u6570\u636E\u5F02\u5E38'
        )
      );
    case 'overtime':
      return _react2.default.createElement(
        'div',
        {
          style: { color: color, fontSize: fontSize },
          className: cx({ 'CBContentLodader': true, 'left': position === 'left', 'top': position === 'top', 'right': position === 'right', 'bottom': position === 'bottom' })
        },
        _react2.default.createElement(_icon2.default, { type: 'exclamation-circle-o' }),
        _react2.default.createElement(
          'span',
          null,
          '\u8BF7\u6C42\u8D85\u65F6'
        )
      );
  }
}

CBContentLodader.propTypes = {
  status: _propTypes2.default.string,
  position: _propTypes2.default.string,
  color: _propTypes2.default.string,
  fontSize: _propTypes2.default.string
};

exports.default = CBContentLodader;