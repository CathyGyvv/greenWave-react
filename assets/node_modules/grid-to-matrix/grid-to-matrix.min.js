!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):e.gridToMatrix=r()}(this,function(){"use strict";function e(e){if(!e)throw new Error("obj is required");var t;if(e.length?t=e:e.coordinates?t=e.coordinates:e.geometry&&e.geometry.coordinates&&(t=e.geometry.coordinates),t)return r(t),t;throw new Error("No valid coordinates")}function r(e){if(e.length>1&&"number"==typeof e[0]&&"number"==typeof e[1])return!0;if(Array.isArray(e[0])&&e[0].length)return r(e[0]);throw new Error("coordinates must only contain numbers")}function t(e,r,t){if(!e)throw new Error("No featureCollection passed");if(!t)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+t+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+t+", Feature with geometry required");if(!n.geometry||n.geometry.type!==r)throw new Error("Invalid input to "+t+": must be a "+r+", given "+n.geometry.type)}}function o(e,r){if("Feature"===e.type)r(e,0);else if("FeatureCollection"===e.type)for(var t=0;t<e.features.length;t++)r(e.features[t],t)}function n(e){return!!e&&e.constructor===Object}function i(r,t){var n={};return o(r,function(r){var t=e(r)[1];n[t]||(n[t]=[]),n[t].push(r)}),Object.keys(n).map(function(r){return n[r].sort(function(r,t){return e(r)[0]-e(t)[0]})}).sort(function(r,o){return t?e(r[0])[1]-e(o[0])[1]:e(o[0])[1]-e(r[0])[1]})}return function(e,r){if(r=r||{},!n(r))throw new Error("options is invalid");var o=r.zProperty||"elevation",u=r.flip,f=r.flags;t(e,"Point","input must contain Points");for(var a=i(e,u),s=[],c=0;c<a.length;c++){for(var p=a[c],l=[],d=0;d<p.length;d++){var y=p[d];y.properties[o]?l.push(y.properties[o]):l.push(0),!0===f&&(y.properties.matrixPosition=[c,d])}s.push(l)}return s}});
