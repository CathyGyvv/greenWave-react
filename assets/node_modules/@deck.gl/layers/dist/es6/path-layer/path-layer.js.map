{"version":3,"sources":["../../../src/path-layer/path-layer.js"],"names":["COORDINATE_SYSTEM","Layer","GL","Model","Geometry","fp64","fp64LowPart","vs","vs64","fs","DEFAULT_COLOR","defaultProps","widthScale","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","rounded","miterLimit","dashJustified","getPath","object","path","getColor","color","getWidth","width","getDashArray","isClosed","firstPoint","lastPoint","length","PathLayer","getShaders","is64bitEnabled","modules","initializeState","attributeManager","getAttributeManager","addInstanced","instanceStartPositions","size","update","calculateStartPositions","instanceEndPositions","calculateEndPositions","instanceLeftDeltas","calculateLeftDeltas","instanceRightDeltas","calculateRightDeltas","instanceStrokeWidths","accessor","calculateStrokeWidths","defaultValue","instanceDashArrays","calculateDashArrays","instanceColors","type","UNSIGNED_BYTE","calculateColors","instancePickingColors","calculatePickingColors","updateAttribute","props","oldProps","changeFlags","invalidateAll","coordinateSystem","LNGLAT","instanceStartEndPositions64xyLow","calculateInstanceStartEndPositions64xyLow","remove","updateState","gl","context","state","model","delete","setState","_getModel","geometryChanged","dataChanged","updateTriggersChanged","all","paths","data","map","numInstances","reduce","count","draw","uniforms","render","Object","assign","jointType","alignMode","SEGMENT_INDICES","SEGMENT_POSITIONS","id","geometry","drawMode","TRIANGLES","attributes","indices","Uint16Array","positions","Float32Array","isInstanced","shaderCache","_getPathLength","attribute","value","i","forEach","numSegments","ptIndex","point","startPoint","endPoint","prevPoint","nextPoint","index","pathLength","dashArray","pointColor","isNaN","pickingColor","encodePickingColor","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {COORDINATE_SYSTEM, Layer} from '@deck.gl/core';\nimport {GL, Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './path-layer-vertex.glsl';\nimport vs64 from './path-layer-vertex-64.glsl';\nimport fs from './path-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  widthScale: 1, // stroke width in meters\n  widthMinPixels: 0, //  min stroke width in pixels\n  widthMaxPixels: Number.MAX_SAFE_INTEGER, // max stroke width in pixels\n  rounded: false,\n  miterLimit: 4,\n  fp64: false,\n  dashJustified: false,\n\n  getPath: object => object.path,\n  getColor: object => object.color || DEFAULT_COLOR,\n  getWidth: object => object.width || 1,\n  getDashArray: null\n};\n\nconst isClosed = path => {\n  const firstPoint = path[0];\n  const lastPoint = path[path.length - 1];\n  return (\n    firstPoint[0] === lastPoint[0] &&\n    firstPoint[1] === lastPoint[1] &&\n    firstPoint[2] === lastPoint[2]\n  );\n};\n\nexport default class PathLayer extends Layer {\n  getShaders() {\n    return this.is64bitEnabled()\n      ? {vs: vs64, fs, modules: ['project64', 'picking']}\n      : {vs, fs, modules: ['picking']}; // 'project' module added by default.\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceStartPositions: {size: 3, update: this.calculateStartPositions},\n      instanceEndPositions: {size: 3, update: this.calculateEndPositions},\n      instanceLeftDeltas: {size: 3, update: this.calculateLeftDeltas},\n      instanceRightDeltas: {size: 3, update: this.calculateRightDeltas},\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        update: this.calculateStrokeWidths,\n        defaultValue: 1\n      },\n      instanceDashArrays: {size: 2, accessor: 'getDashArray', update: this.calculateDashArrays},\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getColor',\n        update: this.calculateColors,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {size: 3, type: GL.UNSIGNED_BYTE, update: this.calculatePickingColors}\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateAttribute({props, oldProps, changeFlags}) {\n    if (props.fp64 !== oldProps.fp64) {\n      const attributeManager = this.getAttributeManager();\n      attributeManager.invalidateAll();\n\n      if (props.fp64 && props.coordinateSystem === COORDINATE_SYSTEM.LNGLAT) {\n        attributeManager.addInstanced({\n          instanceStartEndPositions64xyLow: {\n            size: 4,\n            update: this.calculateInstanceStartEndPositions64xyLow\n          }\n        });\n      } else {\n        attributeManager.remove(['instanceStartEndPositions64xyLow']);\n      }\n    }\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    const {getPath} = this.props;\n    const attributeManager = this.getAttributeManager();\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n    }\n    this.updateAttribute({props, oldProps, changeFlags});\n\n    const geometryChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n\n    if (geometryChanged) {\n      // this.state.paths only stores point positions in each path\n      const paths = props.data.map(getPath);\n      const numInstances = paths.reduce((count, path) => count + path.length - 1, 0);\n\n      this.setState({paths, numInstances});\n      attributeManager.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {\n      rounded,\n      miterLimit,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n      dashJustified\n    } = this.props;\n\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        jointType: Number(rounded),\n        alignMode: Number(dashJustified),\n        widthScale,\n        miterLimit,\n        widthMinPixels,\n        widthMaxPixels\n      })\n    );\n  }\n\n  _getModel(gl) {\n    /*\n     *       _\n     *        \"-_ 1                   3                       5\n     *     _     \"o---------------------o-------------------_-o\n     *       -   / \"\"--..__              '.             _.-' /\n     *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n     *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n     *       \"o----------------------------\"\"-o'    :     /\n     *      0,2                            4 / '.  :     /\n     *                                      /   '.:     /\n     *                                     /     :'.   /\n     *                                    /     :  ', /\n     *                                   /     :     o\n     */\n\n    const SEGMENT_INDICES = [\n      // start corner\n      0,\n      2,\n      1,\n      // body\n      1,\n      2,\n      4,\n      1,\n      4,\n      3,\n      // end corner\n      3,\n      4,\n      5\n    ];\n\n    // [0] position on segment - 0: start, 1: end\n    // [1] side of path - -1: left, 0: center, 1: right\n    // [2] role - 0: offset point 1: joint point\n    const SEGMENT_POSITIONS = [\n      // bevel start corner\n      0,\n      0,\n      1,\n      // start inner corner\n      0,\n      -1,\n      0,\n      // start outer corner\n      0,\n      1,\n      0,\n      // end inner corner\n      1,\n      -1,\n      0,\n      // end outer corner\n      1,\n      1,\n      0,\n      // bevel end corner\n      1,\n      0,\n      1\n    ];\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            indices: new Uint16Array(SEGMENT_INDICES),\n            positions: new Float32Array(SEGMENT_POSITIONS)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  // \"Experimental\" method indended to make it easier to support non-nested arrays in subclasses\n  _getPathLength(path) {\n    return path.length;\n  }\n\n  calculateStartPositions(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0];\n        value[i++] = point[1];\n        value[i++] = point[2] || 0;\n      }\n    });\n  }\n\n  calculateEndPositions(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      for (let ptIndex = 1; ptIndex < path.length; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0];\n        value[i++] = point[1];\n        value[i++] = point[2] || 0;\n      }\n    });\n  }\n\n  calculateInstanceStartEndPositions64xyLow(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const startPoint = path[ptIndex];\n        const endPoint = path[ptIndex + 1];\n        value[i++] = fp64LowPart(startPoint[0]);\n        value[i++] = fp64LowPart(startPoint[1]);\n        value[i++] = fp64LowPart(endPoint[0]);\n        value[i++] = fp64LowPart(endPoint[1]);\n      }\n    });\n  }\n\n  calculateLeftDeltas(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      let prevPoint = isClosed(path) ? path[path.length - 2] : path[0];\n\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0] - prevPoint[0];\n        value[i++] = point[1] - prevPoint[1];\n        value[i++] = point[2] - prevPoint[2] || 0;\n        prevPoint = point;\n      }\n    });\n  }\n\n  calculateRightDeltas(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      for (let ptIndex = 1; ptIndex < path.length; ptIndex++) {\n        const point = path[ptIndex];\n        let nextPoint = path[ptIndex + 1];\n        if (!nextPoint) {\n          nextPoint = isClosed(path) ? path[1] : point;\n        }\n\n        value[i++] = nextPoint[0] - point[0];\n        value[i++] = nextPoint[1] - point[1];\n        value[i++] = nextPoint[2] - point[2] || 0;\n      }\n    });\n  }\n\n  calculateStrokeWidths(attribute) {\n    const {data, getWidth} = this.props;\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const width = getWidth(data[index], index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = width;\n      }\n    });\n  }\n\n  calculateDashArrays(attribute) {\n    const {data, getDashArray} = this.props;\n    if (!getDashArray) {\n      return;\n    }\n\n    const {paths} = this.state;\n    const {value} = attribute;\n    let i = 0;\n    paths.forEach((path, index) => {\n      const dashArray = getDashArray(data[index], index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = dashArray[0];\n        value[i++] = dashArray[1];\n      }\n    });\n  }\n\n  calculateColors(attribute) {\n    const {data, getColor} = this.props;\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const pointColor = getColor(data[index], index);\n      if (isNaN(pointColor[3])) {\n        pointColor[3] = 255;\n      }\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = pointColor[0];\n        value[i++] = pointColor[1];\n        value[i++] = pointColor[2];\n        value[i++] = pointColor[3];\n      }\n    });\n  }\n\n  // Override the default picking colors calculation\n  calculatePickingColors(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const pickingColor = this.encodePickingColor(index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = pickingColor[0];\n        value[i++] = pickingColor[1];\n        value[i++] = pickingColor[2];\n      }\n    });\n  }\n}\n\nPathLayer.layerName = 'PathLayer';\nPathLayer.defaultProps = defaultProps;\n"],"file":"path-layer.js"}