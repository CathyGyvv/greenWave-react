{"version":3,"sources":["../../../src/path-layer/path-layer.js"],"names":["COORDINATE_SYSTEM","Layer","GL","Model","Geometry","fp64","fp64LowPart","vs","vs64","fs","DEFAULT_COLOR","defaultProps","widthScale","widthMinPixels","widthMaxPixels","Number","MAX_SAFE_INTEGER","rounded","miterLimit","dashJustified","getPath","object","path","getColor","color","getWidth","width","getDashArray","isClosed","firstPoint","lastPoint","length","PathLayer","is64bitEnabled","modules","attributeManager","getAttributeManager","addInstanced","instanceStartPositions","size","update","calculateStartPositions","instanceEndPositions","calculateEndPositions","instanceLeftDeltas","calculateLeftDeltas","instanceRightDeltas","calculateRightDeltas","instanceStrokeWidths","accessor","calculateStrokeWidths","defaultValue","instanceDashArrays","calculateDashArrays","instanceColors","type","UNSIGNED_BYTE","calculateColors","instancePickingColors","calculatePickingColors","props","oldProps","changeFlags","invalidateAll","coordinateSystem","LNGLAT","instanceStartEndPositions64xyLow","calculateInstanceStartEndPositions64xyLow","remove","gl","context","state","model","delete","setState","_getModel","updateAttribute","geometryChanged","dataChanged","updateTriggersChanged","all","paths","data","map","numInstances","reduce","count","uniforms","render","Object","assign","jointType","alignMode","SEGMENT_INDICES","SEGMENT_POSITIONS","getShaders","id","geometry","drawMode","TRIANGLES","attributes","indices","Uint16Array","positions","Float32Array","isInstanced","shaderCache","attribute","value","i","forEach","numSegments","ptIndex","point","startPoint","endPoint","prevPoint","nextPoint","index","pathLength","_getPathLength","dashArray","pointColor","isNaN","pickingColor","encodePickingColor","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {COORDINATE_SYSTEM, Layer} from '@deck.gl/core';\nimport {GL, Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './path-layer-vertex.glsl';\nimport vs64 from './path-layer-vertex-64.glsl';\nimport fs from './path-layer-fragment.glsl';\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  widthScale: 1, // stroke width in meters\n  widthMinPixels: 0, //  min stroke width in pixels\n  widthMaxPixels: Number.MAX_SAFE_INTEGER, // max stroke width in pixels\n  rounded: false,\n  miterLimit: 4,\n  fp64: false,\n  dashJustified: false,\n\n  getPath: object => object.path,\n  getColor: object => object.color || DEFAULT_COLOR,\n  getWidth: object => object.width || 1,\n  getDashArray: null\n};\n\nconst isClosed = path => {\n  const firstPoint = path[0];\n  const lastPoint = path[path.length - 1];\n  return (\n    firstPoint[0] === lastPoint[0] &&\n    firstPoint[1] === lastPoint[1] &&\n    firstPoint[2] === lastPoint[2]\n  );\n};\n\nexport default class PathLayer extends Layer {\n  getShaders() {\n    return this.is64bitEnabled()\n      ? {vs: vs64, fs, modules: ['project64', 'picking']}\n      : {vs, fs, modules: ['picking']}; // 'project' module added by default.\n  }\n\n  initializeState() {\n    const attributeManager = this.getAttributeManager();\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceStartPositions: {size: 3, update: this.calculateStartPositions},\n      instanceEndPositions: {size: 3, update: this.calculateEndPositions},\n      instanceLeftDeltas: {size: 3, update: this.calculateLeftDeltas},\n      instanceRightDeltas: {size: 3, update: this.calculateRightDeltas},\n      instanceStrokeWidths: {\n        size: 1,\n        accessor: 'getWidth',\n        update: this.calculateStrokeWidths,\n        defaultValue: 1\n      },\n      instanceDashArrays: {size: 2, accessor: 'getDashArray', update: this.calculateDashArrays},\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        accessor: 'getColor',\n        update: this.calculateColors,\n        defaultValue: DEFAULT_COLOR\n      },\n      instancePickingColors: {size: 3, type: GL.UNSIGNED_BYTE, update: this.calculatePickingColors}\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateAttribute({props, oldProps, changeFlags}) {\n    if (props.fp64 !== oldProps.fp64) {\n      const attributeManager = this.getAttributeManager();\n      attributeManager.invalidateAll();\n\n      if (props.fp64 && props.coordinateSystem === COORDINATE_SYSTEM.LNGLAT) {\n        attributeManager.addInstanced({\n          instanceStartEndPositions64xyLow: {\n            size: 4,\n            update: this.calculateInstanceStartEndPositions64xyLow\n          }\n        });\n      } else {\n        attributeManager.remove(['instanceStartEndPositions64xyLow']);\n      }\n    }\n  }\n\n  updateState({oldProps, props, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    const {getPath} = this.props;\n    const attributeManager = this.getAttributeManager();\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      if (this.state.model) {\n        this.state.model.delete();\n      }\n      this.setState({model: this._getModel(gl)});\n    }\n    this.updateAttribute({props, oldProps, changeFlags});\n\n    const geometryChanged =\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getPath));\n\n    if (geometryChanged) {\n      // this.state.paths only stores point positions in each path\n      const paths = props.data.map(getPath);\n      const numInstances = paths.reduce((count, path) => count + path.length - 1, 0);\n\n      this.setState({paths, numInstances});\n      attributeManager.invalidateAll();\n    }\n  }\n\n  draw({uniforms}) {\n    const {\n      rounded,\n      miterLimit,\n      widthScale,\n      widthMinPixels,\n      widthMaxPixels,\n      dashJustified\n    } = this.props;\n\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        jointType: Number(rounded),\n        alignMode: Number(dashJustified),\n        widthScale,\n        miterLimit,\n        widthMinPixels,\n        widthMaxPixels\n      })\n    );\n  }\n\n  _getModel(gl) {\n    /*\n     *       _\n     *        \"-_ 1                   3                       5\n     *     _     \"o---------------------o-------------------_-o\n     *       -   / \"\"--..__              '.             _.-' /\n     *   _     \"@- - - - - \"\"--..__- - - - x - - - -_.@'    /\n     *    \"-_  /                   \"\"--..__ '.  _,-` :     /\n     *       \"o----------------------------\"\"-o'    :     /\n     *      0,2                            4 / '.  :     /\n     *                                      /   '.:     /\n     *                                     /     :'.   /\n     *                                    /     :  ', /\n     *                                   /     :     o\n     */\n\n    const SEGMENT_INDICES = [\n      // start corner\n      0,\n      2,\n      1,\n      // body\n      1,\n      2,\n      4,\n      1,\n      4,\n      3,\n      // end corner\n      3,\n      4,\n      5\n    ];\n\n    // [0] position on segment - 0: start, 1: end\n    // [1] side of path - -1: left, 0: center, 1: right\n    // [2] role - 0: offset point 1: joint point\n    const SEGMENT_POSITIONS = [\n      // bevel start corner\n      0,\n      0,\n      1,\n      // start inner corner\n      0,\n      -1,\n      0,\n      // start outer corner\n      0,\n      1,\n      0,\n      // end inner corner\n      1,\n      -1,\n      0,\n      // end outer corner\n      1,\n      1,\n      0,\n      // bevel end corner\n      1,\n      0,\n      1\n    ];\n\n    return new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLES,\n          attributes: {\n            indices: new Uint16Array(SEGMENT_INDICES),\n            positions: new Float32Array(SEGMENT_POSITIONS)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n  }\n\n  // \"Experimental\" method indended to make it easier to support non-nested arrays in subclasses\n  _getPathLength(path) {\n    return path.length;\n  }\n\n  calculateStartPositions(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0];\n        value[i++] = point[1];\n        value[i++] = point[2] || 0;\n      }\n    });\n  }\n\n  calculateEndPositions(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      for (let ptIndex = 1; ptIndex < path.length; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0];\n        value[i++] = point[1];\n        value[i++] = point[2] || 0;\n      }\n    });\n  }\n\n  calculateInstanceStartEndPositions64xyLow(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const startPoint = path[ptIndex];\n        const endPoint = path[ptIndex + 1];\n        value[i++] = fp64LowPart(startPoint[0]);\n        value[i++] = fp64LowPart(startPoint[1]);\n        value[i++] = fp64LowPart(endPoint[0]);\n        value[i++] = fp64LowPart(endPoint[1]);\n      }\n    });\n  }\n\n  calculateLeftDeltas(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      const numSegments = path.length - 1;\n      let prevPoint = isClosed(path) ? path[path.length - 2] : path[0];\n\n      for (let ptIndex = 0; ptIndex < numSegments; ptIndex++) {\n        const point = path[ptIndex];\n        value[i++] = point[0] - prevPoint[0];\n        value[i++] = point[1] - prevPoint[1];\n        value[i++] = point[2] - prevPoint[2] || 0;\n        prevPoint = point;\n      }\n    });\n  }\n\n  calculateRightDeltas(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach(path => {\n      for (let ptIndex = 1; ptIndex < path.length; ptIndex++) {\n        const point = path[ptIndex];\n        let nextPoint = path[ptIndex + 1];\n        if (!nextPoint) {\n          nextPoint = isClosed(path) ? path[1] : point;\n        }\n\n        value[i++] = nextPoint[0] - point[0];\n        value[i++] = nextPoint[1] - point[1];\n        value[i++] = nextPoint[2] - point[2] || 0;\n      }\n    });\n  }\n\n  calculateStrokeWidths(attribute) {\n    const {data, getWidth} = this.props;\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const width = getWidth(data[index], index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = width;\n      }\n    });\n  }\n\n  calculateDashArrays(attribute) {\n    const {data, getDashArray} = this.props;\n    if (!getDashArray) {\n      return;\n    }\n\n    const {paths} = this.state;\n    const {value} = attribute;\n    let i = 0;\n    paths.forEach((path, index) => {\n      const dashArray = getDashArray(data[index], index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = dashArray[0];\n        value[i++] = dashArray[1];\n      }\n    });\n  }\n\n  calculateColors(attribute) {\n    const {data, getColor} = this.props;\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const pointColor = getColor(data[index], index);\n      if (isNaN(pointColor[3])) {\n        pointColor[3] = 255;\n      }\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = pointColor[0];\n        value[i++] = pointColor[1];\n        value[i++] = pointColor[2];\n        value[i++] = pointColor[3];\n      }\n    });\n  }\n\n  // Override the default picking colors calculation\n  calculatePickingColors(attribute) {\n    const {paths} = this.state;\n    const {value} = attribute;\n\n    let i = 0;\n    paths.forEach((path, index) => {\n      const pickingColor = this.encodePickingColor(index);\n\n      const pathLength = this._getPathLength(path);\n      for (let ptIndex = 1; ptIndex < pathLength; ptIndex++) {\n        value[i++] = pickingColor[0];\n        value[i++] = pickingColor[1];\n        value[i++] = pickingColor[2];\n      }\n    });\n  }\n}\n\nPathLayer.layerName = 'PathLayer';\nPathLayer.defaultProps = defaultProps;\n"],"file":"path-layer.js"}