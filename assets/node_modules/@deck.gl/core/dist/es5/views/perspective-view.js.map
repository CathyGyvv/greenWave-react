{"version":3,"sources":["../../../src/views/perspective-view.js"],"names":["DEGREES_TO_RADIANS","Math","PI","PerspectiveView","props","x","y","width","height","viewState","eye","lookAt","up","fovy","near","far","aspect","Number","isFinite","fovyRadians","Viewport","id","viewMatrix","projectionMatrix","View","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,qBAAqBC,KAAKC,EAAL,GAAU,GAArC;;IAEqBC,e;;;;;;;;;;;;;iCACNC,K,EAAO;AAAA,UAGhBC,CAHgB,GASdD,KATc,CAGhBC,CAHgB;AAAA,UAIhBC,CAJgB,GASdF,KATc,CAIhBE,CAJgB;AAAA,UAKhBC,KALgB,GASdH,KATc,CAKhBG,KALgB;AAAA,UAMhBC,MANgB,GASdJ,KATc,CAMhBI,MANgB;AAAA,UAQhBC,SARgB,GASdL,KATc,CAQhBK,SARgB;AAAA,UAahBC,GAbgB,GAgBdD,SAhBc,CAahBC,GAbgB;AAAA,8BAgBdD,SAhBc,CAchBE,MAdgB;AAAA,UAchBA,MAdgB,kCAcP,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAdO;AAAA,0BAgBdF,SAhBc,CAehBG,EAfgB;AAAA,UAehBA,EAfgB,8BAeX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAfW,kBAkBlB;AACA;;AACA,UAAMC,OAAOT,MAAMS,IAAN,IAAcJ,UAAUI,IAAxB,IAAgC,EAA7C,CApBkB,CAoB+B;;AACjD,UAAMC,OAAOV,MAAMU,IAAN,IAAcL,UAAUK,IAAxB,IAAgC,CAA7C,CArBkB,CAqB8B;;AAChD,UAAMC,MAAMX,MAAMW,GAAN,IAAaN,UAAUM,GAAvB,IAA8B,GAA1C,CAtBkB,CAsB6B;;AAC/C,UAAMC,SAASC,OAAOC,QAAP,CAAgBT,UAAUO,MAA1B,IAAoCP,UAAUO,MAA9C,GAAuDT,QAAQC,MAA9E;AAEA,UAAMW,cAAcN,OAAOb,kBAA3B;AACA,aAAO,IAAIoB,iBAAJ,CAAa;AAClBC,YAAI,KAAKA,EADS;AAElBhB,YAFkB;AAGlBC,YAHkB;AAIlBC,oBAJkB;AAKlBC,sBALkB;AAMlBc,oBAAY,qBAAY,EAAZ,EAAgBZ,GAAhB,EAAqBC,MAArB,EAA6BC,EAA7B,CANM;AAOlBW,0BAAkB,0BAAiB,EAAjB,EAAqBJ,WAArB,EAAkCH,MAAlC,EAA0CF,IAA1C,EAAgDC,GAAhD;AAPA,OAAb,CAAP;AASD;;;;EApC0CS,a;;;AAuC7CrB,gBAAgBsB,WAAhB,GAA8B,iBAA9B","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\n\nimport mat4_lookAt from 'gl-mat4/lookAt';\nimport mat4_perspective from 'gl-mat4/perspective';\n\nconst DEGREES_TO_RADIANS = Math.PI / 180;\n\nexport default class PerspectiveView extends View {\n  _getViewport(props) {\n    const {\n      // viewport arguments\n      x,\n      y,\n      width, // Width of viewport\n      height, // Height of viewport\n\n      viewState\n    } = props;\n\n    const {\n      // view matrix arguments\n      eye, // Defines eye position\n      lookAt = [0, 0, 0], // Which point is camera looking at, default origin\n      up = [0, 1, 0] // Defines up direction, default positive y axis\n    } = viewState;\n\n    // Projection matrix arguments\n    // TODO - Extracting from viewState is deprecated\n    const fovy = props.fovy || viewState.fovy || 75; // Field of view covered by camera\n    const near = props.near || viewState.near || 1; // Distance of near clipping plane\n    const far = props.far || viewState.far || 100; // Distance of far clipping plane\n    const aspect = Number.isFinite(viewState.aspect) ? viewState.aspect : width / height;\n\n    const fovyRadians = fovy * DEGREES_TO_RADIANS;\n    return new Viewport({\n      id: this.id,\n      x,\n      y,\n      width,\n      height,\n      viewMatrix: mat4_lookAt([], eye, lookAt, up),\n      projectionMatrix: mat4_perspective([], fovyRadians, aspect, near, far)\n    });\n  }\n}\n\nPerspectiveView.displayName = 'PerspectiveView';\n"],"file":"perspective-view.js"}