{"version":3,"sources":["../../../src/utils/positions.js"],"names":["PERCENT_OR_PIXELS_REGEX","parsePosition","value","position","relative","match","length","parseFloat","Error","getPosition","extent","Math","round"],"mappings":";;AAAA,IAAMA,0BAA0B,yBAAhC,C,CAEA;;AACA,OAAO,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AACnC,kBAAeA,KAAf;AACE,SAAK,QAAL;AACE,aAAO;AACLC,kBAAUD,KADL;AAELE,kBAAU;AAFL,OAAP;;AAKF,SAAK,QAAL;AACE,UAAMC,QAAQH,MAAMG,KAAN,CAAYL,uBAAZ,CAAd;;AACA,UAAIK,SAASA,MAAMC,MAAN,IAAgB,CAA7B,EAAgC;AAC9B,YAAMF,WAAWC,MAAM,CAAN,MAAa,GAA9B;AACA,YAAMF,WAAWI,WAAWF,MAAM,CAAN,CAAX,CAAjB;AACA,eAAO;AACLF,oBAAUC,WAAWD,WAAW,GAAtB,GAA4BA,QADjC;AAELC;AAFK,SAAP;AAID;;AACH;;AAEA;AACE;AACA,YAAM,IAAII,KAAJ,2CAA6CN,KAA7C,EAAN;AArBJ;AAuBD;AAED,OAAO,SAASO,WAAT,CAAqBN,QAArB,EAA+BO,MAA/B,EAAuC;AAC5C,SAAOP,SAASC,QAAT,GAAoBO,KAAKC,KAAL,CAAWT,SAASA,QAAT,GAAoBO,MAA/B,CAApB,GAA6DP,SAASA,QAA7E;AACD","sourcesContent":["const PERCENT_OR_PIXELS_REGEX = /([0-9]+\\.?[0-9]*)(%|px)/;\n\n// Takes a number or a string of formats `50%`, `33.3%` or `200px`\nexport function parsePosition(value) {\n  switch (typeof value) {\n    case 'number':\n      return {\n        position: value,\n        relative: false\n      };\n\n    case 'string':\n      const match = value.match(PERCENT_OR_PIXELS_REGEX);\n      if (match && match.length >= 3) {\n        const relative = match[2] === '%';\n        const position = parseFloat(match[1]);\n        return {\n          position: relative ? position / 100 : position,\n          relative\n        };\n      }\n    // fallthrough\n\n    default:\n      // eslint-disable-line\n      throw new Error(`Could not parse position string ${value}`);\n  }\n}\n\nexport function getPosition(position, extent) {\n  return position.relative ? Math.round(position.position * extent) : position.position;\n}\n"],"file":"positions.js"}