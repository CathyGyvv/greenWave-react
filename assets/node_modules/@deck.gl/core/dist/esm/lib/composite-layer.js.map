{"version":3,"sources":["../../../src/lib/composite-layer.js"],"names":["Layer","log","flatten","CompositeLayer","props","internalState","subLayers","info","sublayerProps","opacity","pickable","visible","parameters","getPolygonOffset","highlightedObjectIndex","autoHighlight","highlightColor","coordinateSystem","coordinateOrigin","modelMatrix","newProps","Object","assign","id","updateTriggers","all","needsUpdate","renderLayers","filter","Boolean","layer","parent","layerName"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAAQC,OAAR,QAAsB,kBAAtB;;IAEqBC,c;;;;;AACnB,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,2HACXA,KADW;AAElB;;;;mCAMc;AACb,aAAQ,KAAKC,aAAL,IAAsB,KAAKA,aAAL,CAAmBC,SAA1C,IAAwD,EAA/D;AACD,K,CAED;AACA;;;;sCACkB,CAAE,C,CAEpB;AACA;AACA;AACA;;;;yCACuB;AAAA,UAAPC,IAAO,QAAPA,IAAO;AACrB,aAAOA,IAAP;AACD,K,CAED;;;;mCACe;AACb,aAAO,IAAP;AACD,K,CAED;;;;qCACiBC,a,EAAe;AAAA,wBAa1B,KAAKJ,KAbqB;AAAA,UAE5BK,OAF4B,eAE5BA,OAF4B;AAAA,UAG5BC,QAH4B,eAG5BA,QAH4B;AAAA,UAI5BC,OAJ4B,eAI5BA,OAJ4B;AAAA,UAK5BC,UAL4B,eAK5BA,UAL4B;AAAA,UAM5BC,gBAN4B,eAM5BA,gBAN4B;AAAA,UAO5BC,sBAP4B,eAO5BA,sBAP4B;AAAA,UAQ5BC,aAR4B,eAQ5BA,aAR4B;AAAA,UAS5BC,cAT4B,eAS5BA,cAT4B;AAAA,UAU5BC,gBAV4B,eAU5BA,gBAV4B;AAAA,UAW5BC,gBAX4B,eAW5BA,gBAX4B;AAAA,UAY5BC,WAZ4B,eAY5BA,WAZ4B;AAc9B,UAAMC,WAAW;AACfX,wBADe;AAEfC,0BAFe;AAGfC,wBAHe;AAIfC,8BAJe;AAKfC,0CALe;AAMfC,sDANe;AAOfC,oCAPe;AAQfC,sCARe;AASfC,0CATe;AAUfC,0CAVe;AAWfC;AAXe,OAAjB;;AAcA,UAAIX,aAAJ,EAAmB;AACjBa,eAAOC,MAAP,CAAcF,QAAd,EAAwBZ,aAAxB,EAAuC;AACrCe,wBAAO,KAAKnB,KAAL,CAAWmB,EAAlB,cAAwBf,cAAce,EAAtC,CADqC;AAErCC,0BAAgBH,OAAOC,MAAP,CACd;AACEG,iBAAK,KAAKrB,KAAL,CAAWoB,cAAX,CAA0BC;AADjC,WADc,EAIdjB,cAAcgB,cAJA;AAFqB,SAAvC;AASD;;AAED,aAAOJ,QAAP;AACD,K,CAED;;;;oCACgB;AAAA,UACTd,SADS,GACI,KAAKD,aADT,CACTC,SADS;;AAEd,UAAIA,aAAa,CAAC,KAAKoB,WAAL,EAAlB,EAAsC;AACpCzB,YAAIA,GAAJ,CAAQ,CAAR,6CAA+C,IAA/C,GAAuD,KAAKI,aAAL,CAAmBC,SAA1E;AACD,OAFD,MAEO;AACLA,oBAAY,KAAKqB,YAAL,EAAZ,CADK,CAEL;AACA;AACA;;AACArB,oBAAYJ,QAAQI,SAAR,EAAmB;AAACsB,kBAAQC;AAAT,SAAnB,CAAZ;AACA,aAAKxB,aAAL,CAAmBC,SAAnB,GAA+BA,SAA/B;AACAL,YAAIA,GAAJ,CAAQ,CAAR,mDAAqD,IAArD,GAA6DK,SAA7D;AACD,OAZa,CAcd;AACA;;;AAfc;AAAA;AAAA;;AAAA;AAgBd,6BAAoBA,SAApB,8HAA+B;AAAA,cAApBwB,KAAoB;AAC7BA,gBAAMC,MAAN,GAAe,IAAf;AACD;AAlBa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBf;;;wBAzFiB;AAChB,aAAO,IAAP;AACD;;;;EAPyC/B,K;;SAAvBG,c;AAiGrBA,eAAe6B,SAAf,GAA2B,gBAA3B","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport Layer from './layer';\nimport log from '../utils/log';\nimport {flatten} from '../utils/flatten';\n\nexport default class CompositeLayer extends Layer {\n  constructor(props) {\n    super(props);\n  }\n\n  get isComposite() {\n    return true;\n  }\n\n  getSubLayers() {\n    return (this.internalState && this.internalState.subLayers) || [];\n  }\n\n  // initializeState is usually not needed for composite layers\n  // Provide empty definition to disable check for missing definition\n  initializeState() {}\n\n  // called to augment the info object that is bubbled up from a sublayer\n  // override Layer.getPickingInfo() because decoding / setting uniform do\n  // not apply to a composite layer.\n  // @return null to cancel event\n  getPickingInfo({info}) {\n    return info;\n  }\n\n  // Implement to generate subLayers\n  renderLayers() {\n    return null;\n  }\n\n  // Returns sub layer props for a specific sublayer\n  getSubLayerProps(sublayerProps) {\n    const {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      modelMatrix\n    } = this.props;\n    const newProps = {\n      opacity,\n      pickable,\n      visible,\n      parameters,\n      getPolygonOffset,\n      highlightedObjectIndex,\n      autoHighlight,\n      highlightColor,\n      coordinateSystem,\n      coordinateOrigin,\n      modelMatrix\n    };\n\n    if (sublayerProps) {\n      Object.assign(newProps, sublayerProps, {\n        id: `${this.props.id}-${sublayerProps.id}`,\n        updateTriggers: Object.assign(\n          {\n            all: this.props.updateTriggers.all\n          },\n          sublayerProps.updateTriggers\n        )\n      });\n    }\n\n    return newProps;\n  }\n\n  // Called by layer manager to render subLayers\n  _renderLayers() {\n    let {subLayers} = this.internalState;\n    if (subLayers && !this.needsUpdate()) {\n      log.log(3, `Composite layer reused subLayers ${this}`, this.internalState.subLayers)();\n    } else {\n      subLayers = this.renderLayers();\n      // Flatten the returned array, removing any null, undefined or false\n      // this allows layers to render sublayers conditionally\n      // (see CompositeLayer.renderLayers docs)\n      subLayers = flatten(subLayers, {filter: Boolean});\n      this.internalState.subLayers = subLayers;\n      log.log(2, `Composite layer rendered new subLayers ${this}`, subLayers)();\n    }\n\n    // populate reference to parent layer (this layer)\n    // NOTE: needs to be done even when reusing layers as the parent may have changed\n    for (const layer of subLayers) {\n      layer.parent = this;\n    }\n  }\n}\n\nCompositeLayer.layerName = 'CompositeLayer';\n"],"file":"composite-layer.js"}