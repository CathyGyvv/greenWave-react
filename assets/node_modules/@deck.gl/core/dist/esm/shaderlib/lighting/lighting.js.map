{"version":3,"sources":["../../../../src/shaderlib/lighting/lighting.js"],"names":["lightingShader","project","COORDINATE_SYSTEM","projectPosition","memoize","name","dependencies","vs","getUniforms","deprecations","type","old","new","deprecated","INITIAL_MODULE_OPTIONS","DEFAULT_LIGHTS_POSITION","DEFAULT_LIGHTS_STRENGTH","DEFAULT_AMBIENT_RATIO","DEFAULT_DIFFUSE_RATIO","DEFAULT_SPECULAR_RATIO","DEFAULT_COORDINATE_ORIGIN","getMemoizedLightPositions","preprojectLightPositions","opts","lightSettings","numberOfLights","lightsPosition","lightsStrength","coordinateSystem","LNGLAT","coordinateOrigin","modelMatrix","ambientRatio","diffuseRatio","specularRatio","lightsPositionWorld","viewport","fromCoordinateSystem","fromCoordinateOrigin","lighting_lightPositions","lighting_lightStrengths","lighting_ambientRatio","lighting_diffuseRatio","lighting_specularRatio","lighting_numberOfLights","projectionParameters","i","position","slice"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport lightingShader from './lighting.glsl';\nimport project from '../project/project';\nimport {COORDINATE_SYSTEM} from '../../lib/constants';\nimport {projectPosition} from '../project/project-functions';\nimport memoize from '../../utils/memoize';\n\nexport default {\n  name: 'lighting',\n  dependencies: [project],\n  vs: lightingShader,\n  getUniforms,\n  deprecations: [\n    // Deprecated lighting functions\n    {type: 'function', old: 'getLightWeight', new: 'lighting_getLightWeight', deprecated: true}\n  ]\n};\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nconst DEFAULT_LIGHTS_POSITION = [-122.45, 37.75, 8000];\nconst DEFAULT_LIGHTS_STRENGTH = [2.0, 0.0];\nconst DEFAULT_AMBIENT_RATIO = 0.4;\nconst DEFAULT_DIFFUSE_RATIO = 0.6;\nconst DEFAULT_SPECULAR_RATIO = 0.8;\nconst DEFAULT_COORDINATE_ORIGIN = [0, 0, 0];\n\nconst getMemoizedLightPositions = memoize(preprojectLightPositions);\n\n// TODO: support partial update, e.g.\n// `lightedModel.setModuleParameters({diffuseRatio: 0.3});`\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (!opts.lightSettings) {\n    return {};\n  }\n\n  const {\n    numberOfLights = 1,\n\n    lightsPosition = DEFAULT_LIGHTS_POSITION,\n    lightsStrength = DEFAULT_LIGHTS_STRENGTH,\n    coordinateSystem = COORDINATE_SYSTEM.LNGLAT,\n    coordinateOrigin = DEFAULT_COORDINATE_ORIGIN,\n    modelMatrix = null,\n\n    ambientRatio = DEFAULT_AMBIENT_RATIO,\n    diffuseRatio = DEFAULT_DIFFUSE_RATIO,\n    specularRatio = DEFAULT_SPECULAR_RATIO\n  } = opts.lightSettings;\n\n  // Pre-project light positions\n  const lightsPositionWorld = getMemoizedLightPositions({\n    lightsPosition,\n    numberOfLights,\n    viewport: opts.viewport,\n    modelMatrix,\n    coordinateSystem: opts.coordinateSystem,\n    coordinateOrigin: opts.coordinateOrigin,\n    fromCoordinateSystem: coordinateSystem,\n    fromCoordinateOrigin: coordinateOrigin\n  });\n\n  return {\n    lighting_lightPositions: lightsPositionWorld,\n    lighting_lightStrengths: lightsStrength,\n    lighting_ambientRatio: ambientRatio,\n    lighting_diffuseRatio: diffuseRatio,\n    lighting_specularRatio: specularRatio,\n    lighting_numberOfLights: numberOfLights\n  };\n}\n\n// Pre-project light positions\nfunction preprojectLightPositions({\n  lightsPosition,\n  numberOfLights,\n  viewport,\n  modelMatrix,\n  coordinateSystem,\n  coordinateOrigin,\n  fromCoordinateSystem,\n  fromCoordinateOrigin\n}) {\n  const projectionParameters = {\n    viewport,\n    modelMatrix,\n    coordinateSystem,\n    coordinateOrigin,\n    fromCoordinateSystem,\n    fromCoordinateOrigin\n  };\n\n  const lightsPositionWorld = [];\n  for (let i = 0; i < numberOfLights; i++) {\n    const position = projectPosition(lightsPosition.slice(i * 3, i * 3 + 3), projectionParameters);\n\n    lightsPositionWorld[i * 3] = position[0];\n    lightsPositionWorld[i * 3 + 1] = position[1];\n    lightsPositionWorld[i * 3 + 2] = position[2];\n  }\n\n  return lightsPositionWorld;\n}\n"],"file":"lighting.js"}