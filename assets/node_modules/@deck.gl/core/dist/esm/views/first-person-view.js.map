{"version":3,"sources":["../../../src/views/first-person-view.js"],"names":["View","Viewport","Matrix4","experimental","SphericalCoordinates","getDirectionFromBearingAndPitch","bearing","pitch","spherical","direction","toVector3","normalize","FirstPersonView","props","viewState","modelMatrix","up","dir","center","transformDirection","viewMatrix","lookAt","eye","Object","assign","zoom","displayName"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,OAAR,EAAiBC,YAAjB,QAAoC,SAApC;IACOC,oB,GAAwBD,Y,CAAxBC,oB;;AAEP,SAASC,+BAAT,OAA2D;AAAA,MAAjBC,OAAiB,QAAjBA,OAAiB;AAAA,MAARC,KAAQ,QAARA,KAAQ;AACzD,MAAMC,YAAY,IAAIJ,oBAAJ,CAAyB;AAACE,oBAAD;AAAUC;AAAV,GAAzB,CAAlB;AACA,MAAME,YAAYD,UAAUE,SAAV,GAAsBC,SAAtB,EAAlB;AACA,SAAOF,SAAP;AACD;;IAEoBG,e;;;;;;;;;;;;;iCACNC,K,EAAO;AAClB;AADkB,6BAOdA,MAAMC,SAPQ;AAAA,mDAIhBC,WAJgB;AAAA,UAIhBA,WAJgB,sCAIF,IAJE;AAAA,UAKhBT,OALgB,oBAKhBA,OALgB;AAAA,iDAMhBU,EANgB;AAAA,UAMhBA,EANgB,oCAMX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANW,wBASlB;;AACA,UAAMC,MAAMZ,gCAAgC;AAC1CC,wBAD0C;AAE1CC,eAAO;AAFmC,OAAhC,CAAZ,CAVkB,CAelB;;AACA,UAAMW,SAASH,cAAcA,YAAYI,kBAAZ,CAA+BF,GAA/B,CAAd,GAAoDA,GAAnE,CAhBkB,CAkBlB;;AACA,UAAMG,aAAa,IAAIlB,OAAJ,GAAcmB,MAAd,CAAqB;AAACC,aAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN;AAAiBJ,sBAAjB;AAAyBF;AAAzB,OAArB,CAAnB;AAEA,aAAO,IAAIf,QAAJ,CACLsB,OAAOC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AACvBY,cAAM,IADiB;AACX;AACZL;AAFuB,OAAzB,CADK,CAAP;AAMD;;;;EA5B0CpB,I;;SAAxBY,e;AA+BrBA,gBAAgBc,WAAhB,GAA8B,iBAA9B","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\nimport {Matrix4, experimental} from 'math.gl';\nconst {SphericalCoordinates} = experimental;\n\nfunction getDirectionFromBearingAndPitch({bearing, pitch}) {\n  const spherical = new SphericalCoordinates({bearing, pitch});\n  const direction = spherical.toVector3().normalize();\n  return direction;\n}\n\nexport default class FirstPersonView extends View {\n  _getViewport(props) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {\n      // view matrix arguments\n      modelMatrix = null,\n      bearing,\n      up = [0, 0, 1] // Defines up direction, default positive z axis,\n    } = props.viewState;\n\n    // Always calculate direction from bearing and pitch\n    const dir = getDirectionFromBearingAndPitch({\n      bearing,\n      pitch: 89\n    });\n\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;\n\n    // Just the direction. All the positioning is done in viewport.js\n    const viewMatrix = new Matrix4().lookAt({eye: [0, 0, 0], center, up});\n\n    return new Viewport(\n      Object.assign({}, props, {\n        zoom: null, // triggers meter level zoom\n        viewMatrix\n      })\n    );\n  }\n}\n\nFirstPersonView.displayName = 'FirstPersonView';\n"],"file":"first-person-view.js"}