{"version":3,"sources":["../../../src/views/first-person-view.js"],"names":["View","Viewport","Matrix4","experimental","SphericalCoordinates","getDirectionFromBearingAndPitch","bearing","pitch","spherical","direction","toVector3","normalize","FirstPersonView","_getViewport","props","viewState","modelMatrix","up","dir","center","transformDirection","viewMatrix","lookAt","eye","Object","assign","zoom","displayName"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAAQC,OAAR,EAAiBC,YAAjB,QAAoC,SAApC;MACOC,oB,GAAwBD,Y,CAAxBC,oB;;AAEP,SAASC,+BAAT,CAAyC;AAACC,SAAD;AAAUC;AAAV,CAAzC,EAA2D;AACzD,QAAMC,YAAY,IAAIJ,oBAAJ,CAAyB;AAACE,WAAD;AAAUC;AAAV,GAAzB,CAAlB;AACA,QAAME,YAAYD,UAAUE,SAAV,GAAsBC,SAAtB,EAAlB;AACA,SAAOF,SAAP;AACD;;AAED,eAAe,MAAMG,eAAN,SAA8BZ,IAA9B,CAAmC;AAChDa,eAAaC,KAAb,EAAoB;AAClB;AADkB,6BAOdA,MAAMC,SAPQ;AAAA,mDAIhBC,WAJgB;AAAA,UAIhBA,WAJgB,sCAIF,IAJE;AAAA,UAKhBV,OALgB,oBAKhBA,OALgB;AAAA,iDAMhBW,EANgB;AAAA,UAMhBA,EANgB,oCAMX,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANW,wBASlB;;AACA,UAAMC,MAAMb,gCAAgC;AAC1CC,aAD0C;AAE1CC,aAAO;AAFmC,KAAhC,CAAZ,CAVkB,CAelB;;AACA,UAAMY,SAASH,cAAcA,YAAYI,kBAAZ,CAA+BF,GAA/B,CAAd,GAAoDA,GAAnE,CAhBkB,CAkBlB;;AACA,UAAMG,aAAa,IAAInB,OAAJ,GAAcoB,MAAd,CAAqB;AAACC,WAAK,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAN;AAAiBJ,YAAjB;AAAyBF;AAAzB,KAArB,CAAnB;AAEA,WAAO,IAAIhB,QAAJ,CACLuB,OAAOC,MAAP,CAAc,EAAd,EAAkBX,KAAlB,EAAyB;AACvBY,YAAM,IADiB;AACX;AACZL;AAFuB,KAAzB,CADK,CAAP;AAMD;;AA5B+C;AA+BlDT,gBAAgBe,WAAhB,GAA8B,iBAA9B","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\nimport {Matrix4, experimental} from 'math.gl';\nconst {SphericalCoordinates} = experimental;\n\nfunction getDirectionFromBearingAndPitch({bearing, pitch}) {\n  const spherical = new SphericalCoordinates({bearing, pitch});\n  const direction = spherical.toVector3().normalize();\n  return direction;\n}\n\nexport default class FirstPersonView extends View {\n  _getViewport(props) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {\n      // view matrix arguments\n      modelMatrix = null,\n      bearing,\n      up = [0, 0, 1] // Defines up direction, default positive z axis,\n    } = props.viewState;\n\n    // Always calculate direction from bearing and pitch\n    const dir = getDirectionFromBearingAndPitch({\n      bearing,\n      pitch: 89\n    });\n\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;\n\n    // Just the direction. All the positioning is done in viewport.js\n    const viewMatrix = new Matrix4().lookAt({eye: [0, 0, 0], center, up});\n\n    return new Viewport(\n      Object.assign({}, props, {\n        zoom: null, // triggers meter level zoom\n        viewMatrix\n      })\n    );\n  }\n}\n\nFirstPersonView.displayName = 'FirstPersonView';\n"],"file":"first-person-view.js"}