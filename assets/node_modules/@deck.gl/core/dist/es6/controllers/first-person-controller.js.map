{"version":3,"sources":["../../../src/controllers/first-person-controller.js"],"names":["Controller","ViewState","Vector3","clamp","assert","MOVEMENT_SPEED","ROTATION_STEP_DEGREES","ensureFinite","value","fallbackValue","Number","isFinite","FirstPersonState","constructor","width","height","position","bearing","pitch","longitude","latitude","zoom","syncBearing","bounds","startPanEventPosition","startPanPosition","startRotateCenter","startRotateViewport","startZoomPos","startZoom","_interactiveState","getInteractiveState","panStart","pos","_viewportProps","translationX","translationY","_getUpdatedState","pan","startPos","deltaX","deltaY","panEnd","startPanPos","rotateStart","rotate","deltaScaleX","deltaScaleY","rotateEnd","zoomStart","scale","minZoom","maxZoom","newZoom","cx","cy","newTranslationX","newTranslationY","moveBackward","moveForward","zoomEnd","moveLeft","newBearing","moveRight","direction","getDirection","delta","normalize","add","moveUp","moveDown","zoomIn","zoomOut","newProps","Object","assign","FirstPersonController","props"],"mappings":"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","sourcesContent":["import Controller from './controller';\nimport ViewState from './view-state';\n\nimport {Vector3, clamp} from 'math.gl';\nimport assert from '../utils/assert';\n\nconst MOVEMENT_SPEED = 1; // 1 meter per keyboard click\nconst ROTATION_STEP_DEGREES = 2;\n\n/* Helpers */\n\nfunction ensureFinite(value, fallbackValue) {\n  return Number.isFinite(value) ? value : fallbackValue;\n}\n\nclass FirstPersonState extends ViewState {\n  constructor({\n    /* Viewport arguments */\n    width, // Width of viewport\n    height, // Height of viewport\n\n    // Position and orientation\n    position, // typically in meters from anchor point\n\n    bearing, // Rotation around y axis\n    pitch, // Rotation around x axis\n\n    // Geospatial anchor\n    longitude,\n    latitude,\n    zoom,\n\n    syncBearing = true, // Whether to lock bearing to direction\n\n    // Constraints - simple movement limit\n    // Bounding box of the world, in the shape of {minX, maxX, minY, maxY, minZ, maxZ}\n    bounds,\n\n    /** Interaction states, required to calculate change during transform */\n    // Model state when the pan operation first started\n    startPanEventPosition,\n    startPanPosition,\n\n    // Model state when the rotate operation first started\n    startRotateCenter,\n    startRotateViewport,\n\n    // Model state when the zoom operation first started\n    startZoomPos,\n    startZoom\n  }) {\n    super({\n      width,\n      height,\n      position,\n      bearing,\n      pitch,\n      longitude,\n      latitude,\n      zoom\n    });\n\n    this._interactiveState = {\n      startPanEventPosition,\n      startPanPosition,\n      startRotateCenter,\n      startRotateViewport,\n      startZoomPos,\n      startZoom\n    };\n  }\n\n  /* Public API */\n\n  getInteractiveState() {\n    return this._interactiveState;\n  }\n\n  /**\n   * Start panning\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  panStart({pos}) {\n    const {translationX, translationY} = this._viewportProps;\n\n    return this._getUpdatedState({\n      startPanPosition: [translationX, translationY],\n      startPanEventPosition: pos\n    });\n  }\n\n  /**\n   * Pan\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  pan({pos, startPos}) {\n    const startPanEventPosition = this._interactiveState.startPanEventPosition || startPos;\n    assert(startPanEventPosition, '`startPanEventPosition` props is required');\n\n    let [translationX, translationY] = this._interactiveState.startPanPosition || [];\n    translationX = ensureFinite(translationX, this._viewportProps.translationX);\n    translationY = ensureFinite(translationY, this._viewportProps.translationY);\n\n    const deltaX = pos[0] - startPanEventPosition[0];\n    const deltaY = pos[1] - startPanEventPosition[1];\n\n    return this._getUpdatedState({\n      translationX: translationX + deltaX,\n      translationY: translationY - deltaY\n    });\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd() {\n    return this._getUpdatedState({\n      startPanPosition: null,\n      startPanPos: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  rotateStart({pos}) {\n    return this._getUpdatedState({\n      startRotateCenter: this._viewportProps.position,\n      startRotateViewport: this._viewportProps\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {[Number, Number]} pos - position on screen where the pointer is\n   */\n  rotate({deltaScaleX, deltaScaleY}) {\n    const {bearing, pitch} = this._viewportProps;\n\n    return this._getUpdatedState({\n      bearing: bearing + deltaScaleX * 10,\n      pitch: pitch - deltaScaleY * 10\n    });\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd() {\n    return this._getUpdatedState({\n      startRotateCenter: null,\n      startRotateViewport: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {[Number, Number]} pos - position on screen where the pointer grabs\n   */\n  zoomStart({pos}) {\n    return this._getUpdatedState({\n      startZoomPos: pos,\n      startZoom: this._viewportProps.zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {[Number, Number]} pos - position on screen where the current center is\n   * @param {[Number, Number]} startPos - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({pos, startPos, scale}) {\n    const {zoom, minZoom, maxZoom, width, height, translationX, translationY} = this._viewportProps;\n\n    const startZoomPos = this._interactiveState.startZoomPos || startPos || pos;\n\n    const newZoom = clamp(zoom * scale, minZoom, maxZoom);\n    const deltaX = pos[0] - startZoomPos[0];\n    const deltaY = pos[1] - startZoomPos[1];\n\n    // Zoom around the center position\n    const cx = startZoomPos[0] - width / 2;\n    const cy = height / 2 - startZoomPos[1];\n    /* eslint-disable no-unused-vars */\n    const newTranslationX = cx - (cx - translationX) * newZoom / zoom + deltaX;\n    const newTranslationY = cy - (cy - translationY) * newZoom / zoom - deltaY;\n    /* eslint-enable no-unused-vars */\n\n    // return this._getUpdatedState({\n    //   position\n    //   translationX: newTranslationX,\n    //   translationY: newTranslationY\n    // });\n\n    // TODO HACK\n    return newZoom / zoom < 1 ? this.moveBackward() : this.moveForward();\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd() {\n    return this._getUpdatedState({\n      startZoomPos: null,\n      startZoom: null\n    });\n  }\n\n  moveLeft() {\n    const {bearing} = this._viewportProps;\n    const newBearing = bearing - ROTATION_STEP_DEGREES;\n    return this._getUpdatedState({\n      bearing: newBearing\n    });\n  }\n\n  moveRight() {\n    const {bearing} = this._viewportProps;\n    const newBearing = bearing + ROTATION_STEP_DEGREES;\n    return this._getUpdatedState({\n      bearing: newBearing\n    });\n  }\n\n  moveForward() {\n    const {position} = this._viewportProps;\n    const direction = this.getDirection();\n    const delta = new Vector3(direction).normalize().scale(MOVEMENT_SPEED);\n    return this._getUpdatedState({\n      position: new Vector3(position).add(delta)\n    });\n  }\n\n  moveBackward() {\n    const {position} = this._viewportProps;\n    const direction = this.getDirection();\n    const delta = new Vector3(direction).normalize().scale(-MOVEMENT_SPEED);\n    return this._getUpdatedState({\n      position: new Vector3(position).add(delta)\n    });\n  }\n\n  moveUp() {\n    const {position} = this._viewportProps;\n    const delta = [0, 0, 1];\n    return this._getUpdatedState({\n      position: new Vector3(position).add(delta)\n    });\n  }\n\n  moveDown() {\n    const {position} = this._viewportProps;\n    const delta = position[2] >= 1 ? [0, 0, -1] : [0, 0, 0];\n    return this._getUpdatedState({\n      position: new Vector3(position).add(delta)\n    });\n  }\n\n  zoomIn() {\n    return this._getUpdatedState({\n      zoom: this._viewportProps.zoom + 0.2\n    });\n  }\n\n  zoomOut() {\n    return this._getUpdatedState({\n      zoom: this._viewportProps.zoom - 0.2\n    });\n  }\n\n  /* Private methods */\n\n  _getUpdatedState(newProps) {\n    // Update _viewportProps\n    return new FirstPersonState(\n      Object.assign({}, this._viewportProps, this._interactiveState, newProps)\n    );\n  }\n}\n\nexport default class FirstPersonController extends Controller {\n  constructor(props) {\n    super(FirstPersonState, props);\n  }\n}\n"],"file":"first-person-controller.js"}